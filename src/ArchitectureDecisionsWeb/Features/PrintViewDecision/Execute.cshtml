@using ArchitectureDecisionsCore
@using Markdig
@model ArchitectureDecisionsWeb.Features.PrintViewDecision.ViewModel;
@inject MarkdownPipeline Pipeline;
@{
    ViewData["Title"] = Model.Decision.DisplayName;
    Layout = "";
}
<html lang="en">
<head>
    <title>@Model.Decision.DisplayName</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css"/>
</head>
<body>
<div class="container">

    <div class="text-left">
        <h1>@Html.Raw(Model.Decision.DisplayName)</h1>
    </div>

    <div class="text-left">
        <h2>Problem Statement</h2>
        @Html.Raw(Markdown.ToHtml(Model.Decision.ProblemStatement, Pipeline))
    </div>
    <hr/>
    <div class="text-left">
        <h2>Decision Criteria</h2>
        <p>
            Each option will be rated against these criteria. The criteria are ordered by their importance to the outcome.
        </p>
        <h4>Primary Criteria</h4>
        <dl class="row">
            @foreach (var criteria in (Model.Decision.SolutionCriteria ?? Enumerable.Empty<Criteria>()).Where(x => x.IsPrimary))
            {
                <dt class="col-sm-3" id="@("criteria-" + criteria.Id)">@criteria.Description</dt>
                <dd class="col-sm-9">@Html.Raw(Markdig.Markdown.ToHtml(criteria.Definition ?? string.Empty, Pipeline))</dd>
            }
        </dl>
        <hr/>
        @if ((Model.Decision.SolutionCriteria ?? Enumerable.Empty<Criteria>()).Any(x => !x.IsPrimary))
        {
            <h5>Secondary Criteria</h5>
            <dl style="font-size: smaller" class="row">
                @foreach (var criteria in (Model.Decision.SolutionCriteria ?? Enumerable.Empty<Criteria>()).Where(x => !x.IsPrimary))
                {
                    <dt class="col-sm-3" id="@("criteria-" + criteria.Id)">@criteria.Description</dt>
                    <dd class="col-sm-9">@Html.Raw(Markdig.Markdown.ToHtml(criteria.Definition ?? string.Empty, Pipeline))</dd>
                }
            </dl>
        }
    </div>
    <hr/>
    <div class="text-left">
        <h4>Primary Criteria Comparison</h4>
        @await Html.PartialAsync("ComparisonView", new Tuple<Decision, bool>(Model.Decision, true))
        @if ((Model.Decision.SolutionCriteria ?? Enumerable.Empty<Criteria>()).Any(x => !x.IsPrimary))
        {
            <hr/>
            <h5>Supplementary Criteria Comparison</h5>
            <div style="font-size: 0.5em">
                @await Html.PartialAsync("ComparisonView", new Tuple<Decision, bool>(Model.Decision, false))
            </div>
        }
    </div>
    <hr/>
    <div class="text-left">
        <div>
            <h2>Options</h2>
        </div>
        @foreach (var option in Model.Decision.Options ?? Enumerable.Empty<Option>())
        {
            <div id="option-@(option.Id)">
                <h3 class="mb-1">
                    @if (Model.Decision.ChosenOption == option.Id)
                    {
                        <span class="badge bg-success badge-pill">✓</span>
                    }
                    @option.Name
                </h3>
            </div>
            <div>
                @Html.Raw(Markdown.ToHtml(option.Description ?? string.Empty, Pipeline))
            </div>
            <div>
                @if (!string.IsNullOrWhiteSpace(option.DiagramFile))
                {
                    <img src="/optionimages/@(option.DiagramFile)" alt="Architecture Diagram"/>
                }
                @if (!string.IsNullOrWhiteSpace(option.Diagram))
                {
                    @Html.Raw(option.Diagram)
                }
            </div>
            <hr/>
        }
    </div>

    @if ((Model.Decision.Stakeholders ?? Enumerable.Empty<Stakeholder>()).Any())
    {
        <div class="text-left">
            <h4>Stakeholders</h4>
            <table class="table table-striped">
                <thead>
                <tr>
                    <th scope="row">Name</th>
                    <th scope="row">Role</th>
                    <th scope="row">Socialised</th>
                </tr>
                </thead>
                <tbody>

                @foreach (var stakeholder in Model.Decision.Stakeholders ?? Enumerable.Empty<Stakeholder>())
                {
                    <tr>
                        <th scope="row">@stakeholder.Name</th>
                        <td>@stakeholder.Role</td>
                        <td>
                            @if (stakeholder.Socialised)
                            {
                                <span class="badge bg-success badge-pill">✓</span>
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
    }
</div>
</body>
</html>