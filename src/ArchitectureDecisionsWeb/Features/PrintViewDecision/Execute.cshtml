@using ArchitectureDecisionsCore
@model ArchitectureDecisionsWeb.Features.PrintViewDecision.ViewModel;
@{
    ViewData["Title"] = Model.Decision.DisplayName;
    Layout = "";
}
<html>
<head>
    <title>@Model.Decision.DisplayName</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css"/>
</head>
<body>
<div class="container-lg">

    <div class="text-left">
        <h1>@Html.Raw(Model.Decision.DisplayName)</h1>
    </div>

    <div class="text-left">
        <h2>Problem Statement</h2>
        @Html.Raw(Markdig.Markdown.ToHtml(Model.Decision.ProblemStatement))
    </div>
    <hr/>
    <div class="text-left">
        <h2>Decision Criteria</h2>
        <p>
            Each option will be rated against these criteria. The criteria are ordered by their importance to the outcome.
        </p>
        <h4>Primary Criteria</h4>
        <dl class="row">
            @foreach (var criteria in (Model.Decision.SolutionCriteria ?? Enumerable.Empty<Criteria>()).Where(x => x.IsPrimary))
            {
                <dt class="col-sm-3">@criteria.Description</dt>
                <dd class="col-sm-9">@Html.Raw(Markdig.Markdown.ToHtml(criteria.Definition))</dd>
            }
        </dl>
        <h4>Secondary Criteria</h4>
        <dl class="row">
            @foreach (var criteria in (Model.Decision.SolutionCriteria ?? Enumerable.Empty<Criteria>()).Where(x => !x.IsPrimary))
            {
                <dt class="col-sm-3">@criteria.Description</dt>
                <dd class="col-sm-9">@Html.Raw(Markdig.Markdown.ToHtml(criteria.Definition))</dd>
            }
        </dl>
    </div>
    <hr/>
    <div class="text-left">
        <h2>Options</h2>
        @foreach (var option in Model.Decision.Options ?? Enumerable.Empty<Option>())
        {
            <h3 class="mb-1">
                @if (Model.Decision.ChosenOption == option.Id)
                {
                    <span class="badge bg-success badge-pill">✓</span>
                }
                @option.Name
            </h3>
            <div class="row">
                <div class="col-4">
                    @Html.Raw(option.Description)
                </div>
                <div class="col-8">
                    @Html.Raw(option.Diagram)
                </div>
            </div>
            <hr/>
        }
    </div>
    <hr/>
    <div class="text-left">
        <h4>Comparison</h4>
        <h5>Primary Criteria</h5>
        @await Html.PartialAsync("ComparisonView", new Tuple<Decision, bool>(Model.Decision, true))
        <hr/>
        <h5>Supplementary Criteria</h5>
        @await Html.PartialAsync("ComparisonView", new Tuple<Decision, bool>(Model.Decision, false))
    </div>

    <div class="text-left">
        <h4>Stakeholders</h4>
        <table class="table table-striped">
            <thead>
            <tr>
                <th scope="row">Name</th>
                <th scope="row">Role</th>
                <th scope="row">Socialised</th>
            </tr>
            </thead>
            <tbody>

            @foreach (var stakeholder in Model.Decision.Stakeholders ?? Enumerable.Empty<Stakeholder>())
            {
                <tr>
                    <th scope="row">@stakeholder.Name</th>
                    <td>@stakeholder.Role</td>
                    <td>
                        @if (stakeholder.Socialised)
                        {
                            <span class="badge bg-success badge-pill">✓</span>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
</body>
</html>