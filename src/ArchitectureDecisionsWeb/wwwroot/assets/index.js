var gh=Object.defineProperty;var vh=(e,t,n)=>t in e?gh(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var Q=(e,t,n)=>(vh(e,typeof t!="symbol"?t+"":t,n),n),yh=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var to=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)};var vl=(e,t,n)=>(yh(e,t,"access private method"),n);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))r(l);new MutationObserver(l=>{for(const i of l)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(l){const i={};return l.integrity&&(i.integrity=l.integrity),l.referrerPolicy&&(i.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?i.credentials="include":l.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(l){if(l.ep)return;l.ep=!0;const i=n(l);fetch(l.href,i)}})();function Ni(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Fc={exports:{}},Ri={},Uc={exports:{}},B={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var il=Symbol.for("react.element"),kh=Symbol.for("react.portal"),xh=Symbol.for("react.fragment"),wh=Symbol.for("react.strict_mode"),Sh=Symbol.for("react.profiler"),Eh=Symbol.for("react.provider"),Ch=Symbol.for("react.context"),_h=Symbol.for("react.forward_ref"),Th=Symbol.for("react.suspense"),Nh=Symbol.for("react.memo"),Rh=Symbol.for("react.lazy"),fu=Symbol.iterator;function Ih(e){return e===null||typeof e!="object"?null:(e=fu&&e[fu]||e["@@iterator"],typeof e=="function"?e:null)}var Bc={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Hc=Object.assign,Wc={};function sr(e,t,n){this.props=e,this.context=t,this.refs=Wc,this.updater=n||Bc}sr.prototype.isReactComponent={};sr.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};sr.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function bc(){}bc.prototype=sr.prototype;function Us(e,t,n){this.props=e,this.context=t,this.refs=Wc,this.updater=n||Bc}var Bs=Us.prototype=new bc;Bs.constructor=Us;Hc(Bs,sr.prototype);Bs.isPureReactComponent=!0;var du=Array.isArray,Kc=Object.prototype.hasOwnProperty,Hs={current:null},Vc={key:!0,ref:!0,__self:!0,__source:!0};function Qc(e,t,n){var r,l={},i=null,o=null;if(t!=null)for(r in t.ref!==void 0&&(o=t.ref),t.key!==void 0&&(i=""+t.key),t)Kc.call(t,r)&&!Vc.hasOwnProperty(r)&&(l[r]=t[r]);var s=arguments.length-2;if(s===1)l.children=n;else if(1<s){for(var a=Array(s),u=0;u<s;u++)a[u]=arguments[u+2];l.children=a}if(e&&e.defaultProps)for(r in s=e.defaultProps,s)l[r]===void 0&&(l[r]=s[r]);return{$$typeof:il,type:e,key:i,ref:o,props:l,_owner:Hs.current}}function Oh(e,t){return{$$typeof:il,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function Ws(e){return typeof e=="object"&&e!==null&&e.$$typeof===il}function Ph(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(n){return t[n]})}var pu=/\/+/g;function no(e,t){return typeof e=="object"&&e!==null&&e.key!=null?Ph(""+e.key):t.toString(36)}function Ml(e,t,n,r,l){var i=typeof e;(i==="undefined"||i==="boolean")&&(e=null);var o=!1;if(e===null)o=!0;else switch(i){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case il:case kh:o=!0}}if(o)return o=e,l=l(o),e=r===""?"."+no(o,0):r,du(l)?(n="",e!=null&&(n=e.replace(pu,"$&/")+"/"),Ml(l,t,n,"",function(u){return u})):l!=null&&(Ws(l)&&(l=Oh(l,n+(!l.key||o&&o.key===l.key?"":(""+l.key).replace(pu,"$&/")+"/")+e)),t.push(l)),1;if(o=0,r=r===""?".":r+":",du(e))for(var s=0;s<e.length;s++){i=e[s];var a=r+no(i,s);o+=Ml(i,t,n,a,l)}else if(a=Ih(e),typeof a=="function")for(e=a.call(e),s=0;!(i=e.next()).done;)i=i.value,a=r+no(i,s++),o+=Ml(i,t,n,a,l);else if(i==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return o}function yl(e,t,n){if(e==null)return e;var r=[],l=0;return Ml(e,r,"","",function(i){return t.call(n,i,l++)}),r}function Lh(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(n){(e._status===0||e._status===-1)&&(e._status=1,e._result=n)},function(n){(e._status===0||e._status===-1)&&(e._status=2,e._result=n)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var Re={current:null},Fl={transition:null},Ah={ReactCurrentDispatcher:Re,ReactCurrentBatchConfig:Fl,ReactCurrentOwner:Hs};B.Children={map:yl,forEach:function(e,t,n){yl(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return yl(e,function(){t++}),t},toArray:function(e){return yl(e,function(t){return t})||[]},only:function(e){if(!Ws(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};B.Component=sr;B.Fragment=xh;B.Profiler=Sh;B.PureComponent=Us;B.StrictMode=wh;B.Suspense=Th;B.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ah;B.cloneElement=function(e,t,n){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=Hc({},e.props),l=e.key,i=e.ref,o=e._owner;if(t!=null){if(t.ref!==void 0&&(i=t.ref,o=Hs.current),t.key!==void 0&&(l=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(a in t)Kc.call(t,a)&&!Vc.hasOwnProperty(a)&&(r[a]=t[a]===void 0&&s!==void 0?s[a]:t[a])}var a=arguments.length-2;if(a===1)r.children=n;else if(1<a){s=Array(a);for(var u=0;u<a;u++)s[u]=arguments[u+2];r.children=s}return{$$typeof:il,type:e.type,key:l,ref:i,props:r,_owner:o}};B.createContext=function(e){return e={$$typeof:Ch,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:Eh,_context:e},e.Consumer=e};B.createElement=Qc;B.createFactory=function(e){var t=Qc.bind(null,e);return t.type=e,t};B.createRef=function(){return{current:null}};B.forwardRef=function(e){return{$$typeof:_h,render:e}};B.isValidElement=Ws;B.lazy=function(e){return{$$typeof:Rh,_payload:{_status:-1,_result:e},_init:Lh}};B.memo=function(e,t){return{$$typeof:Nh,type:e,compare:t===void 0?null:t}};B.startTransition=function(e){var t=Fl.transition;Fl.transition={};try{e()}finally{Fl.transition=t}};B.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};B.useCallback=function(e,t){return Re.current.useCallback(e,t)};B.useContext=function(e){return Re.current.useContext(e)};B.useDebugValue=function(){};B.useDeferredValue=function(e){return Re.current.useDeferredValue(e)};B.useEffect=function(e,t){return Re.current.useEffect(e,t)};B.useId=function(){return Re.current.useId()};B.useImperativeHandle=function(e,t,n){return Re.current.useImperativeHandle(e,t,n)};B.useInsertionEffect=function(e,t){return Re.current.useInsertionEffect(e,t)};B.useLayoutEffect=function(e,t){return Re.current.useLayoutEffect(e,t)};B.useMemo=function(e,t){return Re.current.useMemo(e,t)};B.useReducer=function(e,t,n){return Re.current.useReducer(e,t,n)};B.useRef=function(e){return Re.current.useRef(e)};B.useState=function(e){return Re.current.useState(e)};B.useSyncExternalStore=function(e,t,n){return Re.current.useSyncExternalStore(e,t,n)};B.useTransition=function(){return Re.current.useTransition()};B.version="18.2.0";Uc.exports=B;var S=Uc.exports;const ae=Ni(S);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Dh=S,jh=Symbol.for("react.element"),zh=Symbol.for("react.fragment"),$h=Object.prototype.hasOwnProperty,Mh=Dh.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Fh={key:!0,ref:!0,__self:!0,__source:!0};function Gc(e,t,n){var r,l={},i=null,o=null;n!==void 0&&(i=""+n),t.key!==void 0&&(i=""+t.key),t.ref!==void 0&&(o=t.ref);for(r in t)$h.call(t,r)&&!Fh.hasOwnProperty(r)&&(l[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps,t)l[r]===void 0&&(l[r]=t[r]);return{$$typeof:jh,type:e,key:i,ref:o,props:l,_owner:Mh.current}}Ri.Fragment=zh;Ri.jsx=Gc;Ri.jsxs=Gc;Fc.exports=Ri;var v=Fc.exports,Yc={exports:{}},We={},Xc={exports:{}},Zc={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(O,A){var M=O.length;O.push(A);e:for(;0<M;){var F=M-1>>>1,ie=O[F];if(0<l(ie,A))O[F]=A,O[M]=ie,M=F;else break e}}function n(O){return O.length===0?null:O[0]}function r(O){if(O.length===0)return null;var A=O[0],M=O.pop();if(M!==A){O[0]=M;e:for(var F=0,ie=O.length,G=ie>>>1;F<G;){var je=2*(F+1)-1,nn=O[je],at=je+1,Dt=O[at];if(0>l(nn,M))at<ie&&0>l(Dt,nn)?(O[F]=Dt,O[at]=M,F=at):(O[F]=nn,O[je]=M,F=je);else if(at<ie&&0>l(Dt,M))O[F]=Dt,O[at]=M,F=at;else break e}}return A}function l(O,A){var M=O.sortIndex-A.sortIndex;return M!==0?M:O.id-A.id}if(typeof performance=="object"&&typeof performance.now=="function"){var i=performance;e.unstable_now=function(){return i.now()}}else{var o=Date,s=o.now();e.unstable_now=function(){return o.now()-s}}var a=[],u=[],c=1,p=null,f=3,y=!1,k=!1,w=!1,D=typeof setTimeout=="function"?setTimeout:null,m=typeof clearTimeout=="function"?clearTimeout:null,d=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function h(O){for(var A=n(u);A!==null;){if(A.callback===null)r(u);else if(A.startTime<=O)r(u),A.sortIndex=A.expirationTime,t(a,A);else break;A=n(u)}}function x(O){if(w=!1,h(O),!k)if(n(a)!==null)k=!0,fr(_);else{var A=n(u);A!==null&&_n(x,A.startTime-O)}}function _(O,A){k=!1,w&&(w=!1,m(L),L=-1),y=!0;var M=f;try{for(h(A),p=n(a);p!==null&&(!(p.expirationTime>A)||O&&!Ee());){var F=p.callback;if(typeof F=="function"){p.callback=null,f=p.priorityLevel;var ie=F(p.expirationTime<=A);A=e.unstable_now(),typeof ie=="function"?p.callback=ie:p===n(a)&&r(a),h(A)}else r(a);p=n(a)}if(p!==null)var G=!0;else{var je=n(u);je!==null&&_n(x,je.startTime-A),G=!1}return G}finally{p=null,f=M,y=!1}}var T=!1,I=null,L=-1,J=5,$=-1;function Ee(){return!(e.unstable_now()-$<J)}function yt(){if(I!==null){var O=e.unstable_now();$=O;var A=!0;try{A=I(!0,O)}finally{A?kt():(T=!1,I=null)}}else T=!1}var kt;if(typeof d=="function")kt=function(){d(yt)};else if(typeof MessageChannel<"u"){var cl=new MessageChannel,bi=cl.port2;cl.port1.onmessage=yt,kt=function(){bi.postMessage(null)}}else kt=function(){D(yt,0)};function fr(O){I=O,T||(T=!0,kt())}function _n(O,A){L=D(function(){O(e.unstable_now())},A)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(O){O.callback=null},e.unstable_continueExecution=function(){k||y||(k=!0,fr(_))},e.unstable_forceFrameRate=function(O){0>O||125<O?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):J=0<O?Math.floor(1e3/O):5},e.unstable_getCurrentPriorityLevel=function(){return f},e.unstable_getFirstCallbackNode=function(){return n(a)},e.unstable_next=function(O){switch(f){case 1:case 2:case 3:var A=3;break;default:A=f}var M=f;f=A;try{return O()}finally{f=M}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(O,A){switch(O){case 1:case 2:case 3:case 4:case 5:break;default:O=3}var M=f;f=O;try{return A()}finally{f=M}},e.unstable_scheduleCallback=function(O,A,M){var F=e.unstable_now();switch(typeof M=="object"&&M!==null?(M=M.delay,M=typeof M=="number"&&0<M?F+M:F):M=F,O){case 1:var ie=-1;break;case 2:ie=250;break;case 5:ie=1073741823;break;case 4:ie=1e4;break;default:ie=5e3}return ie=M+ie,O={id:c++,callback:A,priorityLevel:O,startTime:M,expirationTime:ie,sortIndex:-1},M>F?(O.sortIndex=M,t(u,O),n(a)===null&&O===n(u)&&(w?(m(L),L=-1):w=!0,_n(x,M-F))):(O.sortIndex=ie,t(a,O),k||y||(k=!0,fr(_))),O},e.unstable_shouldYield=Ee,e.unstable_wrapCallback=function(O){var A=f;return function(){var M=f;f=A;try{return O.apply(this,arguments)}finally{f=M}}}})(Zc);Xc.exports=Zc;var Uh=Xc.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var qc=S,He=Uh;function E(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Jc=new Set,Fr={};function Sn(e,t){Jn(e,t),Jn(e+"Capture",t)}function Jn(e,t){for(Fr[e]=t,e=0;e<t.length;e++)Jc.add(t[e])}var Nt=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),$o=Object.prototype.hasOwnProperty,Bh=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,hu={},mu={};function Hh(e){return $o.call(mu,e)?!0:$o.call(hu,e)?!1:Bh.test(e)?mu[e]=!0:(hu[e]=!0,!1)}function Wh(e,t,n,r){if(n!==null&&n.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function bh(e,t,n,r){if(t===null||typeof t>"u"||Wh(e,t,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function Ie(e,t,n,r,l,i,o){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=o}var ye={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ye[e]=new Ie(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ye[t]=new Ie(t,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){ye[e]=new Ie(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ye[e]=new Ie(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ye[e]=new Ie(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){ye[e]=new Ie(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){ye[e]=new Ie(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){ye[e]=new Ie(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){ye[e]=new Ie(e,5,!1,e.toLowerCase(),null,!1,!1)});var bs=/[\-:]([a-z])/g;function Ks(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(bs,Ks);ye[t]=new Ie(t,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(bs,Ks);ye[t]=new Ie(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(bs,Ks);ye[t]=new Ie(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){ye[e]=new Ie(e,1,!1,e.toLowerCase(),null,!1,!1)});ye.xlinkHref=new Ie("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){ye[e]=new Ie(e,1,!1,e.toLowerCase(),null,!0,!0)});function Vs(e,t,n,r){var l=ye.hasOwnProperty(t)?ye[t]:null;(l!==null?l.type!==0:r||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(bh(t,n,l,r)&&(n=null),r||l===null?Hh(t)&&(n===null?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=n===null?l.type===3?!1:"":n:(t=l.attributeName,r=l.attributeNamespace,n===null?e.removeAttribute(t):(l=l.type,n=l===3||l===4&&n===!0?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}var Lt=qc.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,kl=Symbol.for("react.element"),jn=Symbol.for("react.portal"),zn=Symbol.for("react.fragment"),Qs=Symbol.for("react.strict_mode"),Mo=Symbol.for("react.profiler"),ef=Symbol.for("react.provider"),tf=Symbol.for("react.context"),Gs=Symbol.for("react.forward_ref"),Fo=Symbol.for("react.suspense"),Uo=Symbol.for("react.suspense_list"),Ys=Symbol.for("react.memo"),zt=Symbol.for("react.lazy"),nf=Symbol.for("react.offscreen"),gu=Symbol.iterator;function pr(e){return e===null||typeof e!="object"?null:(e=gu&&e[gu]||e["@@iterator"],typeof e=="function"?e:null)}var re=Object.assign,ro;function Er(e){if(ro===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);ro=t&&t[1]||""}return`
`+ro+e}var lo=!1;function io(e,t){if(!e||lo)return"";lo=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&typeof u.stack=="string"){for(var l=u.stack.split(`
`),i=r.stack.split(`
`),o=l.length-1,s=i.length-1;1<=o&&0<=s&&l[o]!==i[s];)s--;for(;1<=o&&0<=s;o--,s--)if(l[o]!==i[s]){if(o!==1||s!==1)do if(o--,s--,0>s||l[o]!==i[s]){var a=`
`+l[o].replace(" at new "," at ");return e.displayName&&a.includes("<anonymous>")&&(a=a.replace("<anonymous>",e.displayName)),a}while(1<=o&&0<=s);break}}}finally{lo=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?Er(e):""}function Kh(e){switch(e.tag){case 5:return Er(e.type);case 16:return Er("Lazy");case 13:return Er("Suspense");case 19:return Er("SuspenseList");case 0:case 2:case 15:return e=io(e.type,!1),e;case 11:return e=io(e.type.render,!1),e;case 1:return e=io(e.type,!0),e;default:return""}}function Bo(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case zn:return"Fragment";case jn:return"Portal";case Mo:return"Profiler";case Qs:return"StrictMode";case Fo:return"Suspense";case Uo:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case tf:return(e.displayName||"Context")+".Consumer";case ef:return(e._context.displayName||"Context")+".Provider";case Gs:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Ys:return t=e.displayName||null,t!==null?t:Bo(e.type)||"Memo";case zt:t=e._payload,e=e._init;try{return Bo(e(t))}catch{}}return null}function Vh(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Bo(t);case 8:return t===Qs?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function Zt(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function rf(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function Qh(e){var t=rf(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var l=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(o){r=""+o,i.call(this,o)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(o){r=""+o},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function xl(e){e._valueTracker||(e._valueTracker=Qh(e))}function lf(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=rf(e)?e.checked?"true":"false":e.value),e=r,e!==n?(t.setValue(e),!0):!1}function Zl(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function Ho(e,t){var n=t.checked;return re({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??e._wrapperState.initialChecked})}function vu(e,t){var n=t.defaultValue==null?"":t.defaultValue,r=t.checked!=null?t.checked:t.defaultChecked;n=Zt(t.value!=null?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function of(e,t){t=t.checked,t!=null&&Vs(e,"checked",t,!1)}function Wo(e,t){of(e,t);var n=Zt(t.value),r=t.type;if(n!=null)r==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if(r==="submit"||r==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?bo(e,t.type,n):t.hasOwnProperty("defaultValue")&&bo(e,t.type,Zt(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function yu(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!(r!=="submit"&&r!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,n!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,n!==""&&(e.name=n)}function bo(e,t,n){(t!=="number"||Zl(e.ownerDocument)!==e)&&(n==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var Cr=Array.isArray;function Qn(e,t,n,r){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Zt(n),t=null,l=0;l<e.length;l++){if(e[l].value===n){e[l].selected=!0,r&&(e[l].defaultSelected=!0);return}t!==null||e[l].disabled||(t=e[l])}t!==null&&(t.selected=!0)}}function Ko(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(E(91));return re({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ku(e,t){var n=t.value;if(n==null){if(n=t.children,t=t.defaultValue,n!=null){if(t!=null)throw Error(E(92));if(Cr(n)){if(1<n.length)throw Error(E(93));n=n[0]}t=n}t==null&&(t=""),n=t}e._wrapperState={initialValue:Zt(n)}}function sf(e,t){var n=Zt(t.value),r=Zt(t.defaultValue);n!=null&&(n=""+n,n!==e.value&&(e.value=n),t.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),r!=null&&(e.defaultValue=""+r)}function xu(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function af(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Vo(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?af(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var wl,uf=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,n,r,l){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,l)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(wl=wl||document.createElement("div"),wl.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=wl.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function Ur(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}var Ir={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Gh=["Webkit","ms","Moz","O"];Object.keys(Ir).forEach(function(e){Gh.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Ir[t]=Ir[e]})});function cf(e,t,n){return t==null||typeof t=="boolean"||t===""?"":n||typeof t!="number"||t===0||Ir.hasOwnProperty(e)&&Ir[e]?(""+t).trim():t+"px"}function ff(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=n.indexOf("--")===0,l=cf(n,t[n],r);n==="float"&&(n="cssFloat"),r?e.setProperty(n,l):e[n]=l}}var Yh=re({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Qo(e,t){if(t){if(Yh[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(E(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(E(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(E(61))}if(t.style!=null&&typeof t.style!="object")throw Error(E(62))}}function Go(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Yo=null;function Xs(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Xo=null,Gn=null,Yn=null;function wu(e){if(e=al(e)){if(typeof Xo!="function")throw Error(E(280));var t=e.stateNode;t&&(t=Ai(t),Xo(e.stateNode,e.type,t))}}function df(e){Gn?Yn?Yn.push(e):Yn=[e]:Gn=e}function pf(){if(Gn){var e=Gn,t=Yn;if(Yn=Gn=null,wu(e),t)for(e=0;e<t.length;e++)wu(t[e])}}function hf(e,t){return e(t)}function mf(){}var oo=!1;function gf(e,t,n){if(oo)return e(t,n);oo=!0;try{return hf(e,t,n)}finally{oo=!1,(Gn!==null||Yn!==null)&&(mf(),pf())}}function Br(e,t){var n=e.stateNode;if(n===null)return null;var r=Ai(n);if(r===null)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(e=e.type,r=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!r;break e;default:e=!1}if(e)return null;if(n&&typeof n!="function")throw Error(E(231,t,typeof n));return n}var Zo=!1;if(Nt)try{var hr={};Object.defineProperty(hr,"passive",{get:function(){Zo=!0}}),window.addEventListener("test",hr,hr),window.removeEventListener("test",hr,hr)}catch{Zo=!1}function Xh(e,t,n,r,l,i,o,s,a){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Or=!1,ql=null,Jl=!1,qo=null,Zh={onError:function(e){Or=!0,ql=e}};function qh(e,t,n,r,l,i,o,s,a){Or=!1,ql=null,Xh.apply(Zh,arguments)}function Jh(e,t,n,r,l,i,o,s,a){if(qh.apply(this,arguments),Or){if(Or){var u=ql;Or=!1,ql=null}else throw Error(E(198));Jl||(Jl=!0,qo=u)}}function En(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function vf(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Su(e){if(En(e)!==e)throw Error(E(188))}function em(e){var t=e.alternate;if(!t){if(t=En(e),t===null)throw Error(E(188));return t!==e?null:e}for(var n=e,r=t;;){var l=n.return;if(l===null)break;var i=l.alternate;if(i===null){if(r=l.return,r!==null){n=r;continue}break}if(l.child===i.child){for(i=l.child;i;){if(i===n)return Su(l),e;if(i===r)return Su(l),t;i=i.sibling}throw Error(E(188))}if(n.return!==r.return)n=l,r=i;else{for(var o=!1,s=l.child;s;){if(s===n){o=!0,n=l,r=i;break}if(s===r){o=!0,r=l,n=i;break}s=s.sibling}if(!o){for(s=i.child;s;){if(s===n){o=!0,n=i,r=l;break}if(s===r){o=!0,r=i,n=l;break}s=s.sibling}if(!o)throw Error(E(189))}}if(n.alternate!==r)throw Error(E(190))}if(n.tag!==3)throw Error(E(188));return n.stateNode.current===n?e:t}function yf(e){return e=em(e),e!==null?kf(e):null}function kf(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=kf(e);if(t!==null)return t;e=e.sibling}return null}var xf=He.unstable_scheduleCallback,Eu=He.unstable_cancelCallback,tm=He.unstable_shouldYield,nm=He.unstable_requestPaint,oe=He.unstable_now,rm=He.unstable_getCurrentPriorityLevel,Zs=He.unstable_ImmediatePriority,wf=He.unstable_UserBlockingPriority,ei=He.unstable_NormalPriority,lm=He.unstable_LowPriority,Sf=He.unstable_IdlePriority,Ii=null,gt=null;function im(e){if(gt&&typeof gt.onCommitFiberRoot=="function")try{gt.onCommitFiberRoot(Ii,e,void 0,(e.current.flags&128)===128)}catch{}}var lt=Math.clz32?Math.clz32:am,om=Math.log,sm=Math.LN2;function am(e){return e>>>=0,e===0?32:31-(om(e)/sm|0)|0}var Sl=64,El=4194304;function _r(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ti(e,t){var n=e.pendingLanes;if(n===0)return 0;var r=0,l=e.suspendedLanes,i=e.pingedLanes,o=n&268435455;if(o!==0){var s=o&~l;s!==0?r=_r(s):(i&=o,i!==0&&(r=_r(i)))}else o=n&~l,o!==0?r=_r(o):i!==0&&(r=_r(i));if(r===0)return 0;if(t!==0&&t!==r&&!(t&l)&&(l=r&-r,i=t&-t,l>=i||l===16&&(i&4194240)!==0))return t;if(r&4&&(r|=n&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=r;0<t;)n=31-lt(t),l=1<<n,r|=e[n],t&=~l;return r}function um(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function cm(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,l=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-lt(i),s=1<<o,a=l[o];a===-1?(!(s&n)||s&r)&&(l[o]=um(s,t)):a<=t&&(e.expiredLanes|=s),i&=~s}}function Jo(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function Ef(){var e=Sl;return Sl<<=1,!(Sl&4194240)&&(Sl=64),e}function so(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function ol(e,t,n){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-lt(t),e[t]=n}function fm(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var l=31-lt(n),i=1<<l;t[l]=0,r[l]=-1,e[l]=-1,n&=~i}}function qs(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-lt(n),l=1<<r;l&t|e[r]&t&&(e[r]|=t),n&=~l}}var K=0;function Cf(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var _f,Js,Tf,Nf,Rf,es=!1,Cl=[],Wt=null,bt=null,Kt=null,Hr=new Map,Wr=new Map,Ft=[],dm="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Cu(e,t){switch(e){case"focusin":case"focusout":Wt=null;break;case"dragenter":case"dragleave":bt=null;break;case"mouseover":case"mouseout":Kt=null;break;case"pointerover":case"pointerout":Hr.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Wr.delete(t.pointerId)}}function mr(e,t,n,r,l,i){return e===null||e.nativeEvent!==i?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:i,targetContainers:[l]},t!==null&&(t=al(t),t!==null&&Js(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,l!==null&&t.indexOf(l)===-1&&t.push(l),e)}function pm(e,t,n,r,l){switch(t){case"focusin":return Wt=mr(Wt,e,t,n,r,l),!0;case"dragenter":return bt=mr(bt,e,t,n,r,l),!0;case"mouseover":return Kt=mr(Kt,e,t,n,r,l),!0;case"pointerover":var i=l.pointerId;return Hr.set(i,mr(Hr.get(i)||null,e,t,n,r,l)),!0;case"gotpointercapture":return i=l.pointerId,Wr.set(i,mr(Wr.get(i)||null,e,t,n,r,l)),!0}return!1}function If(e){var t=fn(e.target);if(t!==null){var n=En(t);if(n!==null){if(t=n.tag,t===13){if(t=vf(n),t!==null){e.blockedOn=t,Rf(e.priority,function(){Tf(n)});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Ul(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=ts(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var r=new n.constructor(n.type,n);Yo=r,n.target.dispatchEvent(r),Yo=null}else return t=al(n),t!==null&&Js(t),e.blockedOn=n,!1;t.shift()}return!0}function _u(e,t,n){Ul(e)&&n.delete(t)}function hm(){es=!1,Wt!==null&&Ul(Wt)&&(Wt=null),bt!==null&&Ul(bt)&&(bt=null),Kt!==null&&Ul(Kt)&&(Kt=null),Hr.forEach(_u),Wr.forEach(_u)}function gr(e,t){e.blockedOn===t&&(e.blockedOn=null,es||(es=!0,He.unstable_scheduleCallback(He.unstable_NormalPriority,hm)))}function br(e){function t(l){return gr(l,e)}if(0<Cl.length){gr(Cl[0],e);for(var n=1;n<Cl.length;n++){var r=Cl[n];r.blockedOn===e&&(r.blockedOn=null)}}for(Wt!==null&&gr(Wt,e),bt!==null&&gr(bt,e),Kt!==null&&gr(Kt,e),Hr.forEach(t),Wr.forEach(t),n=0;n<Ft.length;n++)r=Ft[n],r.blockedOn===e&&(r.blockedOn=null);for(;0<Ft.length&&(n=Ft[0],n.blockedOn===null);)If(n),n.blockedOn===null&&Ft.shift()}var Xn=Lt.ReactCurrentBatchConfig,ni=!0;function mm(e,t,n,r){var l=K,i=Xn.transition;Xn.transition=null;try{K=1,ea(e,t,n,r)}finally{K=l,Xn.transition=i}}function gm(e,t,n,r){var l=K,i=Xn.transition;Xn.transition=null;try{K=4,ea(e,t,n,r)}finally{K=l,Xn.transition=i}}function ea(e,t,n,r){if(ni){var l=ts(e,t,n,r);if(l===null)yo(e,t,r,ri,n),Cu(e,r);else if(pm(l,e,t,n,r))r.stopPropagation();else if(Cu(e,r),t&4&&-1<dm.indexOf(e)){for(;l!==null;){var i=al(l);if(i!==null&&_f(i),i=ts(e,t,n,r),i===null&&yo(e,t,r,ri,n),i===l)break;l=i}l!==null&&r.stopPropagation()}else yo(e,t,r,null,n)}}var ri=null;function ts(e,t,n,r){if(ri=null,e=Xs(r),e=fn(e),e!==null)if(t=En(e),t===null)e=null;else if(n=t.tag,n===13){if(e=vf(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return ri=e,null}function Of(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(rm()){case Zs:return 1;case wf:return 4;case ei:case lm:return 16;case Sf:return 536870912;default:return 16}default:return 16}}var Bt=null,ta=null,Bl=null;function Pf(){if(Bl)return Bl;var e,t=ta,n=t.length,r,l="value"in Bt?Bt.value:Bt.textContent,i=l.length;for(e=0;e<n&&t[e]===l[e];e++);var o=n-e;for(r=1;r<=o&&t[n-r]===l[i-r];r++);return Bl=l.slice(e,1<r?1-r:void 0)}function Hl(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function _l(){return!0}function Tu(){return!1}function be(e){function t(n,r,l,i,o){this._reactName=n,this._targetInst=l,this.type=r,this.nativeEvent=i,this.target=o,this.currentTarget=null;for(var s in e)e.hasOwnProperty(s)&&(n=e[s],this[s]=n?n(i):i[s]);return this.isDefaultPrevented=(i.defaultPrevented!=null?i.defaultPrevented:i.returnValue===!1)?_l:Tu,this.isPropagationStopped=Tu,this}return re(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=_l)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=_l)},persist:function(){},isPersistent:_l}),t}var ar={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},na=be(ar),sl=re({},ar,{view:0,detail:0}),vm=be(sl),ao,uo,vr,Oi=re({},sl,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:ra,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==vr&&(vr&&e.type==="mousemove"?(ao=e.screenX-vr.screenX,uo=e.screenY-vr.screenY):uo=ao=0,vr=e),ao)},movementY:function(e){return"movementY"in e?e.movementY:uo}}),Nu=be(Oi),ym=re({},Oi,{dataTransfer:0}),km=be(ym),xm=re({},sl,{relatedTarget:0}),co=be(xm),wm=re({},ar,{animationName:0,elapsedTime:0,pseudoElement:0}),Sm=be(wm),Em=re({},ar,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Cm=be(Em),_m=re({},ar,{data:0}),Ru=be(_m),Tm={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nm={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Rm={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Im(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=Rm[e])?!!t[e]:!1}function ra(){return Im}var Om=re({},sl,{key:function(e){if(e.key){var t=Tm[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=Hl(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?Nm[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:ra,charCode:function(e){return e.type==="keypress"?Hl(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?Hl(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),Pm=be(Om),Lm=re({},Oi,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Iu=be(Lm),Am=re({},sl,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:ra}),Dm=be(Am),jm=re({},ar,{propertyName:0,elapsedTime:0,pseudoElement:0}),zm=be(jm),$m=re({},Oi,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Mm=be($m),Fm=[9,13,27,32],la=Nt&&"CompositionEvent"in window,Pr=null;Nt&&"documentMode"in document&&(Pr=document.documentMode);var Um=Nt&&"TextEvent"in window&&!Pr,Lf=Nt&&(!la||Pr&&8<Pr&&11>=Pr),Ou=String.fromCharCode(32),Pu=!1;function Af(e,t){switch(e){case"keyup":return Fm.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Df(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var $n=!1;function Bm(e,t){switch(e){case"compositionend":return Df(t);case"keypress":return t.which!==32?null:(Pu=!0,Ou);case"textInput":return e=t.data,e===Ou&&Pu?null:e;default:return null}}function Hm(e,t){if($n)return e==="compositionend"||!la&&Af(e,t)?(e=Pf(),Bl=ta=Bt=null,$n=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Lf&&t.locale!=="ko"?null:t.data;default:return null}}var Wm={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Lu(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!Wm[e.type]:t==="textarea"}function jf(e,t,n,r){df(r),t=li(t,"onChange"),0<t.length&&(n=new na("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Lr=null,Kr=null;function bm(e){Vf(e,0)}function Pi(e){var t=Un(e);if(lf(t))return e}function Km(e,t){if(e==="change")return t}var zf=!1;if(Nt){var fo;if(Nt){var po="oninput"in document;if(!po){var Au=document.createElement("div");Au.setAttribute("oninput","return;"),po=typeof Au.oninput=="function"}fo=po}else fo=!1;zf=fo&&(!document.documentMode||9<document.documentMode)}function Du(){Lr&&(Lr.detachEvent("onpropertychange",$f),Kr=Lr=null)}function $f(e){if(e.propertyName==="value"&&Pi(Kr)){var t=[];jf(t,Kr,e,Xs(e)),gf(bm,t)}}function Vm(e,t,n){e==="focusin"?(Du(),Lr=t,Kr=n,Lr.attachEvent("onpropertychange",$f)):e==="focusout"&&Du()}function Qm(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Pi(Kr)}function Gm(e,t){if(e==="click")return Pi(t)}function Ym(e,t){if(e==="input"||e==="change")return Pi(t)}function Xm(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var ot=typeof Object.is=="function"?Object.is:Xm;function Vr(e,t){if(ot(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var l=n[r];if(!$o.call(t,l)||!ot(e[l],t[l]))return!1}return!0}function ju(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function zu(e,t){var n=ju(e);e=0;for(var r;n;){if(n.nodeType===3){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ju(n)}}function Mf(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Mf(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Ff(){for(var e=window,t=Zl();t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href=="string"}catch{n=!1}if(n)e=t.contentWindow;else break;t=Zl(e.document)}return t}function ia(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function Zm(e){var t=Ff(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&Mf(n.ownerDocument.documentElement,n)){if(r!==null&&ia(n)){if(t=r.start,e=r.end,e===void 0&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var l=n.textContent.length,i=Math.min(r.start,l);r=r.end===void 0?i:Math.min(r.end,l),!e.extend&&i>r&&(l=r,r=i,i=l),l=zu(n,i);var o=zu(n,r);l&&o&&(e.rangeCount!==1||e.anchorNode!==l.node||e.anchorOffset!==l.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&(t=t.createRange(),t.setStart(l.node,l.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}}for(t=[],e=n;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var qm=Nt&&"documentMode"in document&&11>=document.documentMode,Mn=null,ns=null,Ar=null,rs=!1;function $u(e,t,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;rs||Mn==null||Mn!==Zl(r)||(r=Mn,"selectionStart"in r&&ia(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),Ar&&Vr(Ar,r)||(Ar=r,r=li(ns,"onSelect"),0<r.length&&(t=new na("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=Mn)))}function Tl(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Fn={animationend:Tl("Animation","AnimationEnd"),animationiteration:Tl("Animation","AnimationIteration"),animationstart:Tl("Animation","AnimationStart"),transitionend:Tl("Transition","TransitionEnd")},ho={},Uf={};Nt&&(Uf=document.createElement("div").style,"AnimationEvent"in window||(delete Fn.animationend.animation,delete Fn.animationiteration.animation,delete Fn.animationstart.animation),"TransitionEvent"in window||delete Fn.transitionend.transition);function Li(e){if(ho[e])return ho[e];if(!Fn[e])return e;var t=Fn[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in Uf)return ho[e]=t[n];return e}var Bf=Li("animationend"),Hf=Li("animationiteration"),Wf=Li("animationstart"),bf=Li("transitionend"),Kf=new Map,Mu="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Jt(e,t){Kf.set(e,t),Sn(t,[e])}for(var mo=0;mo<Mu.length;mo++){var go=Mu[mo],Jm=go.toLowerCase(),eg=go[0].toUpperCase()+go.slice(1);Jt(Jm,"on"+eg)}Jt(Bf,"onAnimationEnd");Jt(Hf,"onAnimationIteration");Jt(Wf,"onAnimationStart");Jt("dblclick","onDoubleClick");Jt("focusin","onFocus");Jt("focusout","onBlur");Jt(bf,"onTransitionEnd");Jn("onMouseEnter",["mouseout","mouseover"]);Jn("onMouseLeave",["mouseout","mouseover"]);Jn("onPointerEnter",["pointerout","pointerover"]);Jn("onPointerLeave",["pointerout","pointerover"]);Sn("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Sn("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Sn("onBeforeInput",["compositionend","keypress","textInput","paste"]);Sn("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Sn("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Sn("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Tr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),tg=new Set("cancel close invalid load scroll toggle".split(" ").concat(Tr));function Fu(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,Jh(r,t,void 0,e),e.currentTarget=null}function Vf(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var r=e[n],l=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var o=r.length-1;0<=o;o--){var s=r[o],a=s.instance,u=s.currentTarget;if(s=s.listener,a!==i&&l.isPropagationStopped())break e;Fu(l,s,u),i=a}else for(o=0;o<r.length;o++){if(s=r[o],a=s.instance,u=s.currentTarget,s=s.listener,a!==i&&l.isPropagationStopped())break e;Fu(l,s,u),i=a}}}if(Jl)throw e=qo,Jl=!1,qo=null,e}function X(e,t){var n=t[as];n===void 0&&(n=t[as]=new Set);var r=e+"__bubble";n.has(r)||(Qf(t,e,2,!1),n.add(r))}function vo(e,t,n){var r=0;t&&(r|=4),Qf(n,e,r,t)}var Nl="_reactListening"+Math.random().toString(36).slice(2);function Qr(e){if(!e[Nl]){e[Nl]=!0,Jc.forEach(function(n){n!=="selectionchange"&&(tg.has(n)||vo(n,!1,e),vo(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Nl]||(t[Nl]=!0,vo("selectionchange",!1,t))}}function Qf(e,t,n,r){switch(Of(t)){case 1:var l=mm;break;case 4:l=gm;break;default:l=ea}n=l.bind(null,t,n,e),l=void 0,!Zo||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(l=!0),r?l!==void 0?e.addEventListener(t,n,{capture:!0,passive:l}):e.addEventListener(t,n,!0):l!==void 0?e.addEventListener(t,n,{passive:l}):e.addEventListener(t,n,!1)}function yo(e,t,n,r,l){var i=r;if(!(t&1)&&!(t&2)&&r!==null)e:for(;;){if(r===null)return;var o=r.tag;if(o===3||o===4){var s=r.stateNode.containerInfo;if(s===l||s.nodeType===8&&s.parentNode===l)break;if(o===4)for(o=r.return;o!==null;){var a=o.tag;if((a===3||a===4)&&(a=o.stateNode.containerInfo,a===l||a.nodeType===8&&a.parentNode===l))return;o=o.return}for(;s!==null;){if(o=fn(s),o===null)return;if(a=o.tag,a===5||a===6){r=i=o;continue e}s=s.parentNode}}r=r.return}gf(function(){var u=i,c=Xs(n),p=[];e:{var f=Kf.get(e);if(f!==void 0){var y=na,k=e;switch(e){case"keypress":if(Hl(n)===0)break e;case"keydown":case"keyup":y=Pm;break;case"focusin":k="focus",y=co;break;case"focusout":k="blur",y=co;break;case"beforeblur":case"afterblur":y=co;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":y=Nu;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":y=km;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":y=Dm;break;case Bf:case Hf:case Wf:y=Sm;break;case bf:y=zm;break;case"scroll":y=vm;break;case"wheel":y=Mm;break;case"copy":case"cut":case"paste":y=Cm;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":y=Iu}var w=(t&4)!==0,D=!w&&e==="scroll",m=w?f!==null?f+"Capture":null:f;w=[];for(var d=u,h;d!==null;){h=d;var x=h.stateNode;if(h.tag===5&&x!==null&&(h=x,m!==null&&(x=Br(d,m),x!=null&&w.push(Gr(d,x,h)))),D)break;d=d.return}0<w.length&&(f=new y(f,k,null,n,c),p.push({event:f,listeners:w}))}}if(!(t&7)){e:{if(f=e==="mouseover"||e==="pointerover",y=e==="mouseout"||e==="pointerout",f&&n!==Yo&&(k=n.relatedTarget||n.fromElement)&&(fn(k)||k[Rt]))break e;if((y||f)&&(f=c.window===c?c:(f=c.ownerDocument)?f.defaultView||f.parentWindow:window,y?(k=n.relatedTarget||n.toElement,y=u,k=k?fn(k):null,k!==null&&(D=En(k),k!==D||k.tag!==5&&k.tag!==6)&&(k=null)):(y=null,k=u),y!==k)){if(w=Nu,x="onMouseLeave",m="onMouseEnter",d="mouse",(e==="pointerout"||e==="pointerover")&&(w=Iu,x="onPointerLeave",m="onPointerEnter",d="pointer"),D=y==null?f:Un(y),h=k==null?f:Un(k),f=new w(x,d+"leave",y,n,c),f.target=D,f.relatedTarget=h,x=null,fn(c)===u&&(w=new w(m,d+"enter",k,n,c),w.target=h,w.relatedTarget=D,x=w),D=x,y&&k)t:{for(w=y,m=k,d=0,h=w;h;h=Ln(h))d++;for(h=0,x=m;x;x=Ln(x))h++;for(;0<d-h;)w=Ln(w),d--;for(;0<h-d;)m=Ln(m),h--;for(;d--;){if(w===m||m!==null&&w===m.alternate)break t;w=Ln(w),m=Ln(m)}w=null}else w=null;y!==null&&Uu(p,f,y,w,!1),k!==null&&D!==null&&Uu(p,D,k,w,!0)}}e:{if(f=u?Un(u):window,y=f.nodeName&&f.nodeName.toLowerCase(),y==="select"||y==="input"&&f.type==="file")var _=Km;else if(Lu(f))if(zf)_=Ym;else{_=Qm;var T=Vm}else(y=f.nodeName)&&y.toLowerCase()==="input"&&(f.type==="checkbox"||f.type==="radio")&&(_=Gm);if(_&&(_=_(e,u))){jf(p,_,n,c);break e}T&&T(e,f,u),e==="focusout"&&(T=f._wrapperState)&&T.controlled&&f.type==="number"&&bo(f,"number",f.value)}switch(T=u?Un(u):window,e){case"focusin":(Lu(T)||T.contentEditable==="true")&&(Mn=T,ns=u,Ar=null);break;case"focusout":Ar=ns=Mn=null;break;case"mousedown":rs=!0;break;case"contextmenu":case"mouseup":case"dragend":rs=!1,$u(p,n,c);break;case"selectionchange":if(qm)break;case"keydown":case"keyup":$u(p,n,c)}var I;if(la)e:{switch(e){case"compositionstart":var L="onCompositionStart";break e;case"compositionend":L="onCompositionEnd";break e;case"compositionupdate":L="onCompositionUpdate";break e}L=void 0}else $n?Af(e,n)&&(L="onCompositionEnd"):e==="keydown"&&n.keyCode===229&&(L="onCompositionStart");L&&(Lf&&n.locale!=="ko"&&($n||L!=="onCompositionStart"?L==="onCompositionEnd"&&$n&&(I=Pf()):(Bt=c,ta="value"in Bt?Bt.value:Bt.textContent,$n=!0)),T=li(u,L),0<T.length&&(L=new Ru(L,e,null,n,c),p.push({event:L,listeners:T}),I?L.data=I:(I=Df(n),I!==null&&(L.data=I)))),(I=Um?Bm(e,n):Hm(e,n))&&(u=li(u,"onBeforeInput"),0<u.length&&(c=new Ru("onBeforeInput","beforeinput",null,n,c),p.push({event:c,listeners:u}),c.data=I))}Vf(p,t)})}function Gr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function li(e,t){for(var n=t+"Capture",r=[];e!==null;){var l=e,i=l.stateNode;l.tag===5&&i!==null&&(l=i,i=Br(e,n),i!=null&&r.unshift(Gr(e,i,l)),i=Br(e,t),i!=null&&r.push(Gr(e,i,l))),e=e.return}return r}function Ln(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Uu(e,t,n,r,l){for(var i=t._reactName,o=[];n!==null&&n!==r;){var s=n,a=s.alternate,u=s.stateNode;if(a!==null&&a===r)break;s.tag===5&&u!==null&&(s=u,l?(a=Br(n,i),a!=null&&o.unshift(Gr(n,a,s))):l||(a=Br(n,i),a!=null&&o.push(Gr(n,a,s)))),n=n.return}o.length!==0&&e.push({event:t,listeners:o})}var ng=/\r\n?/g,rg=/\u0000|\uFFFD/g;function Bu(e){return(typeof e=="string"?e:""+e).replace(ng,`
`).replace(rg,"")}function Rl(e,t,n){if(t=Bu(t),Bu(e)!==t&&n)throw Error(E(425))}function ii(){}var ls=null,is=null;function os(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var ss=typeof setTimeout=="function"?setTimeout:void 0,lg=typeof clearTimeout=="function"?clearTimeout:void 0,Hu=typeof Promise=="function"?Promise:void 0,ig=typeof queueMicrotask=="function"?queueMicrotask:typeof Hu<"u"?function(e){return Hu.resolve(null).then(e).catch(og)}:ss;function og(e){setTimeout(function(){throw e})}function ko(e,t){var n=t,r=0;do{var l=n.nextSibling;if(e.removeChild(n),l&&l.nodeType===8)if(n=l.data,n==="/$"){if(r===0){e.removeChild(l),br(t);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=l}while(n);br(t)}function Vt(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function Wu(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="$"||n==="$!"||n==="$?"){if(t===0)return e;t--}else n==="/$"&&t++}e=e.previousSibling}return null}var ur=Math.random().toString(36).slice(2),pt="__reactFiber$"+ur,Yr="__reactProps$"+ur,Rt="__reactContainer$"+ur,as="__reactEvents$"+ur,sg="__reactListeners$"+ur,ag="__reactHandles$"+ur;function fn(e){var t=e[pt];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Rt]||n[pt]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=Wu(e);e!==null;){if(n=e[pt])return n;e=Wu(e)}return t}e=n,n=e.parentNode}return null}function al(e){return e=e[pt]||e[Rt],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Un(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(E(33))}function Ai(e){return e[Yr]||null}var us=[],Bn=-1;function en(e){return{current:e}}function Z(e){0>Bn||(e.current=us[Bn],us[Bn]=null,Bn--)}function Y(e,t){Bn++,us[Bn]=e.current,e.current=t}var qt={},Se=en(qt),Le=en(!1),gn=qt;function er(e,t){var n=e.type.contextTypes;if(!n)return qt;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l={},i;for(i in n)l[i]=t[i];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function Ae(e){return e=e.childContextTypes,e!=null}function oi(){Z(Le),Z(Se)}function bu(e,t,n){if(Se.current!==qt)throw Error(E(168));Y(Se,t),Y(Le,n)}function Gf(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var l in r)if(!(l in t))throw Error(E(108,Vh(e)||"Unknown",l));return re({},n,r)}function si(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||qt,gn=Se.current,Y(Se,e),Y(Le,Le.current),!0}function Ku(e,t,n){var r=e.stateNode;if(!r)throw Error(E(169));n?(e=Gf(e,t,gn),r.__reactInternalMemoizedMergedChildContext=e,Z(Le),Z(Se),Y(Se,e)):Z(Le),Y(Le,n)}var Et=null,Di=!1,xo=!1;function Yf(e){Et===null?Et=[e]:Et.push(e)}function ug(e){Di=!0,Yf(e)}function tn(){if(!xo&&Et!==null){xo=!0;var e=0,t=K;try{var n=Et;for(K=1;e<n.length;e++){var r=n[e];do r=r(!0);while(r!==null)}Et=null,Di=!1}catch(l){throw Et!==null&&(Et=Et.slice(e+1)),xf(Zs,tn),l}finally{K=t,xo=!1}}return null}var Hn=[],Wn=0,ai=null,ui=0,Ve=[],Qe=0,vn=null,Ct=1,_t="";function sn(e,t){Hn[Wn++]=ui,Hn[Wn++]=ai,ai=e,ui=t}function Xf(e,t,n){Ve[Qe++]=Ct,Ve[Qe++]=_t,Ve[Qe++]=vn,vn=e;var r=Ct;e=_t;var l=32-lt(r)-1;r&=~(1<<l),n+=1;var i=32-lt(t)+l;if(30<i){var o=l-l%5;i=(r&(1<<o)-1).toString(32),r>>=o,l-=o,Ct=1<<32-lt(t)+l|n<<l|r,_t=i+e}else Ct=1<<i|n<<l|r,_t=e}function oa(e){e.return!==null&&(sn(e,1),Xf(e,1,0))}function sa(e){for(;e===ai;)ai=Hn[--Wn],Hn[Wn]=null,ui=Hn[--Wn],Hn[Wn]=null;for(;e===vn;)vn=Ve[--Qe],Ve[Qe]=null,_t=Ve[--Qe],Ve[Qe]=null,Ct=Ve[--Qe],Ve[Qe]=null}var Be=null,Ue=null,q=!1,rt=null;function Zf(e,t){var n=Ge(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)}function Vu(e,t){switch(e.tag){case 5:var n=e.type;return t=t.nodeType!==1||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,Be=e,Ue=Vt(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,Be=e,Ue=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(n=vn!==null?{id:Ct,overflow:_t}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},n=Ge(18,null,null,0),n.stateNode=t,n.return=e,e.child=n,Be=e,Ue=null,!0):!1;default:return!1}}function cs(e){return(e.mode&1)!==0&&(e.flags&128)===0}function fs(e){if(q){var t=Ue;if(t){var n=t;if(!Vu(e,t)){if(cs(e))throw Error(E(418));t=Vt(n.nextSibling);var r=Be;t&&Vu(e,t)?Zf(r,n):(e.flags=e.flags&-4097|2,q=!1,Be=e)}}else{if(cs(e))throw Error(E(418));e.flags=e.flags&-4097|2,q=!1,Be=e}}}function Qu(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;Be=e}function Il(e){if(e!==Be)return!1;if(!q)return Qu(e),q=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!os(e.type,e.memoizedProps)),t&&(t=Ue)){if(cs(e))throw qf(),Error(E(418));for(;t;)Zf(e,t),t=Vt(t.nextSibling)}if(Qu(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(E(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="/$"){if(t===0){Ue=Vt(e.nextSibling);break e}t--}else n!=="$"&&n!=="$!"&&n!=="$?"||t++}e=e.nextSibling}Ue=null}}else Ue=Be?Vt(e.stateNode.nextSibling):null;return!0}function qf(){for(var e=Ue;e;)e=Vt(e.nextSibling)}function tr(){Ue=Be=null,q=!1}function aa(e){rt===null?rt=[e]:rt.push(e)}var cg=Lt.ReactCurrentBatchConfig;function tt(e,t){if(e&&e.defaultProps){t=re({},t),e=e.defaultProps;for(var n in e)t[n]===void 0&&(t[n]=e[n]);return t}return t}var ci=en(null),fi=null,bn=null,ua=null;function ca(){ua=bn=fi=null}function fa(e){var t=ci.current;Z(ci),e._currentValue=t}function ds(e,t,n){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Zn(e,t){fi=e,ua=bn=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(Pe=!0),e.firstContext=null)}function Xe(e){var t=e._currentValue;if(ua!==e)if(e={context:e,memoizedValue:t,next:null},bn===null){if(fi===null)throw Error(E(308));bn=e,fi.dependencies={lanes:0,firstContext:e}}else bn=bn.next=e;return t}var dn=null;function da(e){dn===null?dn=[e]:dn.push(e)}function Jf(e,t,n,r){var l=t.interleaved;return l===null?(n.next=n,da(t)):(n.next=l.next,l.next=n),t.interleaved=n,It(e,r)}function It(e,t){e.lanes|=t;var n=e.alternate;for(n!==null&&(n.lanes|=t),n=e,e=e.return;e!==null;)e.childLanes|=t,n=e.alternate,n!==null&&(n.childLanes|=t),n=e,e=e.return;return n.tag===3?n.stateNode:null}var $t=!1;function pa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function ed(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Tt(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Qt(e,t,n){var r=e.updateQueue;if(r===null)return null;if(r=r.shared,H&2){var l=r.pending;return l===null?t.next=t:(t.next=l.next,l.next=t),r.pending=t,It(e,n)}return l=r.interleaved,l===null?(t.next=t,da(r)):(t.next=l.next,l.next=t),r.interleaved=t,It(e,n)}function Wl(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194240)!==0)){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,qs(e,n)}}function Gu(e,t){var n=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var l=null,i=null;if(n=n.firstBaseUpdate,n!==null){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};i===null?l=i=o:i=i.next=o,n=n.next}while(n!==null);i===null?l=i=t:i=i.next=t}else l=i=t;n={baseState:r.baseState,firstBaseUpdate:l,lastBaseUpdate:i,shared:r.shared,effects:r.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function di(e,t,n,r){var l=e.updateQueue;$t=!1;var i=l.firstBaseUpdate,o=l.lastBaseUpdate,s=l.shared.pending;if(s!==null){l.shared.pending=null;var a=s,u=a.next;a.next=null,o===null?i=u:o.next=u,o=a;var c=e.alternate;c!==null&&(c=c.updateQueue,s=c.lastBaseUpdate,s!==o&&(s===null?c.firstBaseUpdate=u:s.next=u,c.lastBaseUpdate=a))}if(i!==null){var p=l.baseState;o=0,c=u=a=null,s=i;do{var f=s.lane,y=s.eventTime;if((r&f)===f){c!==null&&(c=c.next={eventTime:y,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var k=e,w=s;switch(f=t,y=n,w.tag){case 1:if(k=w.payload,typeof k=="function"){p=k.call(y,p,f);break e}p=k;break e;case 3:k.flags=k.flags&-65537|128;case 0:if(k=w.payload,f=typeof k=="function"?k.call(y,p,f):k,f==null)break e;p=re({},p,f);break e;case 2:$t=!0}}s.callback!==null&&s.lane!==0&&(e.flags|=64,f=l.effects,f===null?l.effects=[s]:f.push(s))}else y={eventTime:y,lane:f,tag:s.tag,payload:s.payload,callback:s.callback,next:null},c===null?(u=c=y,a=p):c=c.next=y,o|=f;if(s=s.next,s===null){if(s=l.shared.pending,s===null)break;f=s,s=f.next,f.next=null,l.lastBaseUpdate=f,l.shared.pending=null}}while(1);if(c===null&&(a=p),l.baseState=a,l.firstBaseUpdate=u,l.lastBaseUpdate=c,t=l.shared.interleaved,t!==null){l=t;do o|=l.lane,l=l.next;while(l!==t)}else i===null&&(l.shared.lanes=0);kn|=o,e.lanes=o,e.memoizedState=p}}function Yu(e,t,n){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var r=e[t],l=r.callback;if(l!==null){if(r.callback=null,r=n,typeof l!="function")throw Error(E(191,l));l.call(r)}}}var td=new qc.Component().refs;function ps(e,t,n,r){t=e.memoizedState,n=n(r,t),n=n==null?t:re({},t,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var ji={isMounted:function(e){return(e=e._reactInternals)?En(e)===e:!1},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=_e(),l=Yt(e),i=Tt(r,l);i.payload=t,n!=null&&(i.callback=n),t=Qt(e,i,l),t!==null&&(it(t,e,l,r),Wl(t,e,l))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=_e(),l=Yt(e),i=Tt(r,l);i.tag=1,i.payload=t,n!=null&&(i.callback=n),t=Qt(e,i,l),t!==null&&(it(t,e,l,r),Wl(t,e,l))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=_e(),r=Yt(e),l=Tt(n,r);l.tag=2,t!=null&&(l.callback=t),t=Qt(e,l,r),t!==null&&(it(t,e,r,n),Wl(t,e,r))}};function Xu(e,t,n,r,l,i,o){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(r,i,o):t.prototype&&t.prototype.isPureReactComponent?!Vr(n,r)||!Vr(l,i):!0}function nd(e,t,n){var r=!1,l=qt,i=t.contextType;return typeof i=="object"&&i!==null?i=Xe(i):(l=Ae(t)?gn:Se.current,r=t.contextTypes,i=(r=r!=null)?er(e,l):qt),t=new t(n,i),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=ji,e.stateNode=t,t._reactInternals=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=i),t}function Zu(e,t,n,r){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(n,r),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ji.enqueueReplaceState(t,t.state,null)}function hs(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=td,pa(e);var i=t.contextType;typeof i=="object"&&i!==null?l.context=Xe(i):(i=Ae(t)?gn:Se.current,l.context=er(e,i)),l.state=e.memoizedState,i=t.getDerivedStateFromProps,typeof i=="function"&&(ps(e,t,i,n),l.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof l.getSnapshotBeforeUpdate=="function"||typeof l.UNSAFE_componentWillMount!="function"&&typeof l.componentWillMount!="function"||(t=l.state,typeof l.componentWillMount=="function"&&l.componentWillMount(),typeof l.UNSAFE_componentWillMount=="function"&&l.UNSAFE_componentWillMount(),t!==l.state&&ji.enqueueReplaceState(l,l.state,null),di(e,n,l,r),l.state=e.memoizedState),typeof l.componentDidMount=="function"&&(e.flags|=4194308)}function yr(e,t,n){if(e=n.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(E(309));var r=n.stateNode}if(!r)throw Error(E(147,e));var l=r,i=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===i?t.ref:(t=function(o){var s=l.refs;s===td&&(s=l.refs={}),o===null?delete s[i]:s[i]=o},t._stringRef=i,t)}if(typeof e!="string")throw Error(E(284));if(!n._owner)throw Error(E(290,e))}return e}function Ol(e,t){throw e=Object.prototype.toString.call(t),Error(E(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function qu(e){var t=e._init;return t(e._payload)}function rd(e){function t(m,d){if(e){var h=m.deletions;h===null?(m.deletions=[d],m.flags|=16):h.push(d)}}function n(m,d){if(!e)return null;for(;d!==null;)t(m,d),d=d.sibling;return null}function r(m,d){for(m=new Map;d!==null;)d.key!==null?m.set(d.key,d):m.set(d.index,d),d=d.sibling;return m}function l(m,d){return m=Xt(m,d),m.index=0,m.sibling=null,m}function i(m,d,h){return m.index=h,e?(h=m.alternate,h!==null?(h=h.index,h<d?(m.flags|=2,d):h):(m.flags|=2,d)):(m.flags|=1048576,d)}function o(m){return e&&m.alternate===null&&(m.flags|=2),m}function s(m,d,h,x){return d===null||d.tag!==6?(d=No(h,m.mode,x),d.return=m,d):(d=l(d,h),d.return=m,d)}function a(m,d,h,x){var _=h.type;return _===zn?c(m,d,h.props.children,x,h.key):d!==null&&(d.elementType===_||typeof _=="object"&&_!==null&&_.$$typeof===zt&&qu(_)===d.type)?(x=l(d,h.props),x.ref=yr(m,d,h),x.return=m,x):(x=Yl(h.type,h.key,h.props,null,m.mode,x),x.ref=yr(m,d,h),x.return=m,x)}function u(m,d,h,x){return d===null||d.tag!==4||d.stateNode.containerInfo!==h.containerInfo||d.stateNode.implementation!==h.implementation?(d=Ro(h,m.mode,x),d.return=m,d):(d=l(d,h.children||[]),d.return=m,d)}function c(m,d,h,x,_){return d===null||d.tag!==7?(d=mn(h,m.mode,x,_),d.return=m,d):(d=l(d,h),d.return=m,d)}function p(m,d,h){if(typeof d=="string"&&d!==""||typeof d=="number")return d=No(""+d,m.mode,h),d.return=m,d;if(typeof d=="object"&&d!==null){switch(d.$$typeof){case kl:return h=Yl(d.type,d.key,d.props,null,m.mode,h),h.ref=yr(m,null,d),h.return=m,h;case jn:return d=Ro(d,m.mode,h),d.return=m,d;case zt:var x=d._init;return p(m,x(d._payload),h)}if(Cr(d)||pr(d))return d=mn(d,m.mode,h,null),d.return=m,d;Ol(m,d)}return null}function f(m,d,h,x){var _=d!==null?d.key:null;if(typeof h=="string"&&h!==""||typeof h=="number")return _!==null?null:s(m,d,""+h,x);if(typeof h=="object"&&h!==null){switch(h.$$typeof){case kl:return h.key===_?a(m,d,h,x):null;case jn:return h.key===_?u(m,d,h,x):null;case zt:return _=h._init,f(m,d,_(h._payload),x)}if(Cr(h)||pr(h))return _!==null?null:c(m,d,h,x,null);Ol(m,h)}return null}function y(m,d,h,x,_){if(typeof x=="string"&&x!==""||typeof x=="number")return m=m.get(h)||null,s(d,m,""+x,_);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case kl:return m=m.get(x.key===null?h:x.key)||null,a(d,m,x,_);case jn:return m=m.get(x.key===null?h:x.key)||null,u(d,m,x,_);case zt:var T=x._init;return y(m,d,h,T(x._payload),_)}if(Cr(x)||pr(x))return m=m.get(h)||null,c(d,m,x,_,null);Ol(d,x)}return null}function k(m,d,h,x){for(var _=null,T=null,I=d,L=d=0,J=null;I!==null&&L<h.length;L++){I.index>L?(J=I,I=null):J=I.sibling;var $=f(m,I,h[L],x);if($===null){I===null&&(I=J);break}e&&I&&$.alternate===null&&t(m,I),d=i($,d,L),T===null?_=$:T.sibling=$,T=$,I=J}if(L===h.length)return n(m,I),q&&sn(m,L),_;if(I===null){for(;L<h.length;L++)I=p(m,h[L],x),I!==null&&(d=i(I,d,L),T===null?_=I:T.sibling=I,T=I);return q&&sn(m,L),_}for(I=r(m,I);L<h.length;L++)J=y(I,m,L,h[L],x),J!==null&&(e&&J.alternate!==null&&I.delete(J.key===null?L:J.key),d=i(J,d,L),T===null?_=J:T.sibling=J,T=J);return e&&I.forEach(function(Ee){return t(m,Ee)}),q&&sn(m,L),_}function w(m,d,h,x){var _=pr(h);if(typeof _!="function")throw Error(E(150));if(h=_.call(h),h==null)throw Error(E(151));for(var T=_=null,I=d,L=d=0,J=null,$=h.next();I!==null&&!$.done;L++,$=h.next()){I.index>L?(J=I,I=null):J=I.sibling;var Ee=f(m,I,$.value,x);if(Ee===null){I===null&&(I=J);break}e&&I&&Ee.alternate===null&&t(m,I),d=i(Ee,d,L),T===null?_=Ee:T.sibling=Ee,T=Ee,I=J}if($.done)return n(m,I),q&&sn(m,L),_;if(I===null){for(;!$.done;L++,$=h.next())$=p(m,$.value,x),$!==null&&(d=i($,d,L),T===null?_=$:T.sibling=$,T=$);return q&&sn(m,L),_}for(I=r(m,I);!$.done;L++,$=h.next())$=y(I,m,L,$.value,x),$!==null&&(e&&$.alternate!==null&&I.delete($.key===null?L:$.key),d=i($,d,L),T===null?_=$:T.sibling=$,T=$);return e&&I.forEach(function(yt){return t(m,yt)}),q&&sn(m,L),_}function D(m,d,h,x){if(typeof h=="object"&&h!==null&&h.type===zn&&h.key===null&&(h=h.props.children),typeof h=="object"&&h!==null){switch(h.$$typeof){case kl:e:{for(var _=h.key,T=d;T!==null;){if(T.key===_){if(_=h.type,_===zn){if(T.tag===7){n(m,T.sibling),d=l(T,h.props.children),d.return=m,m=d;break e}}else if(T.elementType===_||typeof _=="object"&&_!==null&&_.$$typeof===zt&&qu(_)===T.type){n(m,T.sibling),d=l(T,h.props),d.ref=yr(m,T,h),d.return=m,m=d;break e}n(m,T);break}else t(m,T);T=T.sibling}h.type===zn?(d=mn(h.props.children,m.mode,x,h.key),d.return=m,m=d):(x=Yl(h.type,h.key,h.props,null,m.mode,x),x.ref=yr(m,d,h),x.return=m,m=x)}return o(m);case jn:e:{for(T=h.key;d!==null;){if(d.key===T)if(d.tag===4&&d.stateNode.containerInfo===h.containerInfo&&d.stateNode.implementation===h.implementation){n(m,d.sibling),d=l(d,h.children||[]),d.return=m,m=d;break e}else{n(m,d);break}else t(m,d);d=d.sibling}d=Ro(h,m.mode,x),d.return=m,m=d}return o(m);case zt:return T=h._init,D(m,d,T(h._payload),x)}if(Cr(h))return k(m,d,h,x);if(pr(h))return w(m,d,h,x);Ol(m,h)}return typeof h=="string"&&h!==""||typeof h=="number"?(h=""+h,d!==null&&d.tag===6?(n(m,d.sibling),d=l(d,h),d.return=m,m=d):(n(m,d),d=No(h,m.mode,x),d.return=m,m=d),o(m)):n(m,d)}return D}var nr=rd(!0),ld=rd(!1),ul={},vt=en(ul),Xr=en(ul),Zr=en(ul);function pn(e){if(e===ul)throw Error(E(174));return e}function ha(e,t){switch(Y(Zr,t),Y(Xr,e),Y(vt,ul),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Vo(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=Vo(t,e)}Z(vt),Y(vt,t)}function rr(){Z(vt),Z(Xr),Z(Zr)}function id(e){pn(Zr.current);var t=pn(vt.current),n=Vo(t,e.type);t!==n&&(Y(Xr,e),Y(vt,n))}function ma(e){Xr.current===e&&(Z(vt),Z(Xr))}var te=en(0);function pi(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var wo=[];function ga(){for(var e=0;e<wo.length;e++)wo[e]._workInProgressVersionPrimary=null;wo.length=0}var bl=Lt.ReactCurrentDispatcher,So=Lt.ReactCurrentBatchConfig,yn=0,ne=null,ue=null,pe=null,hi=!1,Dr=!1,qr=0,fg=0;function ke(){throw Error(E(321))}function va(e,t){if(t===null)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ot(e[n],t[n]))return!1;return!0}function ya(e,t,n,r,l,i){if(yn=i,ne=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,bl.current=e===null||e.memoizedState===null?mg:gg,e=n(r,l),Dr){i=0;do{if(Dr=!1,qr=0,25<=i)throw Error(E(301));i+=1,pe=ue=null,t.updateQueue=null,bl.current=vg,e=n(r,l)}while(Dr)}if(bl.current=mi,t=ue!==null&&ue.next!==null,yn=0,pe=ue=ne=null,hi=!1,t)throw Error(E(300));return e}function ka(){var e=qr!==0;return qr=0,e}function ft(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return pe===null?ne.memoizedState=pe=e:pe=pe.next=e,pe}function Ze(){if(ue===null){var e=ne.alternate;e=e!==null?e.memoizedState:null}else e=ue.next;var t=pe===null?ne.memoizedState:pe.next;if(t!==null)pe=t,ue=e;else{if(e===null)throw Error(E(310));ue=e,e={memoizedState:ue.memoizedState,baseState:ue.baseState,baseQueue:ue.baseQueue,queue:ue.queue,next:null},pe===null?ne.memoizedState=pe=e:pe=pe.next=e}return pe}function Jr(e,t){return typeof t=="function"?t(e):t}function Eo(e){var t=Ze(),n=t.queue;if(n===null)throw Error(E(311));n.lastRenderedReducer=e;var r=ue,l=r.baseQueue,i=n.pending;if(i!==null){if(l!==null){var o=l.next;l.next=i.next,i.next=o}r.baseQueue=l=i,n.pending=null}if(l!==null){i=l.next,r=r.baseState;var s=o=null,a=null,u=i;do{var c=u.lane;if((yn&c)===c)a!==null&&(a=a.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var p={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};a===null?(s=a=p,o=r):a=a.next=p,ne.lanes|=c,kn|=c}u=u.next}while(u!==null&&u!==i);a===null?o=r:a.next=s,ot(r,t.memoizedState)||(Pe=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=a,n.lastRenderedState=r}if(e=n.interleaved,e!==null){l=e;do i=l.lane,ne.lanes|=i,kn|=i,l=l.next;while(l!==e)}else l===null&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Co(e){var t=Ze(),n=t.queue;if(n===null)throw Error(E(311));n.lastRenderedReducer=e;var r=n.dispatch,l=n.pending,i=t.memoizedState;if(l!==null){n.pending=null;var o=l=l.next;do i=e(i,o.action),o=o.next;while(o!==l);ot(i,t.memoizedState)||(Pe=!0),t.memoizedState=i,t.baseQueue===null&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function od(){}function sd(e,t){var n=ne,r=Ze(),l=t(),i=!ot(r.memoizedState,l);if(i&&(r.memoizedState=l,Pe=!0),r=r.queue,xa(cd.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||pe!==null&&pe.memoizedState.tag&1){if(n.flags|=2048,el(9,ud.bind(null,n,r,l,t),void 0,null),he===null)throw Error(E(349));yn&30||ad(n,t,l)}return l}function ad(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=ne.updateQueue,t===null?(t={lastEffect:null,stores:null},ne.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function ud(e,t,n,r){t.value=n,t.getSnapshot=r,fd(t)&&dd(e)}function cd(e,t,n){return n(function(){fd(t)&&dd(e)})}function fd(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ot(e,n)}catch{return!0}}function dd(e){var t=It(e,1);t!==null&&it(t,e,1,-1)}function Ju(e){var t=ft();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Jr,lastRenderedState:e},t.queue=e,e=e.dispatch=hg.bind(null,ne,e),[t.memoizedState,e]}function el(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},t=ne.updateQueue,t===null?(t={lastEffect:null,stores:null},ne.updateQueue=t,t.lastEffect=e.next=e):(n=t.lastEffect,n===null?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e)),e}function pd(){return Ze().memoizedState}function Kl(e,t,n,r){var l=ft();ne.flags|=e,l.memoizedState=el(1|t,n,void 0,r===void 0?null:r)}function zi(e,t,n,r){var l=Ze();r=r===void 0?null:r;var i=void 0;if(ue!==null){var o=ue.memoizedState;if(i=o.destroy,r!==null&&va(r,o.deps)){l.memoizedState=el(t,n,i,r);return}}ne.flags|=e,l.memoizedState=el(1|t,n,i,r)}function ec(e,t){return Kl(8390656,8,e,t)}function xa(e,t){return zi(2048,8,e,t)}function hd(e,t){return zi(4,2,e,t)}function md(e,t){return zi(4,4,e,t)}function gd(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function vd(e,t,n){return n=n!=null?n.concat([e]):null,zi(4,4,gd.bind(null,t,e),n)}function wa(){}function yd(e,t){var n=Ze();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&va(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function kd(e,t){var n=Ze();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&va(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function xd(e,t,n){return yn&21?(ot(n,t)||(n=Ef(),ne.lanes|=n,kn|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,Pe=!0),e.memoizedState=n)}function dg(e,t){var n=K;K=n!==0&&4>n?n:4,e(!0);var r=So.transition;So.transition={};try{e(!1),t()}finally{K=n,So.transition=r}}function wd(){return Ze().memoizedState}function pg(e,t,n){var r=Yt(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Sd(e))Ed(t,n);else if(n=Jf(e,t,n,r),n!==null){var l=_e();it(n,e,r,l),Cd(n,t,r)}}function hg(e,t,n){var r=Yt(e),l={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Sd(e))Ed(t,l);else{var i=e.alternate;if(e.lanes===0&&(i===null||i.lanes===0)&&(i=t.lastRenderedReducer,i!==null))try{var o=t.lastRenderedState,s=i(o,n);if(l.hasEagerState=!0,l.eagerState=s,ot(s,o)){var a=t.interleaved;a===null?(l.next=l,da(t)):(l.next=a.next,a.next=l),t.interleaved=l;return}}catch{}finally{}n=Jf(e,t,l,r),n!==null&&(l=_e(),it(n,e,r,l),Cd(n,t,r))}}function Sd(e){var t=e.alternate;return e===ne||t!==null&&t===ne}function Ed(e,t){Dr=hi=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Cd(e,t,n){if(n&4194240){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,qs(e,n)}}var mi={readContext:Xe,useCallback:ke,useContext:ke,useEffect:ke,useImperativeHandle:ke,useInsertionEffect:ke,useLayoutEffect:ke,useMemo:ke,useReducer:ke,useRef:ke,useState:ke,useDebugValue:ke,useDeferredValue:ke,useTransition:ke,useMutableSource:ke,useSyncExternalStore:ke,useId:ke,unstable_isNewReconciler:!1},mg={readContext:Xe,useCallback:function(e,t){return ft().memoizedState=[e,t===void 0?null:t],e},useContext:Xe,useEffect:ec,useImperativeHandle:function(e,t,n){return n=n!=null?n.concat([e]):null,Kl(4194308,4,gd.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Kl(4194308,4,e,t)},useInsertionEffect:function(e,t){return Kl(4,2,e,t)},useMemo:function(e,t){var n=ft();return t=t===void 0?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ft();return t=n!==void 0?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=pg.bind(null,ne,e),[r.memoizedState,e]},useRef:function(e){var t=ft();return e={current:e},t.memoizedState=e},useState:Ju,useDebugValue:wa,useDeferredValue:function(e){return ft().memoizedState=e},useTransition:function(){var e=Ju(!1),t=e[0];return e=dg.bind(null,e[1]),ft().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ne,l=ft();if(q){if(n===void 0)throw Error(E(407));n=n()}else{if(n=t(),he===null)throw Error(E(349));yn&30||ad(r,t,n)}l.memoizedState=n;var i={value:n,getSnapshot:t};return l.queue=i,ec(cd.bind(null,r,i,e),[e]),r.flags|=2048,el(9,ud.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=ft(),t=he.identifierPrefix;if(q){var n=_t,r=Ct;n=(r&~(1<<32-lt(r)-1)).toString(32)+n,t=":"+t+"R"+n,n=qr++,0<n&&(t+="H"+n.toString(32)),t+=":"}else n=fg++,t=":"+t+"r"+n.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},gg={readContext:Xe,useCallback:yd,useContext:Xe,useEffect:xa,useImperativeHandle:vd,useInsertionEffect:hd,useLayoutEffect:md,useMemo:kd,useReducer:Eo,useRef:pd,useState:function(){return Eo(Jr)},useDebugValue:wa,useDeferredValue:function(e){var t=Ze();return xd(t,ue.memoizedState,e)},useTransition:function(){var e=Eo(Jr)[0],t=Ze().memoizedState;return[e,t]},useMutableSource:od,useSyncExternalStore:sd,useId:wd,unstable_isNewReconciler:!1},vg={readContext:Xe,useCallback:yd,useContext:Xe,useEffect:xa,useImperativeHandle:vd,useInsertionEffect:hd,useLayoutEffect:md,useMemo:kd,useReducer:Co,useRef:pd,useState:function(){return Co(Jr)},useDebugValue:wa,useDeferredValue:function(e){var t=Ze();return ue===null?t.memoizedState=e:xd(t,ue.memoizedState,e)},useTransition:function(){var e=Co(Jr)[0],t=Ze().memoizedState;return[e,t]},useMutableSource:od,useSyncExternalStore:sd,useId:wd,unstable_isNewReconciler:!1};function lr(e,t){try{var n="",r=t;do n+=Kh(r),r=r.return;while(r);var l=n}catch(i){l=`
Error generating stack: `+i.message+`
`+i.stack}return{value:e,source:t,stack:l,digest:null}}function _o(e,t,n){return{value:e,source:null,stack:n??null,digest:t??null}}function ms(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var yg=typeof WeakMap=="function"?WeakMap:Map;function _d(e,t,n){n=Tt(-1,n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){vi||(vi=!0,_s=r),ms(e,t)},n}function Td(e,t,n){n=Tt(-1,n),n.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r=="function"){var l=t.value;n.payload=function(){return r(l)},n.callback=function(){ms(e,t)}}var i=e.stateNode;return i!==null&&typeof i.componentDidCatch=="function"&&(n.callback=function(){ms(e,t),typeof r!="function"&&(Gt===null?Gt=new Set([this]):Gt.add(this));var o=t.stack;this.componentDidCatch(t.value,{componentStack:o!==null?o:""})}),n}function tc(e,t,n){var r=e.pingCache;if(r===null){r=e.pingCache=new yg;var l=new Set;r.set(t,l)}else l=r.get(t),l===void 0&&(l=new Set,r.set(t,l));l.has(n)||(l.add(n),e=Lg.bind(null,e,t,n),t.then(e,e))}function nc(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function rc(e,t,n,r,l){return e.mode&1?(e.flags|=65536,e.lanes=l,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=Tt(-1,1),t.tag=2,Qt(n,t,1))),n.lanes|=1),e)}var kg=Lt.ReactCurrentOwner,Pe=!1;function Ce(e,t,n,r){t.child=e===null?ld(t,null,n,r):nr(t,e.child,n,r)}function lc(e,t,n,r,l){n=n.render;var i=t.ref;return Zn(t,l),r=ya(e,t,n,r,i,l),n=ka(),e!==null&&!Pe?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Ot(e,t,l)):(q&&n&&oa(t),t.flags|=1,Ce(e,t,r,l),t.child)}function ic(e,t,n,r,l){if(e===null){var i=n.type;return typeof i=="function"&&!Ia(i)&&i.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=i,Nd(e,t,i,r,l)):(e=Yl(n.type,null,r,t,t.mode,l),e.ref=t.ref,e.return=t,t.child=e)}if(i=e.child,!(e.lanes&l)){var o=i.memoizedProps;if(n=n.compare,n=n!==null?n:Vr,n(o,r)&&e.ref===t.ref)return Ot(e,t,l)}return t.flags|=1,e=Xt(i,r),e.ref=t.ref,e.return=t,t.child=e}function Nd(e,t,n,r,l){if(e!==null){var i=e.memoizedProps;if(Vr(i,r)&&e.ref===t.ref)if(Pe=!1,t.pendingProps=r=i,(e.lanes&l)!==0)e.flags&131072&&(Pe=!0);else return t.lanes=e.lanes,Ot(e,t,l)}return gs(e,t,n,r,l)}function Rd(e,t,n){var r=t.pendingProps,l=r.children,i=e!==null?e.memoizedState:null;if(r.mode==="hidden")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Y(Vn,$e),$e|=n;else{if(!(n&1073741824))return e=i!==null?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Y(Vn,$e),$e|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=i!==null?i.baseLanes:n,Y(Vn,$e),$e|=r}else i!==null?(r=i.baseLanes|n,t.memoizedState=null):r=n,Y(Vn,$e),$e|=r;return Ce(e,t,l,n),t.child}function Id(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function gs(e,t,n,r,l){var i=Ae(n)?gn:Se.current;return i=er(t,i),Zn(t,l),n=ya(e,t,n,r,i,l),r=ka(),e!==null&&!Pe?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,Ot(e,t,l)):(q&&r&&oa(t),t.flags|=1,Ce(e,t,n,l),t.child)}function oc(e,t,n,r,l){if(Ae(n)){var i=!0;si(t)}else i=!1;if(Zn(t,l),t.stateNode===null)Vl(e,t),nd(t,n,r),hs(t,n,r,l),r=!0;else if(e===null){var o=t.stateNode,s=t.memoizedProps;o.props=s;var a=o.context,u=n.contextType;typeof u=="object"&&u!==null?u=Xe(u):(u=Ae(n)?gn:Se.current,u=er(t,u));var c=n.getDerivedStateFromProps,p=typeof c=="function"||typeof o.getSnapshotBeforeUpdate=="function";p||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(s!==r||a!==u)&&Zu(t,o,r,u),$t=!1;var f=t.memoizedState;o.state=f,di(t,r,o,l),a=t.memoizedState,s!==r||f!==a||Le.current||$t?(typeof c=="function"&&(ps(t,n,c,r),a=t.memoizedState),(s=$t||Xu(t,n,s,r,f,a,u))?(p||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount()),typeof o.componentDidMount=="function"&&(t.flags|=4194308)):(typeof o.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=a),o.props=r,o.state=a,o.context=u,r=s):(typeof o.componentDidMount=="function"&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,ed(e,t),s=t.memoizedProps,u=t.type===t.elementType?s:tt(t.type,s),o.props=u,p=t.pendingProps,f=o.context,a=n.contextType,typeof a=="object"&&a!==null?a=Xe(a):(a=Ae(n)?gn:Se.current,a=er(t,a));var y=n.getDerivedStateFromProps;(c=typeof y=="function"||typeof o.getSnapshotBeforeUpdate=="function")||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(s!==p||f!==a)&&Zu(t,o,r,a),$t=!1,f=t.memoizedState,o.state=f,di(t,r,o,l);var k=t.memoizedState;s!==p||f!==k||Le.current||$t?(typeof y=="function"&&(ps(t,n,y,r),k=t.memoizedState),(u=$t||Xu(t,n,u,r,f,k,a)||!1)?(c||typeof o.UNSAFE_componentWillUpdate!="function"&&typeof o.componentWillUpdate!="function"||(typeof o.componentWillUpdate=="function"&&o.componentWillUpdate(r,k,a),typeof o.UNSAFE_componentWillUpdate=="function"&&o.UNSAFE_componentWillUpdate(r,k,a)),typeof o.componentDidUpdate=="function"&&(t.flags|=4),typeof o.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof o.componentDidUpdate!="function"||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=k),o.props=r,o.state=k,o.context=a,r=u):(typeof o.componentDidUpdate!="function"||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),r=!1)}return vs(e,t,n,r,i,l)}function vs(e,t,n,r,l,i){Id(e,t);var o=(t.flags&128)!==0;if(!r&&!o)return l&&Ku(t,n,!1),Ot(e,t,i);r=t.stateNode,kg.current=t;var s=o&&typeof n.getDerivedStateFromError!="function"?null:r.render();return t.flags|=1,e!==null&&o?(t.child=nr(t,e.child,null,i),t.child=nr(t,null,s,i)):Ce(e,t,s,i),t.memoizedState=r.state,l&&Ku(t,n,!0),t.child}function Od(e){var t=e.stateNode;t.pendingContext?bu(e,t.pendingContext,t.pendingContext!==t.context):t.context&&bu(e,t.context,!1),ha(e,t.containerInfo)}function sc(e,t,n,r,l){return tr(),aa(l),t.flags|=256,Ce(e,t,n,r),t.child}var ys={dehydrated:null,treeContext:null,retryLane:0};function ks(e){return{baseLanes:e,cachePool:null,transitions:null}}function Pd(e,t,n){var r=t.pendingProps,l=te.current,i=!1,o=(t.flags&128)!==0,s;if((s=o)||(s=e!==null&&e.memoizedState===null?!1:(l&2)!==0),s?(i=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(l|=1),Y(te,l&1),e===null)return fs(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data==="$!"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(o=r.children,e=r.fallback,i?(r=t.mode,i=t.child,o={mode:"hidden",children:o},!(r&1)&&i!==null?(i.childLanes=0,i.pendingProps=o):i=Fi(o,r,0,null),e=mn(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=ks(n),t.memoizedState=ys,e):Sa(t,o));if(l=e.memoizedState,l!==null&&(s=l.dehydrated,s!==null))return xg(e,t,o,r,s,l,n);if(i){i=r.fallback,o=t.mode,l=e.child,s=l.sibling;var a={mode:"hidden",children:r.children};return!(o&1)&&t.child!==l?(r=t.child,r.childLanes=0,r.pendingProps=a,t.deletions=null):(r=Xt(l,a),r.subtreeFlags=l.subtreeFlags&14680064),s!==null?i=Xt(s,i):(i=mn(i,o,n,null),i.flags|=2),i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,o=e.child.memoizedState,o=o===null?ks(n):{baseLanes:o.baseLanes|n,cachePool:null,transitions:o.transitions},i.memoizedState=o,i.childLanes=e.childLanes&~n,t.memoizedState=ys,r}return i=e.child,e=i.sibling,r=Xt(i,{mode:"visible",children:r.children}),!(t.mode&1)&&(r.lanes=n),r.return=t,r.sibling=null,e!==null&&(n=t.deletions,n===null?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Sa(e,t){return t=Fi({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function Pl(e,t,n,r){return r!==null&&aa(r),nr(t,e.child,null,n),e=Sa(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function xg(e,t,n,r,l,i,o){if(n)return t.flags&256?(t.flags&=-257,r=_o(Error(E(422))),Pl(e,t,o,r)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(i=r.fallback,l=t.mode,r=Fi({mode:"visible",children:r.children},l,0,null),i=mn(i,l,o,null),i.flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,t.mode&1&&nr(t,e.child,null,o),t.child.memoizedState=ks(o),t.memoizedState=ys,i);if(!(t.mode&1))return Pl(e,t,o,null);if(l.data==="$!"){if(r=l.nextSibling&&l.nextSibling.dataset,r)var s=r.dgst;return r=s,i=Error(E(419)),r=_o(i,r,void 0),Pl(e,t,o,r)}if(s=(o&e.childLanes)!==0,Pe||s){if(r=he,r!==null){switch(o&-o){case 4:l=2;break;case 16:l=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:l=32;break;case 536870912:l=268435456;break;default:l=0}l=l&(r.suspendedLanes|o)?0:l,l!==0&&l!==i.retryLane&&(i.retryLane=l,It(e,l),it(r,e,l,-1))}return Ra(),r=_o(Error(E(421))),Pl(e,t,o,r)}return l.data==="$?"?(t.flags|=128,t.child=e.child,t=Ag.bind(null,e),l._reactRetry=t,null):(e=i.treeContext,Ue=Vt(l.nextSibling),Be=t,q=!0,rt=null,e!==null&&(Ve[Qe++]=Ct,Ve[Qe++]=_t,Ve[Qe++]=vn,Ct=e.id,_t=e.overflow,vn=t),t=Sa(t,r.children),t.flags|=4096,t)}function ac(e,t,n){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),ds(e.return,t,n)}function To(e,t,n,r,l){var i=e.memoizedState;i===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:l}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=l)}function Ld(e,t,n){var r=t.pendingProps,l=r.revealOrder,i=r.tail;if(Ce(e,t,r.children,n),r=te.current,r&2)r=r&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&ac(e,n,t);else if(e.tag===19)ac(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Y(te,r),!(t.mode&1))t.memoizedState=null;else switch(l){case"forwards":for(n=t.child,l=null;n!==null;)e=n.alternate,e!==null&&pi(e)===null&&(l=n),n=n.sibling;n=l,n===null?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),To(t,!1,l,n,i);break;case"backwards":for(n=null,l=t.child,t.child=null;l!==null;){if(e=l.alternate,e!==null&&pi(e)===null){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}To(t,!0,n,null,i);break;case"together":To(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Vl(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Ot(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),kn|=t.lanes,!(n&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error(E(153));if(t.child!==null){for(e=t.child,n=Xt(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=Xt(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function wg(e,t,n){switch(t.tag){case 3:Od(t),tr();break;case 5:id(t);break;case 1:Ae(t.type)&&si(t);break;case 4:ha(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,l=t.memoizedProps.value;Y(ci,r._currentValue),r._currentValue=l;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?(Y(te,te.current&1),t.flags|=128,null):n&t.child.childLanes?Pd(e,t,n):(Y(te,te.current&1),e=Ot(e,t,n),e!==null?e.sibling:null);Y(te,te.current&1);break;case 19:if(r=(n&t.childLanes)!==0,e.flags&128){if(r)return Ld(e,t,n);t.flags|=128}if(l=t.memoizedState,l!==null&&(l.rendering=null,l.tail=null,l.lastEffect=null),Y(te,te.current),r)break;return null;case 22:case 23:return t.lanes=0,Rd(e,t,n)}return Ot(e,t,n)}var Ad,xs,Dd,jd;Ad=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};xs=function(){};Dd=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,pn(vt.current);var i=null;switch(n){case"input":l=Ho(e,l),r=Ho(e,r),i=[];break;case"select":l=re({},l,{value:void 0}),r=re({},r,{value:void 0}),i=[];break;case"textarea":l=Ko(e,l),r=Ko(e,r),i=[];break;default:typeof l.onClick!="function"&&typeof r.onClick=="function"&&(e.onclick=ii)}Qo(n,r);var o;n=null;for(u in l)if(!r.hasOwnProperty(u)&&l.hasOwnProperty(u)&&l[u]!=null)if(u==="style"){var s=l[u];for(o in s)s.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(Fr.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var a=r[u];if(s=l!=null?l[u]:void 0,r.hasOwnProperty(u)&&a!==s&&(a!=null||s!=null))if(u==="style")if(s){for(o in s)!s.hasOwnProperty(o)||a&&a.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in a)a.hasOwnProperty(o)&&s[o]!==a[o]&&(n||(n={}),n[o]=a[o])}else n||(i||(i=[]),i.push(u,n)),n=a;else u==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,s=s?s.__html:void 0,a!=null&&s!==a&&(i=i||[]).push(u,a)):u==="children"?typeof a!="string"&&typeof a!="number"||(i=i||[]).push(u,""+a):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(Fr.hasOwnProperty(u)?(a!=null&&u==="onScroll"&&X("scroll",e),i||s===a||(i=[])):(i=i||[]).push(u,a))}n&&(i=i||[]).push("style",n);var u=i;(t.updateQueue=u)&&(t.flags|=4)}};jd=function(e,t,n,r){n!==r&&(t.flags|=4)};function kr(e,t){if(!q)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function xe(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,r=0;if(t)for(var l=e.child;l!==null;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags&14680064,r|=l.flags&14680064,l.return=e,l=l.sibling;else for(l=e.child;l!==null;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags,r|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Sg(e,t,n){var r=t.pendingProps;switch(sa(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return xe(t),null;case 1:return Ae(t.type)&&oi(),xe(t),null;case 3:return r=t.stateNode,rr(),Z(Le),Z(Se),ga(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(Il(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,rt!==null&&(Rs(rt),rt=null))),xs(e,t),xe(t),null;case 5:ma(t);var l=pn(Zr.current);if(n=t.type,e!==null&&t.stateNode!=null)Dd(e,t,n,r,l),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(E(166));return xe(t),null}if(e=pn(vt.current),Il(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[pt]=t,r[Yr]=i,e=(t.mode&1)!==0,n){case"dialog":X("cancel",r),X("close",r);break;case"iframe":case"object":case"embed":X("load",r);break;case"video":case"audio":for(l=0;l<Tr.length;l++)X(Tr[l],r);break;case"source":X("error",r);break;case"img":case"image":case"link":X("error",r),X("load",r);break;case"details":X("toggle",r);break;case"input":vu(r,i),X("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},X("invalid",r);break;case"textarea":ku(r,i),X("invalid",r)}Qo(n,i),l=null;for(var o in i)if(i.hasOwnProperty(o)){var s=i[o];o==="children"?typeof s=="string"?r.textContent!==s&&(i.suppressHydrationWarning!==!0&&Rl(r.textContent,s,e),l=["children",s]):typeof s=="number"&&r.textContent!==""+s&&(i.suppressHydrationWarning!==!0&&Rl(r.textContent,s,e),l=["children",""+s]):Fr.hasOwnProperty(o)&&s!=null&&o==="onScroll"&&X("scroll",r)}switch(n){case"input":xl(r),yu(r,i,!0);break;case"textarea":xl(r),xu(r);break;case"select":case"option":break;default:typeof i.onClick=="function"&&(r.onclick=ii)}r=l,t.updateQueue=r,r!==null&&(t.flags|=4)}else{o=l.nodeType===9?l:l.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=af(n)),e==="http://www.w3.org/1999/xhtml"?n==="script"?(e=o.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof r.is=="string"?e=o.createElement(n,{is:r.is}):(e=o.createElement(n),n==="select"&&(o=e,r.multiple?o.multiple=!0:r.size&&(o.size=r.size))):e=o.createElementNS(e,n),e[pt]=t,e[Yr]=r,Ad(e,t,!1,!1),t.stateNode=e;e:{switch(o=Go(n,r),n){case"dialog":X("cancel",e),X("close",e),l=r;break;case"iframe":case"object":case"embed":X("load",e),l=r;break;case"video":case"audio":for(l=0;l<Tr.length;l++)X(Tr[l],e);l=r;break;case"source":X("error",e),l=r;break;case"img":case"image":case"link":X("error",e),X("load",e),l=r;break;case"details":X("toggle",e),l=r;break;case"input":vu(e,r),l=Ho(e,r),X("invalid",e);break;case"option":l=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=re({},r,{value:void 0}),X("invalid",e);break;case"textarea":ku(e,r),l=Ko(e,r),X("invalid",e);break;default:l=r}Qo(n,l),s=l;for(i in s)if(s.hasOwnProperty(i)){var a=s[i];i==="style"?ff(e,a):i==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,a!=null&&uf(e,a)):i==="children"?typeof a=="string"?(n!=="textarea"||a!=="")&&Ur(e,a):typeof a=="number"&&Ur(e,""+a):i!=="suppressContentEditableWarning"&&i!=="suppressHydrationWarning"&&i!=="autoFocus"&&(Fr.hasOwnProperty(i)?a!=null&&i==="onScroll"&&X("scroll",e):a!=null&&Vs(e,i,a,o))}switch(n){case"input":xl(e),yu(e,r,!1);break;case"textarea":xl(e),xu(e);break;case"option":r.value!=null&&e.setAttribute("value",""+Zt(r.value));break;case"select":e.multiple=!!r.multiple,i=r.value,i!=null?Qn(e,!!r.multiple,i,!1):r.defaultValue!=null&&Qn(e,!!r.multiple,r.defaultValue,!0);break;default:typeof l.onClick=="function"&&(e.onclick=ii)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return xe(t),null;case 6:if(e&&t.stateNode!=null)jd(e,t,e.memoizedProps,r);else{if(typeof r!="string"&&t.stateNode===null)throw Error(E(166));if(n=pn(Zr.current),pn(vt.current),Il(t)){if(r=t.stateNode,n=t.memoizedProps,r[pt]=t,(i=r.nodeValue!==n)&&(e=Be,e!==null))switch(e.tag){case 3:Rl(r.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Rl(r.nodeValue,n,(e.mode&1)!==0)}i&&(t.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[pt]=t,t.stateNode=r}return xe(t),null;case 13:if(Z(te),r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(q&&Ue!==null&&t.mode&1&&!(t.flags&128))qf(),tr(),t.flags|=98560,i=!1;else if(i=Il(t),r!==null&&r.dehydrated!==null){if(e===null){if(!i)throw Error(E(318));if(i=t.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(E(317));i[pt]=t}else tr(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;xe(t),i=!1}else rt!==null&&(Rs(rt),rt=null),i=!0;if(!i)return t.flags&65536?t:null}return t.flags&128?(t.lanes=n,t):(r=r!==null,r!==(e!==null&&e.memoizedState!==null)&&r&&(t.child.flags|=8192,t.mode&1&&(e===null||te.current&1?ce===0&&(ce=3):Ra())),t.updateQueue!==null&&(t.flags|=4),xe(t),null);case 4:return rr(),xs(e,t),e===null&&Qr(t.stateNode.containerInfo),xe(t),null;case 10:return fa(t.type._context),xe(t),null;case 17:return Ae(t.type)&&oi(),xe(t),null;case 19:if(Z(te),i=t.memoizedState,i===null)return xe(t),null;if(r=(t.flags&128)!==0,o=i.rendering,o===null)if(r)kr(i,!1);else{if(ce!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(o=pi(e),o!==null){for(t.flags|=128,kr(i,!1),r=o.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;n!==null;)i=n,e=r,i.flags&=14680066,o=i.alternate,o===null?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=o.childLanes,i.lanes=o.lanes,i.child=o.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=o.memoizedProps,i.memoizedState=o.memoizedState,i.updateQueue=o.updateQueue,i.type=o.type,e=o.dependencies,i.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Y(te,te.current&1|2),t.child}e=e.sibling}i.tail!==null&&oe()>ir&&(t.flags|=128,r=!0,kr(i,!1),t.lanes=4194304)}else{if(!r)if(e=pi(o),e!==null){if(t.flags|=128,r=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),kr(i,!0),i.tail===null&&i.tailMode==="hidden"&&!o.alternate&&!q)return xe(t),null}else 2*oe()-i.renderingStartTime>ir&&n!==1073741824&&(t.flags|=128,r=!0,kr(i,!1),t.lanes=4194304);i.isBackwards?(o.sibling=t.child,t.child=o):(n=i.last,n!==null?n.sibling=o:t.child=o,i.last=o)}return i.tail!==null?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=oe(),t.sibling=null,n=te.current,Y(te,r?n&1|2:n&1),t):(xe(t),null);case 22:case 23:return Na(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&t.mode&1?$e&1073741824&&(xe(t),t.subtreeFlags&6&&(t.flags|=8192)):xe(t),null;case 24:return null;case 25:return null}throw Error(E(156,t.tag))}function Eg(e,t){switch(sa(t),t.tag){case 1:return Ae(t.type)&&oi(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return rr(),Z(Le),Z(Se),ga(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return ma(t),null;case 13:if(Z(te),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(E(340));tr()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return Z(te),null;case 4:return rr(),null;case 10:return fa(t.type._context),null;case 22:case 23:return Na(),null;case 24:return null;default:return null}}var Ll=!1,we=!1,Cg=typeof WeakSet=="function"?WeakSet:Set,P=null;function Kn(e,t){var n=e.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){le(e,t,r)}else n.current=null}function ws(e,t,n){try{n()}catch(r){le(e,t,r)}}var uc=!1;function _g(e,t){if(ls=ni,e=Ff(),ia(e)){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var l=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch{n=null;break e}var o=0,s=-1,a=-1,u=0,c=0,p=e,f=null;t:for(;;){for(var y;p!==n||l!==0&&p.nodeType!==3||(s=o+l),p!==i||r!==0&&p.nodeType!==3||(a=o+r),p.nodeType===3&&(o+=p.nodeValue.length),(y=p.firstChild)!==null;)f=p,p=y;for(;;){if(p===e)break t;if(f===n&&++u===l&&(s=o),f===i&&++c===r&&(a=o),(y=p.nextSibling)!==null)break;p=f,f=p.parentNode}p=y}n=s===-1||a===-1?null:{start:s,end:a}}else n=null}n=n||{start:0,end:0}}else n=null;for(is={focusedElem:e,selectionRange:n},ni=!1,P=t;P!==null;)if(t=P,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,P=e;else for(;P!==null;){t=P;try{var k=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(k!==null){var w=k.memoizedProps,D=k.memoizedState,m=t.stateNode,d=m.getSnapshotBeforeUpdate(t.elementType===t.type?w:tt(t.type,w),D);m.__reactInternalSnapshotBeforeUpdate=d}break;case 3:var h=t.stateNode.containerInfo;h.nodeType===1?h.textContent="":h.nodeType===9&&h.documentElement&&h.removeChild(h.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(E(163))}}catch(x){le(t,t.return,x)}if(e=t.sibling,e!==null){e.return=t.return,P=e;break}P=t.return}return k=uc,uc=!1,k}function jr(e,t,n){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var l=r=r.next;do{if((l.tag&e)===e){var i=l.destroy;l.destroy=void 0,i!==void 0&&ws(t,n,i)}l=l.next}while(l!==r)}}function $i(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Ss(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t=="function"?t(e):t.current=e}}function zd(e){var t=e.alternate;t!==null&&(e.alternate=null,zd(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[pt],delete t[Yr],delete t[as],delete t[sg],delete t[ag])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function $d(e){return e.tag===5||e.tag===3||e.tag===4}function cc(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||$d(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Es(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=ii));else if(r!==4&&(e=e.child,e!==null))for(Es(e,t,n),e=e.sibling;e!==null;)Es(e,t,n),e=e.sibling}function Cs(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(Cs(e,t,n),e=e.sibling;e!==null;)Cs(e,t,n),e=e.sibling}var ge=null,nt=!1;function jt(e,t,n){for(n=n.child;n!==null;)Md(e,t,n),n=n.sibling}function Md(e,t,n){if(gt&&typeof gt.onCommitFiberUnmount=="function")try{gt.onCommitFiberUnmount(Ii,n)}catch{}switch(n.tag){case 5:we||Kn(n,t);case 6:var r=ge,l=nt;ge=null,jt(e,t,n),ge=r,nt=l,ge!==null&&(nt?(e=ge,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):ge.removeChild(n.stateNode));break;case 18:ge!==null&&(nt?(e=ge,n=n.stateNode,e.nodeType===8?ko(e.parentNode,n):e.nodeType===1&&ko(e,n),br(e)):ko(ge,n.stateNode));break;case 4:r=ge,l=nt,ge=n.stateNode.containerInfo,nt=!0,jt(e,t,n),ge=r,nt=l;break;case 0:case 11:case 14:case 15:if(!we&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){l=r=r.next;do{var i=l,o=i.destroy;i=i.tag,o!==void 0&&(i&2||i&4)&&ws(n,t,o),l=l.next}while(l!==r)}jt(e,t,n);break;case 1:if(!we&&(Kn(n,t),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(s){le(n,t,s)}jt(e,t,n);break;case 21:jt(e,t,n);break;case 22:n.mode&1?(we=(r=we)||n.memoizedState!==null,jt(e,t,n),we=r):jt(e,t,n);break;default:jt(e,t,n)}}function fc(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new Cg),t.forEach(function(r){var l=Dg.bind(null,e,r);n.has(r)||(n.add(r),r.then(l,l))})}}function Je(e,t){var n=t.deletions;if(n!==null)for(var r=0;r<n.length;r++){var l=n[r];try{var i=e,o=t,s=o;e:for(;s!==null;){switch(s.tag){case 5:ge=s.stateNode,nt=!1;break e;case 3:ge=s.stateNode.containerInfo,nt=!0;break e;case 4:ge=s.stateNode.containerInfo,nt=!0;break e}s=s.return}if(ge===null)throw Error(E(160));Md(i,o,l),ge=null,nt=!1;var a=l.alternate;a!==null&&(a.return=null),l.return=null}catch(u){le(l,t,u)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)Fd(t,e),t=t.sibling}function Fd(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(Je(t,e),ct(e),r&4){try{jr(3,e,e.return),$i(3,e)}catch(w){le(e,e.return,w)}try{jr(5,e,e.return)}catch(w){le(e,e.return,w)}}break;case 1:Je(t,e),ct(e),r&512&&n!==null&&Kn(n,n.return);break;case 5:if(Je(t,e),ct(e),r&512&&n!==null&&Kn(n,n.return),e.flags&32){var l=e.stateNode;try{Ur(l,"")}catch(w){le(e,e.return,w)}}if(r&4&&(l=e.stateNode,l!=null)){var i=e.memoizedProps,o=n!==null?n.memoizedProps:i,s=e.type,a=e.updateQueue;if(e.updateQueue=null,a!==null)try{s==="input"&&i.type==="radio"&&i.name!=null&&of(l,i),Go(s,o);var u=Go(s,i);for(o=0;o<a.length;o+=2){var c=a[o],p=a[o+1];c==="style"?ff(l,p):c==="dangerouslySetInnerHTML"?uf(l,p):c==="children"?Ur(l,p):Vs(l,c,p,u)}switch(s){case"input":Wo(l,i);break;case"textarea":sf(l,i);break;case"select":var f=l._wrapperState.wasMultiple;l._wrapperState.wasMultiple=!!i.multiple;var y=i.value;y!=null?Qn(l,!!i.multiple,y,!1):f!==!!i.multiple&&(i.defaultValue!=null?Qn(l,!!i.multiple,i.defaultValue,!0):Qn(l,!!i.multiple,i.multiple?[]:"",!1))}l[Yr]=i}catch(w){le(e,e.return,w)}}break;case 6:if(Je(t,e),ct(e),r&4){if(e.stateNode===null)throw Error(E(162));l=e.stateNode,i=e.memoizedProps;try{l.nodeValue=i}catch(w){le(e,e.return,w)}}break;case 3:if(Je(t,e),ct(e),r&4&&n!==null&&n.memoizedState.isDehydrated)try{br(t.containerInfo)}catch(w){le(e,e.return,w)}break;case 4:Je(t,e),ct(e);break;case 13:Je(t,e),ct(e),l=e.child,l.flags&8192&&(i=l.memoizedState!==null,l.stateNode.isHidden=i,!i||l.alternate!==null&&l.alternate.memoizedState!==null||(_a=oe())),r&4&&fc(e);break;case 22:if(c=n!==null&&n.memoizedState!==null,e.mode&1?(we=(u=we)||c,Je(t,e),we=u):Je(t,e),ct(e),r&8192){if(u=e.memoizedState!==null,(e.stateNode.isHidden=u)&&!c&&e.mode&1)for(P=e,c=e.child;c!==null;){for(p=P=c;P!==null;){switch(f=P,y=f.child,f.tag){case 0:case 11:case 14:case 15:jr(4,f,f.return);break;case 1:Kn(f,f.return);var k=f.stateNode;if(typeof k.componentWillUnmount=="function"){r=f,n=f.return;try{t=r,k.props=t.memoizedProps,k.state=t.memoizedState,k.componentWillUnmount()}catch(w){le(r,n,w)}}break;case 5:Kn(f,f.return);break;case 22:if(f.memoizedState!==null){pc(p);continue}}y!==null?(y.return=f,P=y):pc(p)}c=c.sibling}e:for(c=null,p=e;;){if(p.tag===5){if(c===null){c=p;try{l=p.stateNode,u?(i=l.style,typeof i.setProperty=="function"?i.setProperty("display","none","important"):i.display="none"):(s=p.stateNode,a=p.memoizedProps.style,o=a!=null&&a.hasOwnProperty("display")?a.display:null,s.style.display=cf("display",o))}catch(w){le(e,e.return,w)}}}else if(p.tag===6){if(c===null)try{p.stateNode.nodeValue=u?"":p.memoizedProps}catch(w){le(e,e.return,w)}}else if((p.tag!==22&&p.tag!==23||p.memoizedState===null||p===e)&&p.child!==null){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;p.sibling===null;){if(p.return===null||p.return===e)break e;c===p&&(c=null),p=p.return}c===p&&(c=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:Je(t,e),ct(e),r&4&&fc(e);break;case 21:break;default:Je(t,e),ct(e)}}function ct(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if($d(n)){var r=n;break e}n=n.return}throw Error(E(160))}switch(r.tag){case 5:var l=r.stateNode;r.flags&32&&(Ur(l,""),r.flags&=-33);var i=cc(e);Cs(e,i,l);break;case 3:case 4:var o=r.stateNode.containerInfo,s=cc(e);Es(e,s,o);break;default:throw Error(E(161))}}catch(a){le(e,e.return,a)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function Tg(e,t,n){P=e,Ud(e)}function Ud(e,t,n){for(var r=(e.mode&1)!==0;P!==null;){var l=P,i=l.child;if(l.tag===22&&r){var o=l.memoizedState!==null||Ll;if(!o){var s=l.alternate,a=s!==null&&s.memoizedState!==null||we;s=Ll;var u=we;if(Ll=o,(we=a)&&!u)for(P=l;P!==null;)o=P,a=o.child,o.tag===22&&o.memoizedState!==null?hc(l):a!==null?(a.return=o,P=a):hc(l);for(;i!==null;)P=i,Ud(i),i=i.sibling;P=l,Ll=s,we=u}dc(e)}else l.subtreeFlags&8772&&i!==null?(i.return=l,P=i):dc(e)}}function dc(e){for(;P!==null;){var t=P;if(t.flags&8772){var n=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:we||$i(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!we)if(n===null)r.componentDidMount();else{var l=t.elementType===t.type?n.memoizedProps:tt(t.type,n.memoizedProps);r.componentDidUpdate(l,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;i!==null&&Yu(t,i,r);break;case 3:var o=t.updateQueue;if(o!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}Yu(t,o,n)}break;case 5:var s=t.stateNode;if(n===null&&t.flags&4){n=s;var a=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":a.autoFocus&&n.focus();break;case"img":a.src&&(n.src=a.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var u=t.alternate;if(u!==null){var c=u.memoizedState;if(c!==null){var p=c.dehydrated;p!==null&&br(p)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(E(163))}we||t.flags&512&&Ss(t)}catch(f){le(t,t.return,f)}}if(t===e){P=null;break}if(n=t.sibling,n!==null){n.return=t.return,P=n;break}P=t.return}}function pc(e){for(;P!==null;){var t=P;if(t===e){P=null;break}var n=t.sibling;if(n!==null){n.return=t.return,P=n;break}P=t.return}}function hc(e){for(;P!==null;){var t=P;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{$i(4,t)}catch(a){le(t,n,a)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount=="function"){var l=t.return;try{r.componentDidMount()}catch(a){le(t,l,a)}}var i=t.return;try{Ss(t)}catch(a){le(t,i,a)}break;case 5:var o=t.return;try{Ss(t)}catch(a){le(t,o,a)}}}catch(a){le(t,t.return,a)}if(t===e){P=null;break}var s=t.sibling;if(s!==null){s.return=t.return,P=s;break}P=t.return}}var Ng=Math.ceil,gi=Lt.ReactCurrentDispatcher,Ea=Lt.ReactCurrentOwner,Ye=Lt.ReactCurrentBatchConfig,H=0,he=null,se=null,ve=0,$e=0,Vn=en(0),ce=0,tl=null,kn=0,Mi=0,Ca=0,zr=null,Oe=null,_a=0,ir=1/0,St=null,vi=!1,_s=null,Gt=null,Al=!1,Ht=null,yi=0,$r=0,Ts=null,Ql=-1,Gl=0;function _e(){return H&6?oe():Ql!==-1?Ql:Ql=oe()}function Yt(e){return e.mode&1?H&2&&ve!==0?ve&-ve:cg.transition!==null?(Gl===0&&(Gl=Ef()),Gl):(e=K,e!==0||(e=window.event,e=e===void 0?16:Of(e.type)),e):1}function it(e,t,n,r){if(50<$r)throw $r=0,Ts=null,Error(E(185));ol(e,n,r),(!(H&2)||e!==he)&&(e===he&&(!(H&2)&&(Mi|=n),ce===4&&Ut(e,ve)),De(e,r),n===1&&H===0&&!(t.mode&1)&&(ir=oe()+500,Di&&tn()))}function De(e,t){var n=e.callbackNode;cm(e,t);var r=ti(e,e===he?ve:0);if(r===0)n!==null&&Eu(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(n!=null&&Eu(n),t===1)e.tag===0?ug(mc.bind(null,e)):Yf(mc.bind(null,e)),ig(function(){!(H&6)&&tn()}),n=null;else{switch(Cf(r)){case 1:n=Zs;break;case 4:n=wf;break;case 16:n=ei;break;case 536870912:n=Sf;break;default:n=ei}n=Gd(n,Bd.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Bd(e,t){if(Ql=-1,Gl=0,H&6)throw Error(E(327));var n=e.callbackNode;if(qn()&&e.callbackNode!==n)return null;var r=ti(e,e===he?ve:0);if(r===0)return null;if(r&30||r&e.expiredLanes||t)t=ki(e,r);else{t=r;var l=H;H|=2;var i=Wd();(he!==e||ve!==t)&&(St=null,ir=oe()+500,hn(e,t));do try{Og();break}catch(s){Hd(e,s)}while(1);ca(),gi.current=i,H=l,se!==null?t=0:(he=null,ve=0,t=ce)}if(t!==0){if(t===2&&(l=Jo(e),l!==0&&(r=l,t=Ns(e,l))),t===1)throw n=tl,hn(e,0),Ut(e,r),De(e,oe()),n;if(t===6)Ut(e,r);else{if(l=e.current.alternate,!(r&30)&&!Rg(l)&&(t=ki(e,r),t===2&&(i=Jo(e),i!==0&&(r=i,t=Ns(e,i))),t===1))throw n=tl,hn(e,0),Ut(e,r),De(e,oe()),n;switch(e.finishedWork=l,e.finishedLanes=r,t){case 0:case 1:throw Error(E(345));case 2:an(e,Oe,St);break;case 3:if(Ut(e,r),(r&130023424)===r&&(t=_a+500-oe(),10<t)){if(ti(e,0)!==0)break;if(l=e.suspendedLanes,(l&r)!==r){_e(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=ss(an.bind(null,e,Oe,St),t);break}an(e,Oe,St);break;case 4:if(Ut(e,r),(r&4194240)===r)break;for(t=e.eventTimes,l=-1;0<r;){var o=31-lt(r);i=1<<o,o=t[o],o>l&&(l=o),r&=~i}if(r=l,r=oe()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Ng(r/1960))-r,10<r){e.timeoutHandle=ss(an.bind(null,e,Oe,St),r);break}an(e,Oe,St);break;case 5:an(e,Oe,St);break;default:throw Error(E(329))}}}return De(e,oe()),e.callbackNode===n?Bd.bind(null,e):null}function Ns(e,t){var n=zr;return e.current.memoizedState.isDehydrated&&(hn(e,t).flags|=256),e=ki(e,t),e!==2&&(t=Oe,Oe=n,t!==null&&Rs(t)),e}function Rs(e){Oe===null?Oe=e:Oe.push.apply(Oe,e)}function Rg(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var l=n[r],i=l.getSnapshot;l=l.value;try{if(!ot(i(),l))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Ut(e,t){for(t&=~Ca,t&=~Mi,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-lt(t),r=1<<n;e[n]=-1,t&=~r}}function mc(e){if(H&6)throw Error(E(327));qn();var t=ti(e,0);if(!(t&1))return De(e,oe()),null;var n=ki(e,t);if(e.tag!==0&&n===2){var r=Jo(e);r!==0&&(t=r,n=Ns(e,r))}if(n===1)throw n=tl,hn(e,0),Ut(e,t),De(e,oe()),n;if(n===6)throw Error(E(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,an(e,Oe,St),De(e,oe()),null}function Ta(e,t){var n=H;H|=1;try{return e(t)}finally{H=n,H===0&&(ir=oe()+500,Di&&tn())}}function xn(e){Ht!==null&&Ht.tag===0&&!(H&6)&&qn();var t=H;H|=1;var n=Ye.transition,r=K;try{if(Ye.transition=null,K=1,e)return e()}finally{K=r,Ye.transition=n,H=t,!(H&6)&&tn()}}function Na(){$e=Vn.current,Z(Vn)}function hn(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,lg(n)),se!==null)for(n=se.return;n!==null;){var r=n;switch(sa(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&oi();break;case 3:rr(),Z(Le),Z(Se),ga();break;case 5:ma(r);break;case 4:rr();break;case 13:Z(te);break;case 19:Z(te);break;case 10:fa(r.type._context);break;case 22:case 23:Na()}n=n.return}if(he=e,se=e=Xt(e.current,null),ve=$e=t,ce=0,tl=null,Ca=Mi=kn=0,Oe=zr=null,dn!==null){for(t=0;t<dn.length;t++)if(n=dn[t],r=n.interleaved,r!==null){n.interleaved=null;var l=r.next,i=n.pending;if(i!==null){var o=i.next;i.next=l,r.next=o}n.pending=r}dn=null}return e}function Hd(e,t){do{var n=se;try{if(ca(),bl.current=mi,hi){for(var r=ne.memoizedState;r!==null;){var l=r.queue;l!==null&&(l.pending=null),r=r.next}hi=!1}if(yn=0,pe=ue=ne=null,Dr=!1,qr=0,Ea.current=null,n===null||n.return===null){ce=1,tl=t,se=null;break}e:{var i=e,o=n.return,s=n,a=t;if(t=ve,s.flags|=32768,a!==null&&typeof a=="object"&&typeof a.then=="function"){var u=a,c=s,p=c.tag;if(!(c.mode&1)&&(p===0||p===11||p===15)){var f=c.alternate;f?(c.updateQueue=f.updateQueue,c.memoizedState=f.memoizedState,c.lanes=f.lanes):(c.updateQueue=null,c.memoizedState=null)}var y=nc(o);if(y!==null){y.flags&=-257,rc(y,o,s,i,t),y.mode&1&&tc(i,u,t),t=y,a=u;var k=t.updateQueue;if(k===null){var w=new Set;w.add(a),t.updateQueue=w}else k.add(a);break e}else{if(!(t&1)){tc(i,u,t),Ra();break e}a=Error(E(426))}}else if(q&&s.mode&1){var D=nc(o);if(D!==null){!(D.flags&65536)&&(D.flags|=256),rc(D,o,s,i,t),aa(lr(a,s));break e}}i=a=lr(a,s),ce!==4&&(ce=2),zr===null?zr=[i]:zr.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t;var m=_d(i,a,t);Gu(i,m);break e;case 1:s=a;var d=i.type,h=i.stateNode;if(!(i.flags&128)&&(typeof d.getDerivedStateFromError=="function"||h!==null&&typeof h.componentDidCatch=="function"&&(Gt===null||!Gt.has(h)))){i.flags|=65536,t&=-t,i.lanes|=t;var x=Td(i,s,t);Gu(i,x);break e}}i=i.return}while(i!==null)}Kd(n)}catch(_){t=_,se===n&&n!==null&&(se=n=n.return);continue}break}while(1)}function Wd(){var e=gi.current;return gi.current=mi,e===null?mi:e}function Ra(){(ce===0||ce===3||ce===2)&&(ce=4),he===null||!(kn&268435455)&&!(Mi&268435455)||Ut(he,ve)}function ki(e,t){var n=H;H|=2;var r=Wd();(he!==e||ve!==t)&&(St=null,hn(e,t));do try{Ig();break}catch(l){Hd(e,l)}while(1);if(ca(),H=n,gi.current=r,se!==null)throw Error(E(261));return he=null,ve=0,ce}function Ig(){for(;se!==null;)bd(se)}function Og(){for(;se!==null&&!tm();)bd(se)}function bd(e){var t=Qd(e.alternate,e,$e);e.memoizedProps=e.pendingProps,t===null?Kd(e):se=t,Ea.current=null}function Kd(e){var t=e;do{var n=t.alternate;if(e=t.return,t.flags&32768){if(n=Eg(n,t),n!==null){n.flags&=32767,se=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{ce=6,se=null;return}}else if(n=Sg(n,t,$e),n!==null){se=n;return}if(t=t.sibling,t!==null){se=t;return}se=t=e}while(t!==null);ce===0&&(ce=5)}function an(e,t,n){var r=K,l=Ye.transition;try{Ye.transition=null,K=1,Pg(e,t,n,r)}finally{Ye.transition=l,K=r}return null}function Pg(e,t,n,r){do qn();while(Ht!==null);if(H&6)throw Error(E(327));n=e.finishedWork;var l=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(E(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(fm(e,i),e===he&&(se=he=null,ve=0),!(n.subtreeFlags&2064)&&!(n.flags&2064)||Al||(Al=!0,Gd(ei,function(){return qn(),null})),i=(n.flags&15990)!==0,n.subtreeFlags&15990||i){i=Ye.transition,Ye.transition=null;var o=K;K=1;var s=H;H|=4,Ea.current=null,_g(e,n),Fd(n,e),Zm(is),ni=!!ls,is=ls=null,e.current=n,Tg(n),nm(),H=s,K=o,Ye.transition=i}else e.current=n;if(Al&&(Al=!1,Ht=e,yi=l),i=e.pendingLanes,i===0&&(Gt=null),im(n.stateNode),De(e,oe()),t!==null)for(r=e.onRecoverableError,n=0;n<t.length;n++)l=t[n],r(l.value,{componentStack:l.stack,digest:l.digest});if(vi)throw vi=!1,e=_s,_s=null,e;return yi&1&&e.tag!==0&&qn(),i=e.pendingLanes,i&1?e===Ts?$r++:($r=0,Ts=e):$r=0,tn(),null}function qn(){if(Ht!==null){var e=Cf(yi),t=Ye.transition,n=K;try{if(Ye.transition=null,K=16>e?16:e,Ht===null)var r=!1;else{if(e=Ht,Ht=null,yi=0,H&6)throw Error(E(331));var l=H;for(H|=4,P=e.current;P!==null;){var i=P,o=i.child;if(P.flags&16){var s=i.deletions;if(s!==null){for(var a=0;a<s.length;a++){var u=s[a];for(P=u;P!==null;){var c=P;switch(c.tag){case 0:case 11:case 15:jr(8,c,i)}var p=c.child;if(p!==null)p.return=c,P=p;else for(;P!==null;){c=P;var f=c.sibling,y=c.return;if(zd(c),c===u){P=null;break}if(f!==null){f.return=y,P=f;break}P=y}}}var k=i.alternate;if(k!==null){var w=k.child;if(w!==null){k.child=null;do{var D=w.sibling;w.sibling=null,w=D}while(w!==null)}}P=i}}if(i.subtreeFlags&2064&&o!==null)o.return=i,P=o;else e:for(;P!==null;){if(i=P,i.flags&2048)switch(i.tag){case 0:case 11:case 15:jr(9,i,i.return)}var m=i.sibling;if(m!==null){m.return=i.return,P=m;break e}P=i.return}}var d=e.current;for(P=d;P!==null;){o=P;var h=o.child;if(o.subtreeFlags&2064&&h!==null)h.return=o,P=h;else e:for(o=d;P!==null;){if(s=P,s.flags&2048)try{switch(s.tag){case 0:case 11:case 15:$i(9,s)}}catch(_){le(s,s.return,_)}if(s===o){P=null;break e}var x=s.sibling;if(x!==null){x.return=s.return,P=x;break e}P=s.return}}if(H=l,tn(),gt&&typeof gt.onPostCommitFiberRoot=="function")try{gt.onPostCommitFiberRoot(Ii,e)}catch{}r=!0}return r}finally{K=n,Ye.transition=t}}return!1}function gc(e,t,n){t=lr(n,t),t=_d(e,t,1),e=Qt(e,t,1),t=_e(),e!==null&&(ol(e,1,t),De(e,t))}function le(e,t,n){if(e.tag===3)gc(e,e,n);else for(;t!==null;){if(t.tag===3){gc(t,e,n);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(Gt===null||!Gt.has(r))){e=lr(n,e),e=Td(t,e,1),t=Qt(t,e,1),e=_e(),t!==null&&(ol(t,1,e),De(t,e));break}}t=t.return}}function Lg(e,t,n){var r=e.pingCache;r!==null&&r.delete(t),t=_e(),e.pingedLanes|=e.suspendedLanes&n,he===e&&(ve&n)===n&&(ce===4||ce===3&&(ve&130023424)===ve&&500>oe()-_a?hn(e,0):Ca|=n),De(e,t)}function Vd(e,t){t===0&&(e.mode&1?(t=El,El<<=1,!(El&130023424)&&(El=4194304)):t=1);var n=_e();e=It(e,t),e!==null&&(ol(e,t,n),De(e,n))}function Ag(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),Vd(e,n)}function Dg(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,l=e.memoizedState;l!==null&&(n=l.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(E(314))}r!==null&&r.delete(t),Vd(e,n)}var Qd;Qd=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||Le.current)Pe=!0;else{if(!(e.lanes&n)&&!(t.flags&128))return Pe=!1,wg(e,t,n);Pe=!!(e.flags&131072)}else Pe=!1,q&&t.flags&1048576&&Xf(t,ui,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Vl(e,t),e=t.pendingProps;var l=er(t,Se.current);Zn(t,n),l=ya(null,t,r,e,l,n);var i=ka();return t.flags|=1,typeof l=="object"&&l!==null&&typeof l.render=="function"&&l.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ae(r)?(i=!0,si(t)):i=!1,t.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,pa(t),l.updater=ji,t.stateNode=l,l._reactInternals=t,hs(t,r,e,n),t=vs(null,t,r,!0,i,n)):(t.tag=0,q&&i&&oa(t),Ce(null,t,l,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Vl(e,t),e=t.pendingProps,l=r._init,r=l(r._payload),t.type=r,l=t.tag=zg(r),e=tt(r,e),l){case 0:t=gs(null,t,r,e,n);break e;case 1:t=oc(null,t,r,e,n);break e;case 11:t=lc(null,t,r,e,n);break e;case 14:t=ic(null,t,r,tt(r.type,e),n);break e}throw Error(E(306,r,""))}return t;case 0:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:tt(r,l),gs(e,t,r,l,n);case 1:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:tt(r,l),oc(e,t,r,l,n);case 3:e:{if(Od(t),e===null)throw Error(E(387));r=t.pendingProps,i=t.memoizedState,l=i.element,ed(e,t),di(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated)if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,t.flags&256){l=lr(Error(E(423)),t),t=sc(e,t,r,n,l);break e}else if(r!==l){l=lr(Error(E(424)),t),t=sc(e,t,r,n,l);break e}else for(Ue=Vt(t.stateNode.containerInfo.firstChild),Be=t,q=!0,rt=null,n=ld(t,null,r,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(tr(),r===l){t=Ot(e,t,n);break e}Ce(e,t,r,n)}t=t.child}return t;case 5:return id(t),e===null&&fs(t),r=t.type,l=t.pendingProps,i=e!==null?e.memoizedProps:null,o=l.children,os(r,l)?o=null:i!==null&&os(r,i)&&(t.flags|=32),Id(e,t),Ce(e,t,o,n),t.child;case 6:return e===null&&fs(t),null;case 13:return Pd(e,t,n);case 4:return ha(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=nr(t,null,r,n):Ce(e,t,r,n),t.child;case 11:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:tt(r,l),lc(e,t,r,l,n);case 7:return Ce(e,t,t.pendingProps,n),t.child;case 8:return Ce(e,t,t.pendingProps.children,n),t.child;case 12:return Ce(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,l=t.pendingProps,i=t.memoizedProps,o=l.value,Y(ci,r._currentValue),r._currentValue=o,i!==null)if(ot(i.value,o)){if(i.children===l.children&&!Le.current){t=Ot(e,t,n);break e}}else for(i=t.child,i!==null&&(i.return=t);i!==null;){var s=i.dependencies;if(s!==null){o=i.child;for(var a=s.firstContext;a!==null;){if(a.context===r){if(i.tag===1){a=Tt(-1,n&-n),a.tag=2;var u=i.updateQueue;if(u!==null){u=u.shared;var c=u.pending;c===null?a.next=a:(a.next=c.next,c.next=a),u.pending=a}}i.lanes|=n,a=i.alternate,a!==null&&(a.lanes|=n),ds(i.return,n,t),s.lanes|=n;break}a=a.next}}else if(i.tag===10)o=i.type===t.type?null:i.child;else if(i.tag===18){if(o=i.return,o===null)throw Error(E(341));o.lanes|=n,s=o.alternate,s!==null&&(s.lanes|=n),ds(o,n,t),o=i.sibling}else o=i.child;if(o!==null)o.return=i;else for(o=i;o!==null;){if(o===t){o=null;break}if(i=o.sibling,i!==null){i.return=o.return,o=i;break}o=o.return}i=o}Ce(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,r=t.pendingProps.children,Zn(t,n),l=Xe(l),r=r(l),t.flags|=1,Ce(e,t,r,n),t.child;case 14:return r=t.type,l=tt(r,t.pendingProps),l=tt(r.type,l),ic(e,t,r,l,n);case 15:return Nd(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:tt(r,l),Vl(e,t),t.tag=1,Ae(r)?(e=!0,si(t)):e=!1,Zn(t,n),nd(t,r,l),hs(t,r,l,n),vs(null,t,r,!0,e,n);case 19:return Ld(e,t,n);case 22:return Rd(e,t,n)}throw Error(E(156,t.tag))};function Gd(e,t){return xf(e,t)}function jg(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ge(e,t,n,r){return new jg(e,t,n,r)}function Ia(e){return e=e.prototype,!(!e||!e.isReactComponent)}function zg(e){if(typeof e=="function")return Ia(e)?1:0;if(e!=null){if(e=e.$$typeof,e===Gs)return 11;if(e===Ys)return 14}return 2}function Xt(e,t){var n=e.alternate;return n===null?(n=Ge(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Yl(e,t,n,r,l,i){var o=2;if(r=e,typeof e=="function")Ia(e)&&(o=1);else if(typeof e=="string")o=5;else e:switch(e){case zn:return mn(n.children,l,i,t);case Qs:o=8,l|=8;break;case Mo:return e=Ge(12,n,t,l|2),e.elementType=Mo,e.lanes=i,e;case Fo:return e=Ge(13,n,t,l),e.elementType=Fo,e.lanes=i,e;case Uo:return e=Ge(19,n,t,l),e.elementType=Uo,e.lanes=i,e;case nf:return Fi(n,l,i,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case ef:o=10;break e;case tf:o=9;break e;case Gs:o=11;break e;case Ys:o=14;break e;case zt:o=16,r=null;break e}throw Error(E(130,e==null?e:typeof e,""))}return t=Ge(o,n,t,l),t.elementType=e,t.type=r,t.lanes=i,t}function mn(e,t,n,r){return e=Ge(7,e,r,t),e.lanes=n,e}function Fi(e,t,n,r){return e=Ge(22,e,r,t),e.elementType=nf,e.lanes=n,e.stateNode={isHidden:!1},e}function No(e,t,n){return e=Ge(6,e,null,t),e.lanes=n,e}function Ro(e,t,n){return t=Ge(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $g(e,t,n,r,l){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=so(0),this.expirationTimes=so(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=so(0),this.identifierPrefix=r,this.onRecoverableError=l,this.mutableSourceEagerHydrationData=null}function Oa(e,t,n,r,l,i,o,s,a){return e=new $g(e,t,n,s,a),t===1?(t=1,i===!0&&(t|=8)):t=0,i=Ge(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},pa(i),e}function Mg(e,t,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:jn,key:r==null?null:""+r,children:e,containerInfo:t,implementation:n}}function Yd(e){if(!e)return qt;e=e._reactInternals;e:{if(En(e)!==e||e.tag!==1)throw Error(E(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ae(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(E(171))}if(e.tag===1){var n=e.type;if(Ae(n))return Gf(e,n,t)}return t}function Xd(e,t,n,r,l,i,o,s,a){return e=Oa(n,r,!0,e,l,i,o,s,a),e.context=Yd(null),n=e.current,r=_e(),l=Yt(n),i=Tt(r,l),i.callback=t??null,Qt(n,i,l),e.current.lanes=l,ol(e,l,r),De(e,r),e}function Ui(e,t,n,r){var l=t.current,i=_e(),o=Yt(l);return n=Yd(n),t.context===null?t.context=n:t.pendingContext=n,t=Tt(i,o),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),e=Qt(l,t,o),e!==null&&(it(e,l,o,i),Wl(e,l,o)),o}function xi(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function vc(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function Pa(e,t){vc(e,t),(e=e.alternate)&&vc(e,t)}function Fg(){return null}var Zd=typeof reportError=="function"?reportError:function(e){console.error(e)};function La(e){this._internalRoot=e}Bi.prototype.render=La.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(E(409));Ui(e,t,null,null)};Bi.prototype.unmount=La.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;xn(function(){Ui(null,e,null,null)}),t[Rt]=null}};function Bi(e){this._internalRoot=e}Bi.prototype.unstable_scheduleHydration=function(e){if(e){var t=Nf();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&t!==0&&t<Ft[n].priority;n++);Ft.splice(n,0,e),n===0&&If(e)}};function Aa(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function Hi(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function yc(){}function Ug(e,t,n,r,l){if(l){if(typeof r=="function"){var i=r;r=function(){var u=xi(o);i.call(u)}}var o=Xd(t,r,e,0,null,!1,!1,"",yc);return e._reactRootContainer=o,e[Rt]=o.current,Qr(e.nodeType===8?e.parentNode:e),xn(),o}for(;l=e.lastChild;)e.removeChild(l);if(typeof r=="function"){var s=r;r=function(){var u=xi(a);s.call(u)}}var a=Oa(e,0,!1,null,null,!1,!1,"",yc);return e._reactRootContainer=a,e[Rt]=a.current,Qr(e.nodeType===8?e.parentNode:e),xn(function(){Ui(t,a,n,r)}),a}function Wi(e,t,n,r,l){var i=n._reactRootContainer;if(i){var o=i;if(typeof l=="function"){var s=l;l=function(){var a=xi(o);s.call(a)}}Ui(t,o,e,l)}else o=Ug(n,t,e,l,r);return xi(o)}_f=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=_r(t.pendingLanes);n!==0&&(qs(t,n|1),De(t,oe()),!(H&6)&&(ir=oe()+500,tn()))}break;case 13:xn(function(){var r=It(e,1);if(r!==null){var l=_e();it(r,e,1,l)}}),Pa(e,1)}};Js=function(e){if(e.tag===13){var t=It(e,134217728);if(t!==null){var n=_e();it(t,e,134217728,n)}Pa(e,134217728)}};Tf=function(e){if(e.tag===13){var t=Yt(e),n=It(e,t);if(n!==null){var r=_e();it(n,e,t,r)}Pa(e,t)}};Nf=function(){return K};Rf=function(e,t){var n=K;try{return K=e,t()}finally{K=n}};Xo=function(e,t,n){switch(t){case"input":if(Wo(e,n),t=n.name,n.type==="radio"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var l=Ai(r);if(!l)throw Error(E(90));lf(r),Wo(r,l)}}}break;case"textarea":sf(e,n);break;case"select":t=n.value,t!=null&&Qn(e,!!n.multiple,t,!1)}};hf=Ta;mf=xn;var Bg={usingClientEntryPoint:!1,Events:[al,Un,Ai,df,pf,Ta]},xr={findFiberByHostInstance:fn,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},Hg={bundleType:xr.bundleType,version:xr.version,rendererPackageName:xr.rendererPackageName,rendererConfig:xr.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Lt.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=yf(e),e===null?null:e.stateNode},findFiberByHostInstance:xr.findFiberByHostInstance||Fg,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Dl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Dl.isDisabled&&Dl.supportsFiber)try{Ii=Dl.inject(Hg),gt=Dl}catch{}}We.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Bg;We.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Aa(t))throw Error(E(200));return Mg(e,t,null,n)};We.createRoot=function(e,t){if(!Aa(e))throw Error(E(299));var n=!1,r="",l=Zd;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(l=t.onRecoverableError)),t=Oa(e,1,!1,null,null,n,!1,r,l),e[Rt]=t.current,Qr(e.nodeType===8?e.parentNode:e),new La(t)};We.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(E(188)):(e=Object.keys(e).join(","),Error(E(268,e)));return e=yf(t),e=e===null?null:e.stateNode,e};We.flushSync=function(e){return xn(e)};We.hydrate=function(e,t,n){if(!Hi(t))throw Error(E(200));return Wi(null,e,t,!0,n)};We.hydrateRoot=function(e,t,n){if(!Aa(e))throw Error(E(405));var r=n!=null&&n.hydratedSources||null,l=!1,i="",o=Zd;if(n!=null&&(n.unstable_strictMode===!0&&(l=!0),n.identifierPrefix!==void 0&&(i=n.identifierPrefix),n.onRecoverableError!==void 0&&(o=n.onRecoverableError)),t=Xd(t,null,e,1,n??null,l,!1,i,o),e[Rt]=t.current,Qr(e),r)for(e=0;e<r.length;e++)n=r[e],l=n._getVersion,l=l(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,l]:t.mutableSourceEagerHydrationData.push(n,l);return new Bi(t)};We.render=function(e,t,n){if(!Hi(t))throw Error(E(200));return Wi(null,e,t,!1,n)};We.unmountComponentAtNode=function(e){if(!Hi(e))throw Error(E(40));return e._reactRootContainer?(xn(function(){Wi(null,null,e,!1,function(){e._reactRootContainer=null,e[Rt]=null})}),!0):!1};We.unstable_batchedUpdates=Ta;We.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Hi(n))throw Error(E(200));if(e==null||e._reactInternals===void 0)throw Error(E(38));return Wi(e,t,n,!1,r)};We.version="18.2.0-next-9e3b772b8-20220608";function qd(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(qd)}catch(e){console.error(e)}}qd(),Yc.exports=We;var Jd=Yc.exports;const Nr=Ni(Jd);var ep,kc=Jd;ep=kc.createRoot,kc.hydrateRoot;var tp={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(e){(function(){var t={}.hasOwnProperty;function n(){for(var r=[],l=0;l<arguments.length;l++){var i=arguments[l];if(i){var o=typeof i;if(o==="string"||o==="number")r.push(i);else if(Array.isArray(i)){if(i.length){var s=n.apply(null,i);s&&r.push(s)}}else if(o==="object"){if(i.toString!==Object.prototype.toString&&!i.toString.toString().includes("[native code]")){r.push(i.toString());continue}for(var a in i)t.call(i,a)&&i[a]&&r.push(a)}}}return r.join(" ")}e.exports?(n.default=n,e.exports=n):window.classNames=n})()})(tp);var Wg=tp.exports;const me=Ni(Wg);function Is(){return Is=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Is.apply(this,arguments)}function np(e,t){if(e==null)return{};var n={},r=Object.keys(e),l,i;for(i=0;i<r.length;i++)l=r[i],!(t.indexOf(l)>=0)&&(n[l]=e[l]);return n}function xc(e){return"default"+e.charAt(0).toUpperCase()+e.substr(1)}function bg(e){var t=Kg(e,"string");return typeof t=="symbol"?t:String(t)}function Kg(e,t){if(typeof e!="object"||e===null)return e;var n=e[Symbol.toPrimitive];if(n!==void 0){var r=n.call(e,t||"default");if(typeof r!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(e)}function Vg(e,t,n){var r=S.useRef(e!==void 0),l=S.useState(t),i=l[0],o=l[1],s=e!==void 0,a=r.current;return r.current=s,!s&&a&&i!==t&&o(t),[s?e:i,S.useCallback(function(u){for(var c=arguments.length,p=new Array(c>1?c-1:0),f=1;f<c;f++)p[f-1]=arguments[f];n&&n.apply(void 0,[u].concat(p)),o(u)},[n])]}function rp(e,t){return Object.keys(t).reduce(function(n,r){var l,i=n,o=i[xc(r)],s=i[r],a=np(i,[xc(r),r].map(bg)),u=t[r],c=Vg(s,o,e[u]),p=c[0],f=c[1];return Is({},a,(l={},l[r]=p,l[u]=f,l))},e)}function Os(e,t){return Os=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,l){return r.__proto__=l,r},Os(e,t)}function Qg(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Os(e,t)}const Gg=["xxl","xl","lg","md","sm","xs"],Yg="xs",Da=S.createContext({prefixes:{},breakpoints:Gg,minBreakpoint:Yg});function Te(e,t){const{prefixes:n}=S.useContext(Da);return e||n[t]||t}function Xg(){const{breakpoints:e}=S.useContext(Da);return e}function Zg(){const{minBreakpoint:e}=S.useContext(Da);return e}function qg(e){return e&&e.ownerDocument||document}function Jg(e){var t=qg(e);return t&&t.defaultView||window}function ev(e,t){return Jg(e).getComputedStyle(e,t)}var tv=/([A-Z])/g;function nv(e){return e.replace(tv,"-$1").toLowerCase()}var rv=/^ms-/;function jl(e){return nv(e).replace(rv,"-ms-")}var lv=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;function iv(e){return!!(e&&lv.test(e))}function lp(e,t){var n="",r="";if(typeof t=="string")return e.style.getPropertyValue(jl(t))||ev(e).getPropertyValue(jl(t));Object.keys(t).forEach(function(l){var i=t[l];!i&&i!==0?e.style.removeProperty(jl(l)):iv(l)?r+=l+"("+i+") ":n+=jl(l)+": "+i+";"}),r&&(n+="transform: "+r+";"),e.style.cssText+=";"+n}var ip={exports:{}},ov="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",sv=ov,av=sv;function op(){}function sp(){}sp.resetWarningCache=op;var uv=function(){function e(r,l,i,o,s,a){if(a!==av){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}e.isRequired=e;function t(){return e}var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:sp,resetWarningCache:op};return n.PropTypes=n,n};ip.exports=uv();var cv=ip.exports;const Me=Ni(cv),wc={disabled:!1},ap=ae.createContext(null);var fv=function(t){return t.scrollTop},Rr="unmounted",un="exited",Mt="entering",cn="entered",Ps="exiting",At=function(e){Qg(t,e);function t(r,l){var i;i=e.call(this,r,l)||this;var o=l,s=o&&!o.isMounting?r.enter:r.appear,a;return i.appearStatus=null,r.in?s?(a=un,i.appearStatus=Mt):a=cn:r.unmountOnExit||r.mountOnEnter?a=Rr:a=un,i.state={status:a},i.nextCallback=null,i}t.getDerivedStateFromProps=function(l,i){var o=l.in;return o&&i.status===Rr?{status:un}:null};var n=t.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(l){var i=null;if(l!==this.props){var o=this.state.status;this.props.in?o!==Mt&&o!==cn&&(i=Mt):(o===Mt||o===cn)&&(i=Ps)}this.updateStatus(!1,i)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var l=this.props.timeout,i,o,s;return i=o=s=l,l!=null&&typeof l!="number"&&(i=l.exit,o=l.enter,s=l.appear!==void 0?l.appear:o),{exit:i,enter:o,appear:s}},n.updateStatus=function(l,i){if(l===void 0&&(l=!1),i!==null)if(this.cancelNextCallback(),i===Mt){if(this.props.unmountOnExit||this.props.mountOnEnter){var o=this.props.nodeRef?this.props.nodeRef.current:Nr.findDOMNode(this);o&&fv(o)}this.performEnter(l)}else this.performExit();else this.props.unmountOnExit&&this.state.status===un&&this.setState({status:Rr})},n.performEnter=function(l){var i=this,o=this.props.enter,s=this.context?this.context.isMounting:l,a=this.props.nodeRef?[s]:[Nr.findDOMNode(this),s],u=a[0],c=a[1],p=this.getTimeouts(),f=s?p.appear:p.enter;if(!l&&!o||wc.disabled){this.safeSetState({status:cn},function(){i.props.onEntered(u)});return}this.props.onEnter(u,c),this.safeSetState({status:Mt},function(){i.props.onEntering(u,c),i.onTransitionEnd(f,function(){i.safeSetState({status:cn},function(){i.props.onEntered(u,c)})})})},n.performExit=function(){var l=this,i=this.props.exit,o=this.getTimeouts(),s=this.props.nodeRef?void 0:Nr.findDOMNode(this);if(!i||wc.disabled){this.safeSetState({status:un},function(){l.props.onExited(s)});return}this.props.onExit(s),this.safeSetState({status:Ps},function(){l.props.onExiting(s),l.onTransitionEnd(o.exit,function(){l.safeSetState({status:un},function(){l.props.onExited(s)})})})},n.cancelNextCallback=function(){this.nextCallback!==null&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(l,i){i=this.setNextCallback(i),this.setState(l,i)},n.setNextCallback=function(l){var i=this,o=!0;return this.nextCallback=function(s){o&&(o=!1,i.nextCallback=null,l(s))},this.nextCallback.cancel=function(){o=!1},this.nextCallback},n.onTransitionEnd=function(l,i){this.setNextCallback(i);var o=this.props.nodeRef?this.props.nodeRef.current:Nr.findDOMNode(this),s=l==null&&!this.props.addEndListener;if(!o||s){setTimeout(this.nextCallback,0);return}if(this.props.addEndListener){var a=this.props.nodeRef?[this.nextCallback]:[o,this.nextCallback],u=a[0],c=a[1];this.props.addEndListener(u,c)}l!=null&&setTimeout(this.nextCallback,l)},n.render=function(){var l=this.state.status;if(l===Rr)return null;var i=this.props,o=i.children;i.in,i.mountOnEnter,i.unmountOnExit,i.appear,i.enter,i.exit,i.timeout,i.addEndListener,i.onEnter,i.onEntering,i.onEntered,i.onExit,i.onExiting,i.onExited,i.nodeRef;var s=np(i,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return ae.createElement(ap.Provider,{value:null},typeof o=="function"?o(l,s):ae.cloneElement(ae.Children.only(o),s))},t}(ae.Component);At.contextType=ap;At.propTypes={};function An(){}At.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:An,onEntering:An,onEntered:An,onExit:An,onExiting:An,onExited:An};At.UNMOUNTED=Rr;At.EXITED=un;At.ENTERING=Mt;At.ENTERED=cn;At.EXITING=Ps;const dv=At,pv=!!(typeof window<"u"&&window.document&&window.document.createElement);var Ls=!1,As=!1;try{var Io={get passive(){return Ls=!0},get once(){return As=Ls=!0}};pv&&(window.addEventListener("test",Io,Io),window.removeEventListener("test",Io,!0))}catch{}function hv(e,t,n,r){if(r&&typeof r!="boolean"&&!As){var l=r.once,i=r.capture,o=n;!As&&l&&(o=n.__once||function s(a){this.removeEventListener(t,s,i),n.call(this,a)},n.__once=o),e.addEventListener(t,o,Ls?r:i)}e.addEventListener(t,n,r)}function mv(e,t,n,r){var l=r&&typeof r!="boolean"?r.capture:r;e.removeEventListener(t,n,l),n.__once&&e.removeEventListener(t,n.__once,l)}function up(e,t,n,r){return hv(e,t,n,r),function(){mv(e,t,n,r)}}function gv(e,t,n,r){if(n===void 0&&(n=!1),r===void 0&&(r=!0),e){var l=document.createEvent("HTMLEvents");l.initEvent(t,n,r),e.dispatchEvent(l)}}function vv(e){var t=lp(e,"transitionDuration")||"",n=t.indexOf("ms")===-1?1e3:1;return parseFloat(t)*n}function yv(e,t,n){n===void 0&&(n=5);var r=!1,l=setTimeout(function(){r||gv(e,"transitionend",!0)},t+n),i=up(e,"transitionend",function(){r=!0},{once:!0});return function(){clearTimeout(l),i()}}function kv(e,t,n,r){n==null&&(n=vv(e)||0);var l=yv(e,n,r),i=up(e,"transitionend",t);return function(){l(),i()}}function Sc(e,t){const n=lp(e,t)||"",r=n.indexOf("ms")===-1?1e3:1;return parseFloat(n)*r}function xv(e,t){const n=Sc(e,"transitionDuration"),r=Sc(e,"transitionDelay"),l=kv(e,i=>{i.target===e&&(l(),t(i))},n+r)}function wv(e){e.offsetHeight}const Ec=e=>!e||typeof e=="function"?e:t=>{e.current=t};function Sv(e,t){const n=Ec(e),r=Ec(t);return l=>{n&&n(l),r&&r(l)}}function ja(e,t){return S.useMemo(()=>Sv(e,t),[e,t])}function Ev(e){return e&&"setState"in e?Nr.findDOMNode(e):e??null}const Cv=ae.forwardRef(({onEnter:e,onEntering:t,onEntered:n,onExit:r,onExiting:l,onExited:i,addEndListener:o,children:s,childRef:a,...u},c)=>{const p=S.useRef(null),f=ja(p,a),y=T=>{f(Ev(T))},k=T=>I=>{T&&p.current&&T(p.current,I)},w=S.useCallback(k(e),[e]),D=S.useCallback(k(t),[t]),m=S.useCallback(k(n),[n]),d=S.useCallback(k(r),[r]),h=S.useCallback(k(l),[l]),x=S.useCallback(k(i),[i]),_=S.useCallback(k(o),[o]);return v.jsx(dv,{ref:c,...u,onEnter:w,onEntered:m,onEntering:D,onExit:d,onExited:x,onExiting:h,addEndListener:_,nodeRef:p,children:typeof s=="function"?(T,I)=>s(T,{...I,ref:y}):ae.cloneElement(s,{ref:y})})}),_v=Cv;function Tv(e){const t=S.useRef(e);return S.useEffect(()=>{t.current=e},[e]),t}function za(e){const t=Tv(e);return S.useCallback(function(...n){return t.current&&t.current(...n)},[t])}const Nv=["as","disabled"];function Rv(e,t){if(e==null)return{};var n={},r=Object.keys(e),l,i;for(i=0;i<r.length;i++)l=r[i],!(t.indexOf(l)>=0)&&(n[l]=e[l]);return n}function Iv(e){return!e||e.trim()==="#"}function cp({tagName:e,disabled:t,href:n,target:r,rel:l,role:i,onClick:o,tabIndex:s=0,type:a}){e||(n!=null||r!=null||l!=null?e="a":e="button");const u={tagName:e};if(e==="button")return[{type:a||"button",disabled:t},u];const c=f=>{if((t||e==="a"&&Iv(n))&&f.preventDefault(),t){f.stopPropagation();return}o==null||o(f)},p=f=>{f.key===" "&&(f.preventDefault(),c(f))};return e==="a"&&(n||(n="#"),t&&(n=void 0)),[{role:i??"button",disabled:void 0,tabIndex:t?void 0:s,href:n,target:e==="a"?r:void 0,"aria-disabled":t||void 0,rel:e==="a"?l:void 0,onClick:c,onKeyDown:p},u]}const fp=S.forwardRef((e,t)=>{let{as:n,disabled:r}=e,l=Rv(e,Nv);const[i,{tagName:o}]=cp(Object.assign({tagName:n,disabled:r},l));return v.jsx(o,Object.assign({},l,i,{ref:t}))});fp.displayName="Button";const Ov=["onKeyDown"];function Pv(e,t){if(e==null)return{};var n={},r=Object.keys(e),l,i;for(i=0;i<r.length;i++)l=r[i],!(t.indexOf(l)>=0)&&(n[l]=e[l]);return n}function Lv(e){return!e||e.trim()==="#"}const dp=S.forwardRef((e,t)=>{let{onKeyDown:n}=e,r=Pv(e,Ov);const[l]=cp(Object.assign({tagName:"a"},r)),i=za(o=>{l.onKeyDown(o),n==null||n(o)});return Lv(r.href)||r.role==="button"?v.jsx("a",Object.assign({ref:t},r,l,{onKeyDown:i})):v.jsx("a",Object.assign({ref:t},r,{onKeyDown:n}))});dp.displayName="Anchor";const Av=dp,Dv={[Mt]:"show",[cn]:"show"},pp=S.forwardRef(({className:e,children:t,transitionClasses:n={},onEnter:r,...l},i)=>{const o={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,...l},s=S.useCallback((a,u)=>{wv(a),r==null||r(a,u)},[r]);return v.jsx(_v,{ref:i,addEndListener:xv,...o,onEnter:s,childRef:t.ref,children:(a,u)=>S.cloneElement(t,{...u,className:me("fade",e,t.props.className,Dv[a],n[a])})})});pp.displayName="Fade";const hp=pp;var jv=/-(.)/g;function zv(e){return e.replace(jv,function(t,n){return n.toUpperCase()})}const $v=e=>e[0].toUpperCase()+zv(e).slice(1);function $a(e,{displayName:t=$v(e),Component:n,defaultProps:r}={}){const l=S.forwardRef(({className:i,bsPrefix:o,as:s=n||"div",...a},u)=>{const c={...r,...a},p=Te(o,e);return v.jsx(s,{ref:u,className:me(i,p),...c})});return l.displayName=t,l}const mp=S.createContext(null);mp.displayName="CardHeaderContext";const Mv=mp;function Cc(e,t){let n=0;return S.Children.map(e,r=>S.isValidElement(r)?t(r,n++):r)}function Fv(e,t){let n=0;S.Children.forEach(e,r=>{S.isValidElement(r)&&t(r,n++)})}function Uv(e,t){return S.Children.toArray(e).some(n=>S.isValidElement(n)&&n.type===t)}function Bv({as:e,bsPrefix:t,className:n,...r}){t=Te(t,"col");const l=Xg(),i=Zg(),o=[],s=[];return l.forEach(a=>{const u=r[a];delete r[a];let c,p,f;typeof u=="object"&&u!=null?{span:c,offset:p,order:f}=u:c=u;const y=a!==i?`-${a}`:"";c&&o.push(c===!0?`${t}${y}`:`${t}${y}-${c}`),f!=null&&s.push(`order${y}-${f}`),p!=null&&s.push(`offset${y}-${p}`)}),[{...r,className:me(n,...o,...s)},{as:e,bsPrefix:t,spans:o}]}const gp=S.forwardRef((e,t)=>{const[{className:n,...r},{as:l="div",bsPrefix:i,spans:o}]=Bv(e);return v.jsx(l,{...r,ref:t,className:me(n,!o.length&&i)})});gp.displayName="Col";const Hv=gp;var Wv=Function.prototype.bind.call(Function.prototype.call,[].slice);function bv(e,t){return Wv(e.querySelectorAll(t))}function Kv(e,t,n){const r=S.useRef(e!==void 0),[l,i]=S.useState(t),o=e!==void 0,s=r.current;return r.current=o,!o&&s&&l!==t&&i(t),[o?e:l,S.useCallback((...a)=>{const[u,...c]=a;let p=n==null?void 0:n(u,...c);return i(u),p},[n])]}function Vv(){const[,e]=S.useReducer(t=>!t,!1);return e}const wi={prefix:String(Math.round(Math.random()*1e10)),current:0,isSSR:!1},Ma=ae.createContext(wi);let Qv=!!(typeof window<"u"&&window.document&&window.document.createElement),Oo=new WeakMap;function Gv(e=!1){let t=S.useContext(Ma),n=S.useRef(null);if(n.current===null&&!e){var r,l;let i=(r=ae.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED)===null||r===void 0||(l=r.ReactCurrentOwner)===null||l===void 0?void 0:l.current;if(i){let o=Oo.get(i);o==null?Oo.set(i,{id:t.current,state:i.memoizedState}):i.memoizedState!==o.state&&(t.current=o.id,Oo.delete(i))}n.current=++t.current}return n.current}function Yv(e){let t=S.useContext(Ma);t===wi&&!Qv&&console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");let n=Gv(!!e),r=`react-aria${t.prefix}`;return e||`${r}-${n}`}function Xv(e){let t=ae.useId(),[n]=S.useState(ty()),r=n?"react-aria":`react-aria${wi.prefix}`;return e||`${r}-${t}`}const Zv=typeof ae.useId=="function"?Xv:Yv;function qv(){return!1}function Jv(){return!0}function ey(e){return()=>{}}function ty(){return typeof ae.useSyncExternalStore=="function"?ae.useSyncExternalStore(ey,qv,Jv):S.useContext(Ma).isSSR}const ny=S.createContext(null),nl=(e,t=null)=>e!=null?String(e):t||null,or=ny,vp=S.createContext(null);vp.displayName="NavContext";const yp=vp,ry="data-rr-ui-",ly="rrUi";function Fa(e){return`${ry}${e}`}function iy(e){return`${ly}${e}`}const kp=S.createContext(null);kp.displayName="NavbarContext";const oy=kp,sy={type:Me.string,tooltip:Me.bool,as:Me.elementType},Ua=S.forwardRef(({as:e="div",className:t,type:n="valid",tooltip:r=!1,...l},i)=>v.jsx(e,{...l,ref:i,className:me(t,`${n}-${r?"tooltip":"feedback"}`)}));Ua.displayName="Feedback";Ua.propTypes=sy;const xp=Ua,ay=S.createContext({}),Pt=ay,wp=S.forwardRef(({id:e,bsPrefix:t,className:n,type:r="checkbox",isValid:l=!1,isInvalid:i=!1,as:o="input",...s},a)=>{const{controlId:u}=S.useContext(Pt);return t=Te(t,"form-check-input"),v.jsx(o,{...s,ref:a,type:r,id:e||u,className:me(n,t,l&&"is-valid",i&&"is-invalid")})});wp.displayName="FormCheckInput";const Sp=wp,Ep=S.forwardRef(({bsPrefix:e,className:t,htmlFor:n,...r},l)=>{const{controlId:i}=S.useContext(Pt);return e=Te(e,"form-check-label"),v.jsx("label",{...r,ref:l,htmlFor:n||i,className:me(t,e)})});Ep.displayName="FormCheckLabel";const Ds=Ep,Cp=S.forwardRef(({id:e,bsPrefix:t,bsSwitchPrefix:n,inline:r=!1,reverse:l=!1,disabled:i=!1,isValid:o=!1,isInvalid:s=!1,feedbackTooltip:a=!1,feedback:u,feedbackType:c,className:p,style:f,title:y="",type:k="checkbox",label:w,children:D,as:m="input",...d},h)=>{t=Te(t,"form-check"),n=Te(n,"form-switch");const{controlId:x}=S.useContext(Pt),_=S.useMemo(()=>({controlId:e||x}),[x,e]),T=!D&&w!=null&&w!==!1||Uv(D,Ds),I=v.jsx(Sp,{...d,type:k==="switch"?"checkbox":k,ref:h,isValid:o,isInvalid:s,disabled:i,as:m});return v.jsx(Pt.Provider,{value:_,children:v.jsx("div",{style:f,className:me(p,T&&t,r&&`${t}-inline`,l&&`${t}-reverse`,k==="switch"&&n),children:D||v.jsxs(v.Fragment,{children:[I,T&&v.jsx(Ds,{title:y,children:w}),u&&v.jsx(xp,{type:c,tooltip:a,children:u})]})})})});Cp.displayName="FormCheck";const rl=Object.assign(Cp,{Input:Sp,Label:Ds}),_p=S.forwardRef(({bsPrefix:e,type:t,size:n,htmlSize:r,id:l,className:i,isValid:o=!1,isInvalid:s=!1,plaintext:a,readOnly:u,as:c="input",...p},f)=>{const{controlId:y}=S.useContext(Pt);e=Te(e,"form-control");let k;return a?k={[`${e}-plaintext`]:!0}:k={[e]:!0,[`${e}-${n}`]:n},v.jsx(c,{...p,type:t,size:r,ref:f,readOnly:u,id:l||y,className:me(i,k,o&&"is-valid",s&&"is-invalid",t==="color"&&`${e}-color`)})});_p.displayName="FormControl";const uy=Object.assign(_p,{Feedback:xp}),cy=$a("form-floating"),Tp=S.forwardRef(({controlId:e,as:t="div",...n},r)=>{const l=S.useMemo(()=>({controlId:e}),[e]);return v.jsx(Pt.Provider,{value:l,children:v.jsx(t,{...n,ref:r})})});Tp.displayName="FormGroup";const Np=Tp,Rp=S.forwardRef(({as:e="label",bsPrefix:t,column:n=!1,visuallyHidden:r=!1,className:l,htmlFor:i,...o},s)=>{const{controlId:a}=S.useContext(Pt);t=Te(t,"form-label");let u="col-form-label";typeof n=="string"&&(u=`${u} ${u}-${n}`);const c=me(l,t,r&&"visually-hidden",n&&u);return i=i||a,n?v.jsx(Hv,{ref:s,as:"label",className:c,htmlFor:i,...o}):v.jsx(e,{ref:s,className:c,htmlFor:i,...o})});Rp.displayName="FormLabel";const Ip=Rp,Op=S.forwardRef(({bsPrefix:e,className:t,id:n,...r},l)=>{const{controlId:i}=S.useContext(Pt);return e=Te(e,"form-range"),v.jsx("input",{...r,type:"range",ref:l,className:me(t,e),id:n||i})});Op.displayName="FormRange";const fy=Op,Pp=S.forwardRef(({bsPrefix:e,size:t,htmlSize:n,className:r,isValid:l=!1,isInvalid:i=!1,id:o,...s},a)=>{const{controlId:u}=S.useContext(Pt);return e=Te(e,"form-select"),v.jsx("select",{...s,size:n,ref:a,className:me(r,e,t&&`${e}-${t}`,l&&"is-valid",i&&"is-invalid"),id:o||u})});Pp.displayName="FormSelect";const dy=Pp,Lp=S.forwardRef(({bsPrefix:e,className:t,as:n="small",muted:r,...l},i)=>(e=Te(e,"form-text"),v.jsx(n,{...l,ref:i,className:me(t,e,r&&"text-muted")})));Lp.displayName="FormText";const py=Lp,Ap=S.forwardRef((e,t)=>v.jsx(rl,{...e,ref:t,type:"switch"}));Ap.displayName="Switch";const hy=Object.assign(Ap,{Input:rl.Input,Label:rl.Label}),Dp=S.forwardRef(({bsPrefix:e,className:t,children:n,controlId:r,label:l,...i},o)=>(e=Te(e,"form-floating"),v.jsxs(Np,{ref:o,className:me(t,e),controlId:r,...i,children:[n,v.jsx("label",{htmlFor:r,children:l})]})));Dp.displayName="FloatingLabel";const my=Dp,gy={_ref:Me.any,validated:Me.bool,as:Me.elementType},Ba=S.forwardRef(({className:e,validated:t,as:n="form",...r},l)=>v.jsx(n,{...r,ref:l,className:me(e,t&&"was-validated")}));Ba.displayName="Form";Ba.propTypes=gy;const vy=Object.assign(Ba,{Group:Np,Control:uy,Floating:cy,Check:rl,Switch:hy,Label:Ip,Text:py,Range:fy,Select:dy,FloatingLabel:my}),yy=S.createContext(null),cr=yy,ky=["as","active","eventKey"];function xy(e,t){if(e==null)return{};var n={},r=Object.keys(e),l,i;for(i=0;i<r.length;i++)l=r[i],!(t.indexOf(l)>=0)&&(n[l]=e[l]);return n}function jp({key:e,onClick:t,active:n,id:r,role:l,disabled:i}){const o=S.useContext(or),s=S.useContext(yp),a=S.useContext(cr);let u=n;const c={role:l};if(s){!l&&s.role==="tablist"&&(c.role="tab");const p=s.getControllerId(e??null),f=s.getControlledId(e??null);c[Fa("event-key")]=e,c.id=p||r,u=n==null&&e!=null?s.activeKey===e:n,(u||!(a!=null&&a.unmountOnExit)&&!(a!=null&&a.mountOnEnter))&&(c["aria-controls"]=f)}return c.role==="tab"&&(c["aria-selected"]=u,u||(c.tabIndex=-1),i&&(c.tabIndex=-1,c["aria-disabled"]=!0)),c.onClick=za(p=>{i||(t==null||t(p),e!=null&&o&&!p.isPropagationStopped()&&o(e,p))}),[c,{isActive:u}]}const zp=S.forwardRef((e,t)=>{let{as:n=fp,active:r,eventKey:l}=e,i=xy(e,ky);const[o,s]=jp(Object.assign({key:nl(l,i.href),active:r},i));return o[Fa("active")]=s.isActive,v.jsx(n,Object.assign({},i,o,{ref:t}))});zp.displayName="NavItem";const wy=zp,Sy=["as","onSelect","activeKey","role","onKeyDown"];function Ey(e,t){if(e==null)return{};var n={},r=Object.keys(e),l,i;for(i=0;i<r.length;i++)l=r[i],!(t.indexOf(l)>=0)&&(n[l]=e[l]);return n}const _c=()=>{},Tc=Fa("event-key"),$p=S.forwardRef((e,t)=>{let{as:n="div",onSelect:r,activeKey:l,role:i,onKeyDown:o}=e,s=Ey(e,Sy);const a=Vv(),u=S.useRef(!1),c=S.useContext(or),p=S.useContext(cr);let f,y;p&&(i=i||"tablist",l=p.activeKey,f=p.getControlledId,y=p.getControllerId);const k=S.useRef(null),w=h=>{const x=k.current;if(!x)return null;const _=bv(x,`[${Tc}]:not([aria-disabled=true])`),T=x.querySelector("[aria-selected=true]");if(!T||T!==document.activeElement)return null;const I=_.indexOf(T);if(I===-1)return null;let L=I+h;return L>=_.length&&(L=0),L<0&&(L=_.length-1),_[L]},D=(h,x)=>{h!=null&&(r==null||r(h,x),c==null||c(h,x))},m=h=>{if(o==null||o(h),!p)return;let x;switch(h.key){case"ArrowLeft":case"ArrowUp":x=w(-1);break;case"ArrowRight":case"ArrowDown":x=w(1);break;default:return}x&&(h.preventDefault(),D(x.dataset[iy("EventKey")]||null,h),u.current=!0,a())};S.useEffect(()=>{if(k.current&&u.current){const h=k.current.querySelector(`[${Tc}][aria-selected=true]`);h==null||h.focus()}u.current=!1});const d=ja(t,k);return v.jsx(or.Provider,{value:D,children:v.jsx(yp.Provider,{value:{role:i,activeKey:nl(l),getControlledId:f||_c,getControllerId:y||_c},children:v.jsx(n,Object.assign({},s,{onKeyDown:m,ref:d,role:i}))})})});$p.displayName="Nav";const Cy=Object.assign($p,{Item:wy});function Mp({children:e,in:t,onExited:n,mountOnEnter:r,unmountOnExit:l}){const i=S.useRef(null),o=S.useRef(t),s=za(n);S.useEffect(()=>{t?o.current=!0:s(i.current)},[t,s]);const a=ja(i,e.ref),u=S.cloneElement(e,{ref:a});return t?u:l||!o.current&&r?null:u}var Nc={exports:{}},js={exports:{}};(function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=n;function n(r){function l(o,s,a,u,c,p){var f=u||"<<anonymous>>",y=p||a;if(s[a]==null)return o?new Error("Required "+c+" `"+y+"` was not specified "+("in `"+f+"`.")):null;for(var k=arguments.length,w=Array(k>6?k-6:0),D=6;D<k;D++)w[D-6]=arguments[D];return r.apply(void 0,[s,a,f,c,y].concat(w))}var i=l.bind(null,!1);return i.isRequired=l.bind(null,!0),i}e.exports=t.default})(js,js.exports);var _y=js.exports;(function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=i;var n=_y,r=l(n);function l(o){return o&&o.__esModule?o:{default:o}}function i(){for(var o=arguments.length,s=Array(o),a=0;a<o;a++)s[a]=arguments[a];function u(){for(var c=arguments.length,p=Array(c),f=0;f<c;f++)p[f]=arguments[f];var y=null;return s.forEach(function(k){if(y==null){var w=k.apply(void 0,p);w!=null&&(y=w)}}),y}return(0,r.default)(u)}e.exports=t.default})(Nc,Nc.exports);const Fp=$a("nav-item"),Up=S.forwardRef(({bsPrefix:e,className:t,as:n=Av,active:r,eventKey:l,disabled:i=!1,...o},s)=>{e=Te(e,"nav-link");const[a,u]=jp({key:nl(l,o.href),active:r,disabled:i,...o});return v.jsx(n,{...o,...a,ref:s,disabled:i,className:me(t,e,i&&"disabled",u.isActive&&"active")})});Up.displayName="NavLink";const Bp=Up,Hp=S.forwardRef((e,t)=>{const{as:n="div",bsPrefix:r,variant:l,fill:i=!1,justify:o=!1,navbar:s,navbarScroll:a,className:u,activeKey:c,...p}=rp(e,{activeKey:"onSelect"}),f=Te(r,"nav");let y,k,w=!1;const D=S.useContext(oy),m=S.useContext(Mv);return D?(y=D.bsPrefix,w=s??!0):m&&({cardHeaderBsPrefix:k}=m),v.jsx(Cy,{as:n,ref:t,activeKey:c,className:me(u,{[f]:!w,[`${y}-nav`]:w,[`${y}-nav-scroll`]:w&&a,[`${k}-${l}`]:!!k,[`${f}-${l}`]:!!l,[`${f}-fill`]:i,[`${f}-justified`]:o}),...p})});Hp.displayName="Nav";const Ty=Object.assign(Hp,{Item:Fp,Link:Bp}),Ny=["active","eventKey","mountOnEnter","transition","unmountOnExit","role","onEnter","onEntering","onEntered","onExit","onExiting","onExited"],Ry=["activeKey","getControlledId","getControllerId"],Iy=["as"];function zs(e,t){if(e==null)return{};var n={},r=Object.keys(e),l,i;for(i=0;i<r.length;i++)l=r[i],!(t.indexOf(l)>=0)&&(n[l]=e[l]);return n}function Wp(e){let{active:t,eventKey:n,mountOnEnter:r,transition:l,unmountOnExit:i,role:o="tabpanel",onEnter:s,onEntering:a,onEntered:u,onExit:c,onExiting:p,onExited:f}=e,y=zs(e,Ny);const k=S.useContext(cr);if(!k)return[Object.assign({},y,{role:o}),{eventKey:n,isActive:t,mountOnEnter:r,transition:l,unmountOnExit:i,onEnter:s,onEntering:a,onEntered:u,onExit:c,onExiting:p,onExited:f}];const{activeKey:w,getControlledId:D,getControllerId:m}=k,d=zs(k,Ry),h=nl(n);return[Object.assign({},y,{role:o,id:D(n),"aria-labelledby":m(n)}),{eventKey:n,isActive:t==null&&h!=null?nl(w)===h:t,transition:l||d.transition,mountOnEnter:r??d.mountOnEnter,unmountOnExit:i??d.unmountOnExit,onEnter:s,onEntering:a,onEntered:u,onExit:c,onExiting:p,onExited:f}]}const bp=S.forwardRef((e,t)=>{let{as:n="div"}=e,r=zs(e,Iy);const[l,{isActive:i,onEnter:o,onEntering:s,onEntered:a,onExit:u,onExiting:c,onExited:p,mountOnEnter:f,unmountOnExit:y,transition:k=Mp}]=Wp(r);return v.jsx(cr.Provider,{value:null,children:v.jsx(or.Provider,{value:null,children:v.jsx(k,{in:i,onEnter:o,onEntering:s,onEntered:a,onExit:u,onExiting:c,onExited:p,mountOnEnter:f,unmountOnExit:y,children:v.jsx(n,Object.assign({},l,{ref:t,hidden:!i,"aria-hidden":!i}))})})})});bp.displayName="TabPanel";const Kp=e=>{const{id:t,generateChildId:n,onSelect:r,activeKey:l,defaultActiveKey:i,transition:o,mountOnEnter:s,unmountOnExit:a,children:u}=e,[c,p]=Kv(l,i,r),f=Zv(t),y=S.useMemo(()=>n||((w,D)=>f?`${f}-${D}-${w}`:null),[f,n]),k=S.useMemo(()=>({onSelect:p,activeKey:c,transition:o,mountOnEnter:s||!1,unmountOnExit:a||!1,getControlledId:w=>y(w,"tabpane"),getControllerId:w=>y(w,"tab")}),[p,c,o,s,a,y]);return v.jsx(cr.Provider,{value:k,children:v.jsx(or.Provider,{value:p||null,children:u})})};Kp.Panel=bp;const Vp=Kp;function Ha(e){return typeof e=="boolean"?e?hp:Mp:e}const Qp=({transition:e,...t})=>v.jsx(Vp,{...t,transition:Ha(e)});Qp.displayName="TabContainer";const Oy=Qp,Gp=$a("tab-content"),Yp=S.forwardRef(({bsPrefix:e,transition:t,...n},r)=>{const[{className:l,as:i="div",...o},{isActive:s,onEnter:a,onEntering:u,onEntered:c,onExit:p,onExiting:f,onExited:y,mountOnEnter:k,unmountOnExit:w,transition:D=hp}]=Wp({...n,transition:Ha(t)}),m=Te(e,"tab-pane");return v.jsx(cr.Provider,{value:null,children:v.jsx(or.Provider,{value:null,children:v.jsx(D,{in:s,onEnter:a,onEntering:u,onEntered:c,onExit:p,onExiting:f,onExited:y,mountOnEnter:k,unmountOnExit:w,children:v.jsx(i,{...o,ref:r,className:me(l,m,s&&"active")})})})})});Yp.displayName="TabPane";const Xp=Yp,Py={eventKey:Me.oneOfType([Me.string,Me.number]),title:Me.node.isRequired,disabled:Me.bool,tabClassName:Me.string,tabAttrs:Me.object},Zp=()=>{throw new Error("ReactBootstrap: The `Tab` component is not meant to be rendered! It's an abstract component that is only valid as a direct Child of the `Tabs` Component. For custom tabs components use TabPane and TabsContainer directly")};Zp.propTypes=Py;const dt=Object.assign(Zp,{Container:Oy,Content:Gp,Pane:Xp});function Ly(e){let t;return Fv(e,n=>{t==null&&(t=n.props.eventKey)}),t}function Ay(e){const{title:t,eventKey:n,disabled:r,tabClassName:l,tabAttrs:i,id:o}=e.props;return t==null?null:v.jsx(Fp,{as:"li",role:"presentation",children:v.jsx(Bp,{as:"button",type:"button",eventKey:n,disabled:r,id:o,className:l,...i,children:t})})}const qp=e=>{const{id:t,onSelect:n,transition:r,mountOnEnter:l=!1,unmountOnExit:i=!1,variant:o="tabs",children:s,activeKey:a=Ly(s),...u}=rp(e,{activeKey:"onSelect"});return v.jsxs(Vp,{id:t,activeKey:a,onSelect:n,transition:Ha(r),mountOnEnter:l,unmountOnExit:i,children:[v.jsx(Ty,{...u,role:"tablist",as:"ul",variant:o,children:Cc(s,Ay)}),v.jsx(Gp,{children:Cc(s,c=>{const p={...c.props};return delete p.title,delete p.disabled,delete p.tabClassName,delete p.tabAttrs,v.jsx(Xp,{...p})})})]})};qp.displayName="Tabs";const Si=qp;function Wa(){return{async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}}let Cn=Wa();function Jp(e){Cn=e}const eh=/[&<>"']/,Dy=new RegExp(eh.source,"g"),th=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,jy=new RegExp(th.source,"g"),zy={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Rc=e=>zy[e];function Fe(e,t){if(t){if(eh.test(e))return e.replace(Dy,Rc)}else if(th.test(e))return e.replace(jy,Rc);return e}const $y=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function My(e){return e.replace($y,(t,n)=>(n=n.toLowerCase(),n==="colon"?":":n.charAt(0)==="#"?n.charAt(1)==="x"?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1)):""))}const Fy=/(^|[^\[])\^/g;function W(e,t){e=typeof e=="string"?e:e.source,t=t||"";const n={replace:(r,l)=>(l=typeof l=="object"&&"source"in l?l.source:l,l=l.replace(Fy,"$1"),e=e.replace(r,l),n),getRegex:()=>new RegExp(e,t)};return n}function Ic(e){try{e=encodeURI(e).replace(/%25/g,"%")}catch{return null}return e}const Ei={exec:()=>null};function Oc(e,t){const n=e.replace(/\|/g,(i,o,s)=>{let a=!1,u=o;for(;--u>=0&&s[u]==="\\";)a=!a;return a?"|":" |"}),r=n.split(/ \|/);let l=0;if(r[0].trim()||r.shift(),r.length>0&&!r[r.length-1].trim()&&r.pop(),t)if(r.length>t)r.splice(t);else for(;r.length<t;)r.push("");for(;l<r.length;l++)r[l]=r[l].trim().replace(/\\\|/g,"|");return r}function Po(e,t,n){const r=e.length;if(r===0)return"";let l=0;for(;l<r;){const i=e.charAt(r-l-1);if(i===t&&!n)l++;else if(i!==t&&n)l++;else break}return e.slice(0,r-l)}function Uy(e,t){if(e.indexOf(t[1])===-1)return-1;let n=0;for(let r=0;r<e.length;r++)if(e[r]==="\\")r++;else if(e[r]===t[0])n++;else if(e[r]===t[1]&&(n--,n<0))return r;return-1}function Pc(e,t,n,r){const l=t.href,i=t.title?Fe(t.title):null,o=e[1].replace(/\\([\[\]])/g,"$1");if(e[0].charAt(0)!=="!"){r.state.inLink=!0;const s={type:"link",raw:n,href:l,title:i,text:o,tokens:r.inlineTokens(o)};return r.state.inLink=!1,s}return{type:"image",raw:n,href:l,title:i,text:Fe(o)}}function By(e,t){const n=e.match(/^(\s+)(?:```)/);if(n===null)return t;const r=n[1];return t.split(`
`).map(l=>{const i=l.match(/^\s+/);if(i===null)return l;const[o]=i;return o.length>=r.length?l.slice(r.length):l}).join(`
`)}class Ci{constructor(t){Q(this,"options");Q(this,"rules");Q(this,"lexer");this.options=t||Cn}space(t){const n=this.rules.block.newline.exec(t);if(n&&n[0].length>0)return{type:"space",raw:n[0]}}code(t){const n=this.rules.block.code.exec(t);if(n){const r=n[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:n[0],codeBlockStyle:"indented",text:this.options.pedantic?r:Po(r,`
`)}}}fences(t){const n=this.rules.block.fences.exec(t);if(n){const r=n[0],l=By(r,n[3]||"");return{type:"code",raw:r,lang:n[2]?n[2].trim().replace(this.rules.inline._escapes,"$1"):n[2],text:l}}}heading(t){const n=this.rules.block.heading.exec(t);if(n){let r=n[2].trim();if(/#$/.test(r)){const l=Po(r,"#");(this.options.pedantic||!l||/ $/.test(l))&&(r=l.trim())}return{type:"heading",raw:n[0],depth:n[1].length,text:r,tokens:this.lexer.inline(r)}}}hr(t){const n=this.rules.block.hr.exec(t);if(n)return{type:"hr",raw:n[0]}}blockquote(t){const n=this.rules.block.blockquote.exec(t);if(n){const r=n[0].replace(/^ *>[ \t]?/gm,""),l=this.lexer.state.top;this.lexer.state.top=!0;const i=this.lexer.blockTokens(r);return this.lexer.state.top=l,{type:"blockquote",raw:n[0],tokens:i,text:r}}}list(t){let n=this.rules.block.list.exec(t);if(n){let r=n[1].trim();const l=r.length>1,i={type:"list",raw:"",ordered:l,start:l?+r.slice(0,-1):"",loose:!1,items:[]};r=l?`\\d{1,9}\\${r.slice(-1)}`:`\\${r}`,this.options.pedantic&&(r=l?r:"[*+-]");const o=new RegExp(`^( {0,3}${r})((?:[	 ][^\\n]*)?(?:\\n|$))`);let s="",a="",u=!1;for(;t;){let c=!1;if(!(n=o.exec(t))||this.rules.block.hr.test(t))break;s=n[0],t=t.substring(s.length);let p=n[2].split(`
`,1)[0].replace(/^\t+/,m=>" ".repeat(3*m.length)),f=t.split(`
`,1)[0],y=0;this.options.pedantic?(y=2,a=p.trimStart()):(y=n[2].search(/[^ ]/),y=y>4?1:y,a=p.slice(y),y+=n[1].length);let k=!1;if(!p&&/^ *$/.test(f)&&(s+=f+`
`,t=t.substring(f.length+1),c=!0),!c){const m=new RegExp(`^ {0,${Math.min(3,y-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),d=new RegExp(`^ {0,${Math.min(3,y-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),h=new RegExp(`^ {0,${Math.min(3,y-1)}}(?:\`\`\`|~~~)`),x=new RegExp(`^ {0,${Math.min(3,y-1)}}#`);for(;t;){const _=t.split(`
`,1)[0];if(f=_,this.options.pedantic&&(f=f.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),h.test(f)||x.test(f)||m.test(f)||d.test(t))break;if(f.search(/[^ ]/)>=y||!f.trim())a+=`
`+f.slice(y);else{if(k||p.search(/[^ ]/)>=4||h.test(p)||x.test(p)||d.test(p))break;a+=`
`+f}!k&&!f.trim()&&(k=!0),s+=_+`
`,t=t.substring(_.length+1),p=f.slice(y)}}i.loose||(u?i.loose=!0:/\n *\n *$/.test(s)&&(u=!0));let w=null,D;this.options.gfm&&(w=/^\[[ xX]\] /.exec(a),w&&(D=w[0]!=="[ ] ",a=a.replace(/^\[[ xX]\] +/,""))),i.items.push({type:"list_item",raw:s,task:!!w,checked:D,loose:!1,text:a,tokens:[]}),i.raw+=s}i.items[i.items.length-1].raw=s.trimEnd(),i.items[i.items.length-1].text=a.trimEnd(),i.raw=i.raw.trimEnd();for(let c=0;c<i.items.length;c++)if(this.lexer.state.top=!1,i.items[c].tokens=this.lexer.blockTokens(i.items[c].text,[]),!i.loose){const p=i.items[c].tokens.filter(y=>y.type==="space"),f=p.length>0&&p.some(y=>/\n.*\n/.test(y.raw));i.loose=f}if(i.loose)for(let c=0;c<i.items.length;c++)i.items[c].loose=!0;return i}}html(t){const n=this.rules.block.html.exec(t);if(n)return{type:"html",block:!0,raw:n[0],pre:n[1]==="pre"||n[1]==="script"||n[1]==="style",text:n[0]}}def(t){const n=this.rules.block.def.exec(t);if(n){const r=n[1].toLowerCase().replace(/\s+/g," "),l=n[2]?n[2].replace(/^<(.*)>$/,"$1").replace(this.rules.inline._escapes,"$1"):"",i=n[3]?n[3].substring(1,n[3].length-1).replace(this.rules.inline._escapes,"$1"):n[3];return{type:"def",tag:r,raw:n[0],href:l,title:i}}}table(t){const n=this.rules.block.table.exec(t);if(n){const r={type:"table",raw:n[0],header:Oc(n[1]).map(l=>({text:l,tokens:[]})),align:n[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:n[3]&&n[3].trim()?n[3].replace(/\n[ \t]*$/,"").split(`
`):[]};if(r.header.length===r.align.length){let l=r.align.length,i,o,s,a;for(i=0;i<l;i++){const u=r.align[i];u&&(/^ *-+: *$/.test(u)?r.align[i]="right":/^ *:-+: *$/.test(u)?r.align[i]="center":/^ *:-+ *$/.test(u)?r.align[i]="left":r.align[i]=null)}for(l=r.rows.length,i=0;i<l;i++)r.rows[i]=Oc(r.rows[i],r.header.length).map(u=>({text:u,tokens:[]}));for(l=r.header.length,o=0;o<l;o++)r.header[o].tokens=this.lexer.inline(r.header[o].text);for(l=r.rows.length,o=0;o<l;o++)for(a=r.rows[o],s=0;s<a.length;s++)a[s].tokens=this.lexer.inline(a[s].text);return r}}}lheading(t){const n=this.rules.block.lheading.exec(t);if(n)return{type:"heading",raw:n[0],depth:n[2].charAt(0)==="="?1:2,text:n[1],tokens:this.lexer.inline(n[1])}}paragraph(t){const n=this.rules.block.paragraph.exec(t);if(n){const r=n[1].charAt(n[1].length-1)===`
`?n[1].slice(0,-1):n[1];return{type:"paragraph",raw:n[0],text:r,tokens:this.lexer.inline(r)}}}text(t){const n=this.rules.block.text.exec(t);if(n)return{type:"text",raw:n[0],text:n[0],tokens:this.lexer.inline(n[0])}}escape(t){const n=this.rules.inline.escape.exec(t);if(n)return{type:"escape",raw:n[0],text:Fe(n[1])}}tag(t){const n=this.rules.inline.tag.exec(t);if(n)return!this.lexer.state.inLink&&/^<a /i.test(n[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(n[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(n[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(n[0])&&(this.lexer.state.inRawBlock=!1),{type:"html",raw:n[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,block:!1,text:n[0]}}link(t){const n=this.rules.inline.link.exec(t);if(n){const r=n[2].trim();if(!this.options.pedantic&&/^</.test(r)){if(!/>$/.test(r))return;const o=Po(r.slice(0,-1),"\\");if((r.length-o.length)%2===0)return}else{const o=Uy(n[2],"()");if(o>-1){const a=(n[0].indexOf("!")===0?5:4)+n[1].length+o;n[2]=n[2].substring(0,o),n[0]=n[0].substring(0,a).trim(),n[3]=""}}let l=n[2],i="";if(this.options.pedantic){const o=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(l);o&&(l=o[1],i=o[3])}else i=n[3]?n[3].slice(1,-1):"";return l=l.trim(),/^</.test(l)&&(this.options.pedantic&&!/>$/.test(r)?l=l.slice(1):l=l.slice(1,-1)),Pc(n,{href:l&&l.replace(this.rules.inline._escapes,"$1"),title:i&&i.replace(this.rules.inline._escapes,"$1")},n[0],this.lexer)}}reflink(t,n){let r;if((r=this.rules.inline.reflink.exec(t))||(r=this.rules.inline.nolink.exec(t))){let l=(r[2]||r[1]).replace(/\s+/g," ");if(l=n[l.toLowerCase()],!l){const i=r[0].charAt(0);return{type:"text",raw:i,text:i}}return Pc(r,l,r[0],this.lexer)}}emStrong(t,n,r=""){let l=this.rules.inline.emStrong.lDelim.exec(t);if(!l||l[3]&&r.match(/[\p{L}\p{N}]/u))return;if(!(l[1]||l[2]||"")||!r||this.rules.inline.punctuation.exec(r)){const o=[...l[0]].length-1;let s,a,u=o,c=0;const p=l[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(p.lastIndex=0,n=n.slice(-1*t.length+o);(l=p.exec(n))!=null;){if(s=l[1]||l[2]||l[3]||l[4]||l[5]||l[6],!s)continue;if(a=[...s].length,l[3]||l[4]){u+=a;continue}else if((l[5]||l[6])&&o%3&&!((o+a)%3)){c+=a;continue}if(u-=a,u>0)continue;a=Math.min(a,a+u+c);const f=[...t].slice(0,o+l.index+a+1).join("");if(Math.min(o,a)%2){const k=f.slice(1,-1);return{type:"em",raw:f,text:k,tokens:this.lexer.inlineTokens(k)}}const y=f.slice(2,-2);return{type:"strong",raw:f,text:y,tokens:this.lexer.inlineTokens(y)}}}}codespan(t){const n=this.rules.inline.code.exec(t);if(n){let r=n[2].replace(/\n/g," ");const l=/[^ ]/.test(r),i=/^ /.test(r)&&/ $/.test(r);return l&&i&&(r=r.substring(1,r.length-1)),r=Fe(r,!0),{type:"codespan",raw:n[0],text:r}}}br(t){const n=this.rules.inline.br.exec(t);if(n)return{type:"br",raw:n[0]}}del(t){const n=this.rules.inline.del.exec(t);if(n)return{type:"del",raw:n[0],text:n[2],tokens:this.lexer.inlineTokens(n[2])}}autolink(t){const n=this.rules.inline.autolink.exec(t);if(n){let r,l;return n[2]==="@"?(r=Fe(n[1]),l="mailto:"+r):(r=Fe(n[1]),l=r),{type:"link",raw:n[0],text:r,href:l,tokens:[{type:"text",raw:r,text:r}]}}}url(t){let n;if(n=this.rules.inline.url.exec(t)){let r,l;if(n[2]==="@")r=Fe(n[0]),l="mailto:"+r;else{let i;do i=n[0],n[0]=this.rules.inline._backpedal.exec(n[0])[0];while(i!==n[0]);r=Fe(n[0]),n[1]==="www."?l="http://"+n[0]:l=n[0]}return{type:"link",raw:n[0],text:r,href:l,tokens:[{type:"text",raw:r,text:r}]}}}inlineText(t){const n=this.rules.inline.text.exec(t);if(n){let r;return this.lexer.state.inRawBlock?r=n[0]:r=Fe(n[0]),{type:"text",raw:n[0],text:r}}}}const z={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:Ei,lheading:/^((?:(?!^bull ).|\n(?!\n|bull ))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/};z._label=/(?!\s*\])(?:\\.|[^\[\]\\])+/;z._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;z.def=W(z.def).replace("label",z._label).replace("title",z._title).getRegex();z.bullet=/(?:[*+-]|\d{1,9}[.)])/;z.listItemStart=W(/^( *)(bull) */).replace("bull",z.bullet).getRegex();z.list=W(z.list).replace(/bull/g,z.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+z.def.source+")").getRegex();z._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul";z._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/;z.html=W(z.html,"i").replace("comment",z._comment).replace("tag",z._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();z.lheading=W(z.lheading).replace(/bull/g,z.bullet).getRegex();z.paragraph=W(z._paragraph).replace("hr",z.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",z._tag).getRegex();z.blockquote=W(z.blockquote).replace("paragraph",z.paragraph).getRegex();z.normal={...z};z.gfm={...z.normal,table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"};z.gfm.table=W(z.gfm.table).replace("hr",z.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",z._tag).getRegex();z.gfm.paragraph=W(z._paragraph).replace("hr",z.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",z.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",z._tag).getRegex();z.pedantic={...z.normal,html:W(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",z._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:Ei,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:W(z.normal._paragraph).replace("hr",z.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",z.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()};const N={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:Ei,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:((?!\*)[punct])|[^\s*]))|^_+(?:((?!_)[punct])|([^\s_]))/,rDelimAst:/^[^_*]*?__[^_*]*?\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\*)[punct](\*+)(?=[\s]|$)|[^punct\s](\*+)(?!\*)(?=[punct\s]|$)|(?!\*)[punct\s](\*+)(?=[^punct\s])|[\s](\*+)(?!\*)(?=[punct])|(?!\*)[punct](\*+)(?!\*)(?=[punct])|[^punct\s](\*+)(?=[^punct\s])/,rDelimUnd:/^[^_*]*?\*\*[^_*]*?_[^_*]*?(?=\*\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\s]|$)|[^punct\s](_+)(?!_)(?=[punct\s]|$)|(?!_)[punct\s](_+)(?=[^punct\s])|[\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:Ei,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^((?![*_])[\spunctuation])/};N._punctuation="\\p{P}$+<=>`^|~";N.punctuation=W(N.punctuation,"u").replace(/punctuation/g,N._punctuation).getRegex();N.blockSkip=/\[[^[\]]*?\]\([^\(\)]*?\)|`[^`]*?`|<[^<>]*?>/g;N.anyPunctuation=/\\[punct]/g;N._escapes=/\\([punct])/g;N._comment=W(z._comment).replace("(?:-->|$)","-->").getRegex();N.emStrong.lDelim=W(N.emStrong.lDelim,"u").replace(/punct/g,N._punctuation).getRegex();N.emStrong.rDelimAst=W(N.emStrong.rDelimAst,"gu").replace(/punct/g,N._punctuation).getRegex();N.emStrong.rDelimUnd=W(N.emStrong.rDelimUnd,"gu").replace(/punct/g,N._punctuation).getRegex();N.anyPunctuation=W(N.anyPunctuation,"gu").replace(/punct/g,N._punctuation).getRegex();N._escapes=W(N._escapes,"gu").replace(/punct/g,N._punctuation).getRegex();N._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;N._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;N.autolink=W(N.autolink).replace("scheme",N._scheme).replace("email",N._email).getRegex();N._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;N.tag=W(N.tag).replace("comment",N._comment).replace("attribute",N._attribute).getRegex();N._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;N._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;N._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;N.link=W(N.link).replace("label",N._label).replace("href",N._href).replace("title",N._title).getRegex();N.reflink=W(N.reflink).replace("label",N._label).replace("ref",z._label).getRegex();N.nolink=W(N.nolink).replace("ref",z._label).getRegex();N.reflinkSearch=W(N.reflinkSearch,"g").replace("reflink",N.reflink).replace("nolink",N.nolink).getRegex();N.normal={...N};N.pedantic={...N.normal,strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:W(/^!?\[(label)\]\((.*?)\)/).replace("label",N._label).getRegex(),reflink:W(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",N._label).getRegex()};N.gfm={...N.normal,escape:W(N.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/};N.gfm.url=W(N.gfm.url,"i").replace("email",N.gfm._extended_email).getRegex();N.breaks={...N.gfm,br:W(N.br).replace("{2,}","*").getRegex(),text:W(N.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()};class ht{constructor(t){Q(this,"tokens");Q(this,"options");Q(this,"state");Q(this,"tokenizer");Q(this,"inlineQueue");this.tokens=[],this.tokens.links=Object.create(null),this.options=t||Cn,this.options.tokenizer=this.options.tokenizer||new Ci,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const n={block:z.normal,inline:N.normal};this.options.pedantic?(n.block=z.pedantic,n.inline=N.pedantic):this.options.gfm&&(n.block=z.gfm,this.options.breaks?n.inline=N.breaks:n.inline=N.gfm),this.tokenizer.rules=n}static get rules(){return{block:z,inline:N}}static lex(t,n){return new ht(n).lex(t)}static lexInline(t,n){return new ht(n).inlineTokens(t)}lex(t){t=t.replace(/\r\n|\r/g,`
`),this.blockTokens(t,this.tokens);let n;for(;n=this.inlineQueue.shift();)this.inlineTokens(n.src,n.tokens);return this.tokens}blockTokens(t,n=[]){this.options.pedantic?t=t.replace(/\t/g,"    ").replace(/^ +$/gm,""):t=t.replace(/^( *)(\t+)/gm,(s,a,u)=>a+"    ".repeat(u.length));let r,l,i,o;for(;t;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(s=>(r=s.call({lexer:this},t,n))?(t=t.substring(r.raw.length),n.push(r),!0):!1))){if(r=this.tokenizer.space(t)){t=t.substring(r.raw.length),r.raw.length===1&&n.length>0?n[n.length-1].raw+=`
`:n.push(r);continue}if(r=this.tokenizer.code(t)){t=t.substring(r.raw.length),l=n[n.length-1],l&&(l.type==="paragraph"||l.type==="text")?(l.raw+=`
`+r.raw,l.text+=`
`+r.text,this.inlineQueue[this.inlineQueue.length-1].src=l.text):n.push(r);continue}if(r=this.tokenizer.fences(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.heading(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.hr(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.blockquote(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.list(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.html(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.def(t)){t=t.substring(r.raw.length),l=n[n.length-1],l&&(l.type==="paragraph"||l.type==="text")?(l.raw+=`
`+r.raw,l.text+=`
`+r.raw,this.inlineQueue[this.inlineQueue.length-1].src=l.text):this.tokens.links[r.tag]||(this.tokens.links[r.tag]={href:r.href,title:r.title});continue}if(r=this.tokenizer.table(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.lheading(t)){t=t.substring(r.raw.length),n.push(r);continue}if(i=t,this.options.extensions&&this.options.extensions.startBlock){let s=1/0;const a=t.slice(1);let u;this.options.extensions.startBlock.forEach(c=>{u=c.call({lexer:this},a),typeof u=="number"&&u>=0&&(s=Math.min(s,u))}),s<1/0&&s>=0&&(i=t.substring(0,s+1))}if(this.state.top&&(r=this.tokenizer.paragraph(i))){l=n[n.length-1],o&&l.type==="paragraph"?(l.raw+=`
`+r.raw,l.text+=`
`+r.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=l.text):n.push(r),o=i.length!==t.length,t=t.substring(r.raw.length);continue}if(r=this.tokenizer.text(t)){t=t.substring(r.raw.length),l=n[n.length-1],l&&l.type==="text"?(l.raw+=`
`+r.raw,l.text+=`
`+r.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=l.text):n.push(r);continue}if(t){const s="Infinite loop on byte: "+t.charCodeAt(0);if(this.options.silent){console.error(s);break}else throw new Error(s)}}return this.state.top=!0,n}inline(t,n=[]){return this.inlineQueue.push({src:t,tokens:n}),n}inlineTokens(t,n=[]){let r,l,i,o=t,s,a,u;if(this.tokens.links){const c=Object.keys(this.tokens.links);if(c.length>0)for(;(s=this.tokenizer.rules.inline.reflinkSearch.exec(o))!=null;)c.includes(s[0].slice(s[0].lastIndexOf("[")+1,-1))&&(o=o.slice(0,s.index)+"["+"a".repeat(s[0].length-2)+"]"+o.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(s=this.tokenizer.rules.inline.blockSkip.exec(o))!=null;)o=o.slice(0,s.index)+"["+"a".repeat(s[0].length-2)+"]"+o.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(s=this.tokenizer.rules.inline.anyPunctuation.exec(o))!=null;)o=o.slice(0,s.index)+"++"+o.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);for(;t;)if(a||(u=""),a=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(c=>(r=c.call({lexer:this},t,n))?(t=t.substring(r.raw.length),n.push(r),!0):!1))){if(r=this.tokenizer.escape(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.tag(t)){t=t.substring(r.raw.length),l=n[n.length-1],l&&r.type==="text"&&l.type==="text"?(l.raw+=r.raw,l.text+=r.text):n.push(r);continue}if(r=this.tokenizer.link(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.reflink(t,this.tokens.links)){t=t.substring(r.raw.length),l=n[n.length-1],l&&r.type==="text"&&l.type==="text"?(l.raw+=r.raw,l.text+=r.text):n.push(r);continue}if(r=this.tokenizer.emStrong(t,o,u)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.codespan(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.br(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.del(t)){t=t.substring(r.raw.length),n.push(r);continue}if(r=this.tokenizer.autolink(t)){t=t.substring(r.raw.length),n.push(r);continue}if(!this.state.inLink&&(r=this.tokenizer.url(t))){t=t.substring(r.raw.length),n.push(r);continue}if(i=t,this.options.extensions&&this.options.extensions.startInline){let c=1/0;const p=t.slice(1);let f;this.options.extensions.startInline.forEach(y=>{f=y.call({lexer:this},p),typeof f=="number"&&f>=0&&(c=Math.min(c,f))}),c<1/0&&c>=0&&(i=t.substring(0,c+1))}if(r=this.tokenizer.inlineText(i)){t=t.substring(r.raw.length),r.raw.slice(-1)!=="_"&&(u=r.raw.slice(-1)),a=!0,l=n[n.length-1],l&&l.type==="text"?(l.raw+=r.raw,l.text+=r.text):n.push(r);continue}if(t){const c="Infinite loop on byte: "+t.charCodeAt(0);if(this.options.silent){console.error(c);break}else throw new Error(c)}}return n}}class _i{constructor(t){Q(this,"options");this.options=t||Cn}code(t,n,r){var i;const l=(i=(n||"").match(/^\S*/))==null?void 0:i[0];return t=t.replace(/\n$/,"")+`
`,l?'<pre><code class="language-'+Fe(l)+'">'+(r?t:Fe(t,!0))+`</code></pre>
`:"<pre><code>"+(r?t:Fe(t,!0))+`</code></pre>
`}blockquote(t){return`<blockquote>
${t}</blockquote>
`}html(t,n){return t}heading(t,n,r){return`<h${n}>${t}</h${n}>
`}hr(){return`<hr>
`}list(t,n,r){const l=n?"ol":"ul",i=n&&r!==1?' start="'+r+'"':"";return"<"+l+i+`>
`+t+"</"+l+`>
`}listitem(t,n,r){return`<li>${t}</li>
`}checkbox(t){return"<input "+(t?'checked="" ':"")+'disabled="" type="checkbox">'}paragraph(t){return`<p>${t}</p>
`}table(t,n){return n&&(n=`<tbody>${n}</tbody>`),`<table>
<thead>
`+t+`</thead>
`+n+`</table>
`}tablerow(t){return`<tr>
${t}</tr>
`}tablecell(t,n){const r=n.header?"th":"td";return(n.align?`<${r} align="${n.align}">`:`<${r}>`)+t+`</${r}>
`}strong(t){return`<strong>${t}</strong>`}em(t){return`<em>${t}</em>`}codespan(t){return`<code>${t}</code>`}br(){return"<br>"}del(t){return`<del>${t}</del>`}link(t,n,r){const l=Ic(t);if(l===null)return r;t=l;let i='<a href="'+t+'"';return n&&(i+=' title="'+n+'"'),i+=">"+r+"</a>",i}image(t,n,r){const l=Ic(t);if(l===null)return r;t=l;let i=`<img src="${t}" alt="${r}"`;return n&&(i+=` title="${n}"`),i+=">",i}text(t){return t}}class ba{strong(t){return t}em(t){return t}codespan(t){return t}del(t){return t}html(t){return t}text(t){return t}link(t,n,r){return""+r}image(t,n,r){return""+r}br(){return""}}class mt{constructor(t){Q(this,"options");Q(this,"renderer");Q(this,"textRenderer");this.options=t||Cn,this.options.renderer=this.options.renderer||new _i,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new ba}static parse(t,n){return new mt(n).parse(t)}static parseInline(t,n){return new mt(n).parseInline(t)}parse(t,n=!0){let r="";for(let l=0;l<t.length;l++){const i=t[l];if(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[i.type]){const o=i,s=this.options.extensions.renderers[o.type].call({parser:this},o);if(s!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(o.type)){r+=s||"";continue}}switch(i.type){case"space":continue;case"hr":{r+=this.renderer.hr();continue}case"heading":{const o=i;r+=this.renderer.heading(this.parseInline(o.tokens),o.depth,My(this.parseInline(o.tokens,this.textRenderer)));continue}case"code":{const o=i;r+=this.renderer.code(o.text,o.lang,!!o.escaped);continue}case"table":{const o=i;let s="",a="";for(let c=0;c<o.header.length;c++)a+=this.renderer.tablecell(this.parseInline(o.header[c].tokens),{header:!0,align:o.align[c]});s+=this.renderer.tablerow(a);let u="";for(let c=0;c<o.rows.length;c++){const p=o.rows[c];a="";for(let f=0;f<p.length;f++)a+=this.renderer.tablecell(this.parseInline(p[f].tokens),{header:!1,align:o.align[f]});u+=this.renderer.tablerow(a)}r+=this.renderer.table(s,u);continue}case"blockquote":{const o=i,s=this.parse(o.tokens);r+=this.renderer.blockquote(s);continue}case"list":{const o=i,s=o.ordered,a=o.start,u=o.loose;let c="";for(let p=0;p<o.items.length;p++){const f=o.items[p],y=f.checked,k=f.task;let w="";if(f.task){const D=this.renderer.checkbox(!!y);u?f.tokens.length>0&&f.tokens[0].type==="paragraph"?(f.tokens[0].text=D+" "+f.tokens[0].text,f.tokens[0].tokens&&f.tokens[0].tokens.length>0&&f.tokens[0].tokens[0].type==="text"&&(f.tokens[0].tokens[0].text=D+" "+f.tokens[0].tokens[0].text)):f.tokens.unshift({type:"text",text:D+" "}):w+=D+" "}w+=this.parse(f.tokens,u),c+=this.renderer.listitem(w,k,!!y)}r+=this.renderer.list(c,s,a);continue}case"html":{const o=i;r+=this.renderer.html(o.text,o.block);continue}case"paragraph":{const o=i;r+=this.renderer.paragraph(this.parseInline(o.tokens));continue}case"text":{let o=i,s=o.tokens?this.parseInline(o.tokens):o.text;for(;l+1<t.length&&t[l+1].type==="text";)o=t[++l],s+=`
`+(o.tokens?this.parseInline(o.tokens):o.text);r+=n?this.renderer.paragraph(s):s;continue}default:{const o='Token with "'+i.type+'" type was not found.';if(this.options.silent)return console.error(o),"";throw new Error(o)}}}return r}parseInline(t,n){n=n||this.renderer;let r="";for(let l=0;l<t.length;l++){const i=t[l];if(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[i.type]){const o=this.options.extensions.renderers[i.type].call({parser:this},i);if(o!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(i.type)){r+=o||"";continue}}switch(i.type){case"escape":{const o=i;r+=n.text(o.text);break}case"html":{const o=i;r+=n.html(o.text);break}case"link":{const o=i;r+=n.link(o.href,o.title,this.parseInline(o.tokens,n));break}case"image":{const o=i;r+=n.image(o.href,o.title,o.text);break}case"strong":{const o=i;r+=n.strong(this.parseInline(o.tokens,n));break}case"em":{const o=i;r+=n.em(this.parseInline(o.tokens,n));break}case"codespan":{const o=i;r+=n.codespan(o.text);break}case"br":{r+=n.br();break}case"del":{const o=i;r+=n.del(this.parseInline(o.tokens,n));break}case"text":{const o=i;r+=n.text(o.text);break}default:{const o='Token with "'+i.type+'" type was not found.';if(this.options.silent)return console.error(o),"";throw new Error(o)}}}return r}}class Mr{constructor(t){Q(this,"options");this.options=t||Cn}preprocess(t){return t}postprocess(t){return t}}Q(Mr,"passThroughHooks",new Set(["preprocess","postprocess"]));var ll,$s,Ti,nh;class Hy{constructor(...t){to(this,ll);to(this,Ti);Q(this,"defaults",Wa());Q(this,"options",this.setOptions);Q(this,"parse",vl(this,ll,$s).call(this,ht.lex,mt.parse));Q(this,"parseInline",vl(this,ll,$s).call(this,ht.lexInline,mt.parseInline));Q(this,"Parser",mt);Q(this,"parser",mt.parse);Q(this,"Renderer",_i);Q(this,"TextRenderer",ba);Q(this,"Lexer",ht);Q(this,"lexer",ht.lex);Q(this,"Tokenizer",Ci);Q(this,"Hooks",Mr);this.use(...t)}walkTokens(t,n){var l,i;let r=[];for(const o of t)switch(r=r.concat(n.call(this,o)),o.type){case"table":{const s=o;for(const a of s.header)r=r.concat(this.walkTokens(a.tokens,n));for(const a of s.rows)for(const u of a)r=r.concat(this.walkTokens(u.tokens,n));break}case"list":{const s=o;r=r.concat(this.walkTokens(s.items,n));break}default:{const s=o;(i=(l=this.defaults.extensions)==null?void 0:l.childTokens)!=null&&i[s.type]?this.defaults.extensions.childTokens[s.type].forEach(a=>{r=r.concat(this.walkTokens(s[a],n))}):s.tokens&&(r=r.concat(this.walkTokens(s.tokens,n)))}}return r}use(...t){const n=this.defaults.extensions||{renderers:{},childTokens:{}};return t.forEach(r=>{const l={...r};if(l.async=this.defaults.async||l.async||!1,r.extensions&&(r.extensions.forEach(i=>{if(!i.name)throw new Error("extension name required");if("renderer"in i){const o=n.renderers[i.name];o?n.renderers[i.name]=function(...s){let a=i.renderer.apply(this,s);return a===!1&&(a=o.apply(this,s)),a}:n.renderers[i.name]=i.renderer}if("tokenizer"in i){if(!i.level||i.level!=="block"&&i.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");const o=n[i.level];o?o.unshift(i.tokenizer):n[i.level]=[i.tokenizer],i.start&&(i.level==="block"?n.startBlock?n.startBlock.push(i.start):n.startBlock=[i.start]:i.level==="inline"&&(n.startInline?n.startInline.push(i.start):n.startInline=[i.start]))}"childTokens"in i&&i.childTokens&&(n.childTokens[i.name]=i.childTokens)}),l.extensions=n),r.renderer){const i=this.defaults.renderer||new _i(this.defaults);for(const o in r.renderer){const s=r.renderer[o],a=o,u=i[a];i[a]=(...c)=>{let p=s.apply(i,c);return p===!1&&(p=u.apply(i,c)),p||""}}l.renderer=i}if(r.tokenizer){const i=this.defaults.tokenizer||new Ci(this.defaults);for(const o in r.tokenizer){const s=r.tokenizer[o],a=o,u=i[a];i[a]=(...c)=>{let p=s.apply(i,c);return p===!1&&(p=u.apply(i,c)),p}}l.tokenizer=i}if(r.hooks){const i=this.defaults.hooks||new Mr;for(const o in r.hooks){const s=r.hooks[o],a=o,u=i[a];Mr.passThroughHooks.has(o)?i[a]=c=>{if(this.defaults.async)return Promise.resolve(s.call(i,c)).then(f=>u.call(i,f));const p=s.call(i,c);return u.call(i,p)}:i[a]=(...c)=>{let p=s.apply(i,c);return p===!1&&(p=u.apply(i,c)),p}}l.hooks=i}if(r.walkTokens){const i=this.defaults.walkTokens,o=r.walkTokens;l.walkTokens=function(s){let a=[];return a.push(o.call(this,s)),i&&(a=a.concat(i.call(this,s))),a}}this.defaults={...this.defaults,...l}}),this}setOptions(t){return this.defaults={...this.defaults,...t},this}}ll=new WeakSet,$s=function(t,n){return(r,l)=>{const i={...l},o={...this.defaults,...i};this.defaults.async===!0&&i.async===!1&&(o.silent||console.warn("marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored."),o.async=!0);const s=vl(this,Ti,nh).call(this,!!o.silent,!!o.async);if(typeof r>"u"||r===null)return s(new Error("marked(): input parameter is undefined or null"));if(typeof r!="string")return s(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(r)+", string expected"));if(o.hooks&&(o.hooks.options=o),o.async)return Promise.resolve(o.hooks?o.hooks.preprocess(r):r).then(a=>t(a,o)).then(a=>o.walkTokens?Promise.all(this.walkTokens(a,o.walkTokens)).then(()=>a):a).then(a=>n(a,o)).then(a=>o.hooks?o.hooks.postprocess(a):a).catch(s);try{o.hooks&&(r=o.hooks.preprocess(r));const a=t(r,o);o.walkTokens&&this.walkTokens(a,o.walkTokens);let u=n(a,o);return o.hooks&&(u=o.hooks.postprocess(u)),u}catch(a){return s(a)}}},Ti=new WeakSet,nh=function(t,n){return r=>{if(r.message+=`
Please report this to https://github.com/markedjs/marked.`,t){const l="<p>An error occurred:</p><pre>"+Fe(r.message+"",!0)+"</pre>";return n?Promise.resolve(l):l}if(n)return Promise.reject(r);throw r}};const wn=new Hy;function b(e,t){return wn.parse(e,t)}b.options=b.setOptions=function(e){return wn.setOptions(e),b.defaults=wn.defaults,Jp(b.defaults),b};b.getDefaults=Wa;b.defaults=Cn;b.use=function(...e){return wn.use(...e),b.defaults=wn.defaults,Jp(b.defaults),b};b.walkTokens=function(e,t){return wn.walkTokens(e,t)};b.parseInline=wn.parseInline;b.Parser=mt;b.parser=mt.parse;b.Renderer=_i;b.TextRenderer=ba;b.Lexer=ht;b.lexer=ht.lex;b.Tokenizer=Ci;b.Hooks=Mr;b.parse=b;b.options;b.setOptions;b.use;b.walkTokens;b.parseInline;const Ka=b;mt.parse;ht.lex;/*! @license DOMPurify 3.0.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.5/LICENSE */const{entries:rh,setPrototypeOf:Lc,isFrozen:Wy,getPrototypeOf:by,getOwnPropertyDescriptor:Ky}=Object;let{freeze:Ne,seal:st,create:Vy}=Object,{apply:Ms,construct:Fs}=typeof Reflect<"u"&&Reflect;Ms||(Ms=function(t,n,r){return t.apply(n,r)});Ne||(Ne=function(t){return t});st||(st=function(t){return t});Fs||(Fs=function(t,n){return new t(...n)});const Qy=qe(Array.prototype.forEach),Ac=qe(Array.prototype.pop),wr=qe(Array.prototype.push),Xl=qe(String.prototype.toLowerCase),Lo=qe(String.prototype.toString),Gy=qe(String.prototype.match),et=qe(String.prototype.replace),Yy=qe(String.prototype.indexOf),Xy=qe(String.prototype.trim),ze=qe(RegExp.prototype.test),Sr=Zy(TypeError);function qe(e){return function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),l=1;l<n;l++)r[l-1]=arguments[l];return Ms(e,t,r)}}function Zy(e){return function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return Fs(e,n)}}function U(e,t,n){var r;n=(r=n)!==null&&r!==void 0?r:Xl,Lc&&Lc(e,null);let l=t.length;for(;l--;){let i=t[l];if(typeof i=="string"){const o=n(i);o!==i&&(Wy(t)||(t[l]=o),i=o)}e[i]=!0}return e}function Dn(e){const t=Vy(null);for(const[n,r]of rh(e))t[n]=r;return t}function zl(e,t){for(;e!==null;){const r=Ky(e,t);if(r){if(r.get)return qe(r.get);if(typeof r.value=="function")return qe(r.value)}e=by(e)}function n(r){return console.warn("fallback value for",r),null}return n}const Dc=Ne(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),Ao=Ne(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),Do=Ne(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),qy=Ne(["animate","color-profile","cursor","discard","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),jo=Ne(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover","mprescripts"]),Jy=Ne(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),jc=Ne(["#text"]),zc=Ne(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),zo=Ne(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),$c=Ne(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),$l=Ne(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),e0=st(/\{\{[\w\W]*|[\w\W]*\}\}/gm),t0=st(/<%[\w\W]*|[\w\W]*%>/gm),n0=st(/\${[\w\W]*}/gm),r0=st(/^data-[\-\w.\u00B7-\uFFFF]/),l0=st(/^aria-[\-\w]+$/),lh=st(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),i0=st(/^(?:\w+script|data):/i),o0=st(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),ih=st(/^html$/i);var Mc=Object.freeze({__proto__:null,MUSTACHE_EXPR:e0,ERB_EXPR:t0,TMPLIT_EXPR:n0,DATA_ATTR:r0,ARIA_ATTR:l0,IS_ALLOWED_URI:lh,IS_SCRIPT_OR_DATA:i0,ATTR_WHITESPACE:o0,DOCTYPE_NAME:ih});const s0=()=>typeof window>"u"?null:window,a0=function(t,n){if(typeof t!="object"||typeof t.createPolicy!="function")return null;let r=null;const l="data-tt-policy-suffix";n&&n.hasAttribute(l)&&(r=n.getAttribute(l));const i="dompurify"+(r?"#"+r:"");try{return t.createPolicy(i,{createHTML(o){return o},createScriptURL(o){return o}})}catch{return console.warn("TrustedTypes policy "+i+" could not be created."),null}};function oh(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:s0();const t=j=>oh(j);if(t.version="3.0.5",t.removed=[],!e||!e.document||e.document.nodeType!==9)return t.isSupported=!1,t;const n=e.document,r=n.currentScript;let{document:l}=e;const{DocumentFragment:i,HTMLTemplateElement:o,Node:s,Element:a,NodeFilter:u,NamedNodeMap:c=e.NamedNodeMap||e.MozNamedAttrMap,HTMLFormElement:p,DOMParser:f,trustedTypes:y}=e,k=a.prototype,w=zl(k,"cloneNode"),D=zl(k,"nextSibling"),m=zl(k,"childNodes"),d=zl(k,"parentNode");if(typeof o=="function"){const j=l.createElement("template");j.content&&j.content.ownerDocument&&(l=j.content.ownerDocument)}let h,x="";const{implementation:_,createNodeIterator:T,createDocumentFragment:I,getElementsByTagName:L}=l,{importNode:J}=n;let $={};t.isSupported=typeof rh=="function"&&typeof d=="function"&&_&&_.createHTMLDocument!==void 0;const{MUSTACHE_EXPR:Ee,ERB_EXPR:yt,TMPLIT_EXPR:kt,DATA_ATTR:cl,ARIA_ATTR:bi,IS_SCRIPT_OR_DATA:fr,ATTR_WHITESPACE:_n}=Mc;let{IS_ALLOWED_URI:O}=Mc,A=null;const M=U({},[...Dc,...Ao,...Do,...jo,...jc]);let F=null;const ie=U({},[...zc,...zo,...$c,...$l]);let G=Object.seal(Object.create(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),je=null,nn=null,at=!0,Dt=!0,Qa=!1,Ga=!0,Tn=!1,rn=!1,Ki=!1,Vi=!1,Nn=!1,fl=!1,dl=!1,Ya=!0,Xa=!1;const sh="user-content-";let Qi=!0,dr=!1,Rn={},In=null;const Za=U({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]);let qa=null;const Ja=U({},["audio","video","img","source","image","track"]);let Gi=null;const eu=U({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),pl="http://www.w3.org/1998/Math/MathML",hl="http://www.w3.org/2000/svg",xt="http://www.w3.org/1999/xhtml";let On=xt,Yi=!1,Xi=null;const ah=U({},[pl,hl,xt],Lo);let ln;const uh=["application/xhtml+xml","text/html"],ch="text/html";let fe,Pn=null;const fh=l.createElement("form"),tu=function(g){return g instanceof RegExp||g instanceof Function},Zi=function(g){if(!(Pn&&Pn===g)){if((!g||typeof g!="object")&&(g={}),g=Dn(g),ln=uh.indexOf(g.PARSER_MEDIA_TYPE)===-1?ln=ch:ln=g.PARSER_MEDIA_TYPE,fe=ln==="application/xhtml+xml"?Lo:Xl,A="ALLOWED_TAGS"in g?U({},g.ALLOWED_TAGS,fe):M,F="ALLOWED_ATTR"in g?U({},g.ALLOWED_ATTR,fe):ie,Xi="ALLOWED_NAMESPACES"in g?U({},g.ALLOWED_NAMESPACES,Lo):ah,Gi="ADD_URI_SAFE_ATTR"in g?U(Dn(eu),g.ADD_URI_SAFE_ATTR,fe):eu,qa="ADD_DATA_URI_TAGS"in g?U(Dn(Ja),g.ADD_DATA_URI_TAGS,fe):Ja,In="FORBID_CONTENTS"in g?U({},g.FORBID_CONTENTS,fe):Za,je="FORBID_TAGS"in g?U({},g.FORBID_TAGS,fe):{},nn="FORBID_ATTR"in g?U({},g.FORBID_ATTR,fe):{},Rn="USE_PROFILES"in g?g.USE_PROFILES:!1,at=g.ALLOW_ARIA_ATTR!==!1,Dt=g.ALLOW_DATA_ATTR!==!1,Qa=g.ALLOW_UNKNOWN_PROTOCOLS||!1,Ga=g.ALLOW_SELF_CLOSE_IN_ATTR!==!1,Tn=g.SAFE_FOR_TEMPLATES||!1,rn=g.WHOLE_DOCUMENT||!1,Nn=g.RETURN_DOM||!1,fl=g.RETURN_DOM_FRAGMENT||!1,dl=g.RETURN_TRUSTED_TYPE||!1,Vi=g.FORCE_BODY||!1,Ya=g.SANITIZE_DOM!==!1,Xa=g.SANITIZE_NAMED_PROPS||!1,Qi=g.KEEP_CONTENT!==!1,dr=g.IN_PLACE||!1,O=g.ALLOWED_URI_REGEXP||lh,On=g.NAMESPACE||xt,G=g.CUSTOM_ELEMENT_HANDLING||{},g.CUSTOM_ELEMENT_HANDLING&&tu(g.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(G.tagNameCheck=g.CUSTOM_ELEMENT_HANDLING.tagNameCheck),g.CUSTOM_ELEMENT_HANDLING&&tu(g.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(G.attributeNameCheck=g.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),g.CUSTOM_ELEMENT_HANDLING&&typeof g.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements=="boolean"&&(G.allowCustomizedBuiltInElements=g.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),Tn&&(Dt=!1),fl&&(Nn=!0),Rn&&(A=U({},[...jc]),F=[],Rn.html===!0&&(U(A,Dc),U(F,zc)),Rn.svg===!0&&(U(A,Ao),U(F,zo),U(F,$l)),Rn.svgFilters===!0&&(U(A,Do),U(F,zo),U(F,$l)),Rn.mathMl===!0&&(U(A,jo),U(F,$c),U(F,$l))),g.ADD_TAGS&&(A===M&&(A=Dn(A)),U(A,g.ADD_TAGS,fe)),g.ADD_ATTR&&(F===ie&&(F=Dn(F)),U(F,g.ADD_ATTR,fe)),g.ADD_URI_SAFE_ATTR&&U(Gi,g.ADD_URI_SAFE_ATTR,fe),g.FORBID_CONTENTS&&(In===Za&&(In=Dn(In)),U(In,g.FORBID_CONTENTS,fe)),Qi&&(A["#text"]=!0),rn&&U(A,["html","head","body"]),A.table&&(U(A,["tbody"]),delete je.tbody),g.TRUSTED_TYPES_POLICY){if(typeof g.TRUSTED_TYPES_POLICY.createHTML!="function")throw Sr('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');if(typeof g.TRUSTED_TYPES_POLICY.createScriptURL!="function")throw Sr('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');h=g.TRUSTED_TYPES_POLICY,x=h.createHTML("")}else h===void 0&&(h=a0(y,r)),h!==null&&typeof x=="string"&&(x=h.createHTML(""));Ne&&Ne(g),Pn=g}},nu=U({},["mi","mo","mn","ms","mtext"]),ru=U({},["foreignobject","desc","title","annotation-xml"]),dh=U({},["title","style","font","a","script"]),ml=U({},Ao);U(ml,Do),U(ml,qy);const qi=U({},jo);U(qi,Jy);const ph=function(g){let C=d(g);(!C||!C.tagName)&&(C={namespaceURI:On,tagName:"template"});const R=Xl(g.tagName),V=Xl(C.tagName);return Xi[g.namespaceURI]?g.namespaceURI===hl?C.namespaceURI===xt?R==="svg":C.namespaceURI===pl?R==="svg"&&(V==="annotation-xml"||nu[V]):!!ml[R]:g.namespaceURI===pl?C.namespaceURI===xt?R==="math":C.namespaceURI===hl?R==="math"&&ru[V]:!!qi[R]:g.namespaceURI===xt?C.namespaceURI===hl&&!ru[V]||C.namespaceURI===pl&&!nu[V]?!1:!qi[R]&&(dh[R]||!ml[R]):!!(ln==="application/xhtml+xml"&&Xi[g.namespaceURI]):!1},on=function(g){wr(t.removed,{element:g});try{g.parentNode.removeChild(g)}catch{g.remove()}},Ji=function(g,C){try{wr(t.removed,{attribute:C.getAttributeNode(g),from:C})}catch{wr(t.removed,{attribute:null,from:C})}if(C.removeAttribute(g),g==="is"&&!F[g])if(Nn||fl)try{on(C)}catch{}else try{C.setAttribute(g,"")}catch{}},lu=function(g){let C,R;if(Vi)g="<remove></remove>"+g;else{const Ke=Gy(g,/^[\r\n\t ]+/);R=Ke&&Ke[0]}ln==="application/xhtml+xml"&&On===xt&&(g='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+g+"</body></html>");const V=h?h.createHTML(g):g;if(On===xt)try{C=new f().parseFromString(V,ln)}catch{}if(!C||!C.documentElement){C=_.createDocument(On,"template",null);try{C.documentElement.innerHTML=Yi?x:V}catch{}}const de=C.body||C.documentElement;return g&&R&&de.insertBefore(l.createTextNode(R),de.childNodes[0]||null),On===xt?L.call(C,rn?"html":"body")[0]:rn?C.documentElement:de},iu=function(g){return T.call(g.ownerDocument||g,g,u.SHOW_ELEMENT|u.SHOW_COMMENT|u.SHOW_TEXT,null,!1)},hh=function(g){return g instanceof p&&(typeof g.nodeName!="string"||typeof g.textContent!="string"||typeof g.removeChild!="function"||!(g.attributes instanceof c)||typeof g.removeAttribute!="function"||typeof g.setAttribute!="function"||typeof g.namespaceURI!="string"||typeof g.insertBefore!="function"||typeof g.hasChildNodes!="function")},gl=function(g){return typeof s=="object"?g instanceof s:g&&typeof g=="object"&&typeof g.nodeType=="number"&&typeof g.nodeName=="string"},wt=function(g,C,R){$[g]&&Qy($[g],V=>{V.call(t,C,R,Pn)})},ou=function(g){let C;if(wt("beforeSanitizeElements",g,null),hh(g))return on(g),!0;const R=fe(g.nodeName);if(wt("uponSanitizeElement",g,{tagName:R,allowedTags:A}),g.hasChildNodes()&&!gl(g.firstElementChild)&&(!gl(g.content)||!gl(g.content.firstElementChild))&&ze(/<[/\w]/g,g.innerHTML)&&ze(/<[/\w]/g,g.textContent))return on(g),!0;if(!A[R]||je[R]){if(!je[R]&&au(R)&&(G.tagNameCheck instanceof RegExp&&ze(G.tagNameCheck,R)||G.tagNameCheck instanceof Function&&G.tagNameCheck(R)))return!1;if(Qi&&!In[R]){const V=d(g)||g.parentNode,de=m(g)||g.childNodes;if(de&&V){const Ke=de.length;for(let ee=Ke-1;ee>=0;--ee)V.insertBefore(w(de[ee],!0),D(g))}}return on(g),!0}return g instanceof a&&!ph(g)||(R==="noscript"||R==="noembed"||R==="noframes")&&ze(/<\/no(script|embed|frames)/i,g.innerHTML)?(on(g),!0):(Tn&&g.nodeType===3&&(C=g.textContent,C=et(C,Ee," "),C=et(C,yt," "),C=et(C,kt," "),g.textContent!==C&&(wr(t.removed,{element:g.cloneNode()}),g.textContent=C)),wt("afterSanitizeElements",g,null),!1)},su=function(g,C,R){if(Ya&&(C==="id"||C==="name")&&(R in l||R in fh))return!1;if(!(Dt&&!nn[C]&&ze(cl,C))){if(!(at&&ze(bi,C))){if(!F[C]||nn[C]){if(!(au(g)&&(G.tagNameCheck instanceof RegExp&&ze(G.tagNameCheck,g)||G.tagNameCheck instanceof Function&&G.tagNameCheck(g))&&(G.attributeNameCheck instanceof RegExp&&ze(G.attributeNameCheck,C)||G.attributeNameCheck instanceof Function&&G.attributeNameCheck(C))||C==="is"&&G.allowCustomizedBuiltInElements&&(G.tagNameCheck instanceof RegExp&&ze(G.tagNameCheck,R)||G.tagNameCheck instanceof Function&&G.tagNameCheck(R))))return!1}else if(!Gi[C]){if(!ze(O,et(R,_n,""))){if(!((C==="src"||C==="xlink:href"||C==="href")&&g!=="script"&&Yy(R,"data:")===0&&qa[g])){if(!(Qa&&!ze(fr,et(R,_n,"")))){if(R)return!1}}}}}}return!0},au=function(g){return g.indexOf("-")>0},uu=function(g){let C,R,V,de;wt("beforeSanitizeAttributes",g,null);const{attributes:Ke}=g;if(!Ke)return;const ee={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:F};for(de=Ke.length;de--;){C=Ke[de];const{name:ut,namespaceURI:eo}=C;if(R=ut==="value"?C.value:Xy(C.value),V=fe(ut),ee.attrName=V,ee.attrValue=R,ee.keepAttr=!0,ee.forceKeepAttr=void 0,wt("uponSanitizeAttribute",g,ee),R=ee.attrValue,ee.forceKeepAttr||(Ji(ut,g),!ee.keepAttr))continue;if(!Ga&&ze(/\/>/i,R)){Ji(ut,g);continue}Tn&&(R=et(R,Ee," "),R=et(R,yt," "),R=et(R,kt," "));const cu=fe(g.nodeName);if(su(cu,V,R)){if(Xa&&(V==="id"||V==="name")&&(Ji(ut,g),R=sh+R),h&&typeof y=="object"&&typeof y.getAttributeType=="function"&&!eo)switch(y.getAttributeType(cu,V)){case"TrustedHTML":{R=h.createHTML(R);break}case"TrustedScriptURL":{R=h.createScriptURL(R);break}}try{eo?g.setAttributeNS(eo,ut,R):g.setAttribute(ut,R),Ac(t.removed)}catch{}}}wt("afterSanitizeAttributes",g,null)},mh=function j(g){let C;const R=iu(g);for(wt("beforeSanitizeShadowDOM",g,null);C=R.nextNode();)wt("uponSanitizeShadowNode",C,null),!ou(C)&&(C.content instanceof i&&j(C.content),uu(C));wt("afterSanitizeShadowDOM",g,null)};return t.sanitize=function(j){let g=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},C,R,V,de;if(Yi=!j,Yi&&(j="<!-->"),typeof j!="string"&&!gl(j))if(typeof j.toString=="function"){if(j=j.toString(),typeof j!="string")throw Sr("dirty is not a string, aborting")}else throw Sr("toString is not a function");if(!t.isSupported)return j;if(Ki||Zi(g),t.removed=[],typeof j=="string"&&(dr=!1),dr){if(j.nodeName){const ut=fe(j.nodeName);if(!A[ut]||je[ut])throw Sr("root node is forbidden and cannot be sanitized in-place")}}else if(j instanceof s)C=lu("<!---->"),R=C.ownerDocument.importNode(j,!0),R.nodeType===1&&R.nodeName==="BODY"||R.nodeName==="HTML"?C=R:C.appendChild(R);else{if(!Nn&&!Tn&&!rn&&j.indexOf("<")===-1)return h&&dl?h.createHTML(j):j;if(C=lu(j),!C)return Nn?null:dl?x:""}C&&Vi&&on(C.firstChild);const Ke=iu(dr?j:C);for(;V=Ke.nextNode();)ou(V)||(V.content instanceof i&&mh(V.content),uu(V));if(dr)return j;if(Nn){if(fl)for(de=I.call(C.ownerDocument);C.firstChild;)de.appendChild(C.firstChild);else de=C;return(F.shadowroot||F.shadowrootmode)&&(de=J.call(n,de,!0)),de}let ee=rn?C.outerHTML:C.innerHTML;return rn&&A["!doctype"]&&C.ownerDocument&&C.ownerDocument.doctype&&C.ownerDocument.doctype.name&&ze(ih,C.ownerDocument.doctype.name)&&(ee="<!DOCTYPE "+C.ownerDocument.doctype.name+`>
`+ee),Tn&&(ee=et(ee,Ee," "),ee=et(ee,yt," "),ee=et(ee,kt," ")),h&&dl?h.createHTML(ee):ee},t.setConfig=function(j){Zi(j),Ki=!0},t.clearConfig=function(){Pn=null,Ki=!1},t.isValidAttribute=function(j,g,C){Pn||Zi({});const R=fe(j),V=fe(g);return su(R,V,C)},t.addHook=function(j,g){typeof g=="function"&&($[j]=$[j]||[],wr($[j],g))},t.removeHook=function(j){if($[j])return Ac($[j])},t.removeHooks=function(j){$[j]&&($[j]=[])},t.removeAllHooks=function(){$={}},t}var Va=oh();class u0 extends ae.Component{constructor(t){super(t)}render(){const t=v.jsx("button",{type:"button",className:"btn btn-block btn-primary",onClick:()=>{const r=this.props.criteria.length===0?0:Math.max(...this.props.criteria.map(l=>l.Id))+1;this.props.onNewCriteria({Id:r,Description:"?",Definition:"?",Index:this.props.criteria.length,IsPrimary:!0})},children:"New Criteria"});if(this.props.criteria.length===0)return v.jsxs("div",{children:[v.jsx("p",{children:"No criteria defined"}),t]});const n=this.props.criteria.map((r,l)=>v.jsxs("li",{className:"list-group-item",children:[v.jsxs("div",{className:"form-row",children:[v.jsxs("div",{className:"col-1",children:[v.jsx("button",{type:"button",disabled:l===0,className:"btn btn-primary btn-sm mb-2",onClick:()=>{this.props.onMoveUp(r)},children:"↑"})," ",v.jsx("button",{type:"button",disabled:l===this.props.criteria.length-1,className:"btn btn-primary btn-sm mb-2",onClick:()=>{this.props.onMoveDown(r)},children:"↓"})]}),v.jsx("label",{className:"col-form-label",children:"Criteria"}),v.jsx("div",{className:"col",children:v.jsx("input",{className:"form-control",type:"text",value:r.Description,onChange:i=>{r.Description=i.target.value,this.props.onUpdateCriteria(r)}})})]}),v.jsxs("div",{className:"form-row",children:[v.jsx("div",{className:"col-1",children:v.jsx(Ip,{children:"Is Primary"})}),v.jsx("div",{className:"col-1",children:v.jsx(rl,{checked:r.IsPrimary,onChange:i=>{r.IsPrimary=!r.IsPrimary,this.props.onUpdateCriteria(r)}})})]}),v.jsxs("div",{className:"form-row",children:[v.jsx("div",{className:"col-1",children:v.jsx("button",{type:"button",className:"btn btn-danger btn-sm mb-2",onClick:()=>{this.props.onRemoveCriteria(r)},children:"Delete"})}),v.jsx("label",{className:"col-form-label",style:{verticalAlign:"top"},children:"Definition"}),v.jsx("div",{className:"col",children:v.jsxs(Si,{defaultActiveKey:"Edit",className:"mb-3",children:[v.jsx(dt,{eventKey:"Edit",title:"Edit",children:v.jsx("textarea",{value:r.Definition||"",id:"problemStatementEditor",className:"form-control",rows:7,cols:100,onChange:i=>{r.Definition=i.target.value,this.props.onUpdateCriteria(r)}})}),v.jsx(dt,{eventKey:"Preview",title:"Preview",children:v.jsx("div",{style:{height:"150px",overflow:"scroll"},dangerouslySetInnerHTML:{__html:Va.sanitize(Ka(r.Definition))}})})]})})]})]},r.Id));return v.jsxs("div",{children:[v.jsx("ul",{className:"list-group",children:n}),t]})}}class c0 extends ae.Component{constructor(t){super(t)}render(){return this.props.options.length===0?v.jsx("div",{}):v.jsxs("div",{className:"form-group",children:[v.jsx("label",{htmlFor:"chosenOption",children:"Chosen Option"}),v.jsxs("select",{name:"chosenOption",value:this.props.chosenOption,className:"form-select",onChange:t=>this.props.onChosenOptionChanged(Number(t.target.value)),children:[v.jsx("option",{value:""}),this.props.options.map(t=>v.jsx("option",{value:t.Id,children:t.Name},t.Id))]})]})}}class f0 extends ae.Component{constructor(t){super(t)}render(){const t=v.jsx("button",{type:"button",className:"btn btn-block btn-primary  ",onClick:()=>{const r=this.props.stakeholders.length===0?0:Math.max(...this.props.stakeholders.map(l=>l.Id))+1;this.props.onNewStakeholder({Id:r,Name:"?",Role:"?",Socialised:!1})},children:"New Stakeholder"});if(this.props.stakeholders.length===0)return v.jsxs("div",{children:[v.jsx("p",{children:"No stakeholders defined"}),t]});const n=this.props.stakeholders.map(r=>v.jsxs("li",{className:"list-group-item",children:[v.jsxs("div",{className:"form-row",children:[v.jsx("label",{className:"col-form-label",children:"Name"}),v.jsx("div",{className:"col",children:v.jsx("input",{className:"form-control",type:"text",value:r.Name,onChange:l=>{r.Name=l.target.value,this.props.onUpdateStakeholder(r)}})}),v.jsx("label",{className:"col-form-label",children:"Role"}),v.jsx("div",{className:"col",children:v.jsx("input",{className:"form-control",type:"text",value:r.Role,onChange:l=>{r.Role=l.target.value,this.props.onUpdateStakeholder(r)}})}),v.jsx("div",{className:"col",children:v.jsxs("div",{className:"form-check",children:[v.jsx("input",{className:"form-check-input",type:"checkbox",checked:r.Socialised,onChange:l=>{r.Socialised=l.target.checked,this.props.onUpdateStakeholder(r)}}),v.jsx("label",{className:"col-form-label",children:"Socialised"})]})}),v.jsx("div",{className:"col",children:v.jsx("button",{type:"button",className:"btn btn-danger btn-sm mb-2",onClick:()=>{this.props.onRemoveStakeholder(r)},children:"Delete"})})]}),v.jsx("div",{className:"form-row"})]},r.Id));return v.jsxs("div",{children:[v.jsx("ul",{className:"list-group",children:n}),t]})}}class d0 extends ae.Component{constructor(t){super(t)}render(){const t=v.jsx("button",{type:"button",className:"btn btn-block btn-primary  ",onClick:()=>{const r=this.props.options.length===0?0:Math.max(...this.props.options.map(l=>l.Id))+1;this.props.onNewOption({Id:r,Name:"?",Description:"?",Diagram:""})},children:"New Option"});if(this.props.options.length===0)return v.jsxs("div",{children:[v.jsx("p",{children:"No options defined"}),t]});const n=this.props.options.map(r=>v.jsxs("li",{className:"list-group-item",children:[v.jsxs("div",{className:"form-row",children:[v.jsx("label",{className:"col-form-label",children:"Title"}),v.jsx("div",{className:"col",children:v.jsx("input",{className:"form-control",type:"text",value:r.Name,onChange:l=>{r.Name=l.target.value,this.props.onUpdateOption(r)}})}),v.jsx("div",{className:"col",children:v.jsx("button",{type:"button",className:"btn btn-danger btn-sm mb-2",onClick:()=>{this.props.onRemoveOption(r)},children:"Delete"})})]}),v.jsxs("div",{className:"form-row",children:[v.jsxs("div",{className:"col-8",children:[v.jsx("label",{style:{verticalAlign:"top"},children:"Description"}),v.jsxs(Si,{defaultActiveKey:"Edit",className:"mb-3",children:[v.jsx(dt,{eventKey:"Edit",title:"Edit",children:v.jsx("textarea",{value:r.Description||"",id:"problemStatementEditor",className:"form-control",rows:7,cols:100,onChange:l=>{r.Description=l.target.value,this.props.onUpdateOption(r)}})}),v.jsx(dt,{eventKey:"Preview",title:"Preview",children:v.jsx("div",{style:{height:"150px",overflow:"scroll"},dangerouslySetInnerHTML:{__html:Va.sanitize(Ka(r.Description))}})})]})]}),v.jsxs("div",{className:"col-4",children:[v.jsxs("label",{children:["HTML ",v.jsx("b",{children:"Not filtered on print view"})]}),v.jsx("textarea",{rows:7,className:"form-control",value:r.Diagram||"",onChange:l=>{r.Diagram=l.target.value||"",this.props.onUpdateOption(r)}})]})]})]},r.Id));return v.jsxs("div",{children:[v.jsx("ul",{className:"list-group",children:n}),t]})}}class p0 extends ae.Component{constructor(t){super(t)}render(){return v.jsxs("table",{className:"table table-striped",children:[v.jsx("thead",{children:v.jsxs("tr",{className:"",children:[v.jsx("td",{}),this.props.options.map(t=>v.jsx("td",{children:t.Name},`description-${t.Id}`))]})}),v.jsx("tbody",{children:this.props.criteria.map(t=>v.jsxs("tr",{children:[v.jsx("td",{children:t.Description}),this.props.options.map(n=>{const r=this.props.comparisons[t.Id];let l=r[n.Id];l||(console.log("New comparison:"+n.Id),r[n.Id]={OptionId:n.Id,Rating:{Commentary:"",Rank:3}},l=r[n.Id]);const i=`${t.Id}-${n.Id}`,o=ae.createRef(),s=ae.createRef();function a(u){switch(u){case 0:return"bg-danger";case 1:return"bg-warning";case 3:case 4:return"";default:return"bg-success"}}return v.jsxs("td",{children:[v.jsx("div",{className:"row",children:v.jsx("div",{className:"col",children:v.jsxs(vy.Select,{className:"form-control me-sm-2",ref:s,value:l.Rating.Rank,onChange:u=>{this.props.onUpdateMatrix(t.Id,n.Id,{Commentary:o.current.value,Rank:parseInt(s.current.value,10)})},children:[v.jsx("option",{value:"0",children:"Poor"}),v.jsx("option",{value:"1",children:"Average"}),v.jsx("option",{value:"2",children:"Good"}),v.jsx("option",{value:"3",children:"Unknown"}),v.jsx("option",{value:"4",children:"Not Rated"})]})})}),v.jsx("div",{className:"row",children:v.jsx("div",{className:"col",children:v.jsx("textarea",{className:`form-control ${a(l.Rating.Rank)}`,cols:30,rows:2,value:l.Rating.Commentary,ref:o,onChange:u=>{this.props.onUpdateMatrix(t.Id,n.Id,{Commentary:o.current.value,Rank:parseInt(s.current.value,10)})}})})})]},i)})]},`criteria-${t.Id}`))})]})}}class h0 extends S.Component{constructor(t){super(t),this.state={decision:t.decision,undoBuffer:[]},this.updateClone=this.updateClone.bind(this),this.onUpdate=this.onUpdate.bind(this),this.cloneDecision=this.cloneDecision.bind(this)}cloneDecision(){return JSON.parse(JSON.stringify(this.state.decision))}updateClone(t){let n=this.cloneDecision();t(n),this.onUpdate(n)}onUpdateItem(t,n,r){let l=r(t),i=l.findIndex(o=>o.Id==n.Id);l.splice(i,1,JSON.parse(JSON.stringify(n))),this.onUpdate(t)}removeItemById(t,n,r){let l=r(t),i=l.findIndex(o=>o.Id==n);l.splice(i,1),this.onUpdate(t)}onUpdateMatrix(t,n,r){let l=this.cloneDecision();l.Comparison[t][n].Rating=r,this.onUpdate(l)}onUpdate(t){this.sanitiseDecision(t);let n=this.state.undoBuffer;n.push(this.state.decision),this.setState({decision:t,undoBuffer:n}),this.props.onUpdate(t)}sanitiseDecision(t){t.SolutionCriteria.forEach(n=>{t.Options.forEach(r=>{t.Comparison[n.Id]||(t.Comparison[n.Id]={}),t.Comparison[n.Id][r.Id]===void 0&&(t.Comparison[n.Id][r.Id]={OptionId:r.Id,Rating:{Commentary:"",Rank:1}})})})}raiseCriteria(t){this.updateClone(n=>{let r=n.SolutionCriteria.sort((u,c)=>u.Index<c.Index?-1:1),l=0;r.forEach(u=>u.Index=l++);let i=n.SolutionCriteria.findIndex(u=>u.Id===t.Id),o=n.SolutionCriteria[i],s=n.SolutionCriteria[i-1],a=o.Index;o.Index=s.Index,s.Index=a,n.SolutionCriteria[a]=s,n.SolutionCriteria[a-1]=o})}lowerCriteria(t){this.updateClone(n=>{let r=n.SolutionCriteria.sort((u,c)=>u.Index<c.Index?-1:1);var l=0;r.forEach(u=>u.Index=l++);let i=n.SolutionCriteria.findIndex(u=>u.Id===t.Id),o=n.SolutionCriteria[i],s=n.SolutionCriteria[i+1],a=o.Index;o.Index=s.Index,s.Index=a,n.SolutionCriteria[a]=s,n.SolutionCriteria[a+1]=o,console.log(n.SolutionCriteria)})}render(){const t=JSON.parse(JSON.stringify(this.state.decision));return t.SolutionCriteria.sort(n=>n.Index),v.jsxs("div",{children:[v.jsxs("div",{className:"form-group",children:[v.jsx("label",{htmlFor:"displayName",children:"Display Name"}),v.jsx("input",{type:"text",className:"form-control",value:t.DisplayName,placeholder:"Decision Display Name",id:"displayName",onChange:n=>{this.updateClone(r=>r.DisplayName=n.target.value)}})]}),v.jsxs("div",{className:"form-group",children:[v.jsx("label",{htmlFor:"problemStatementEditor",style:{verticalAlign:"top"},children:"Problem Statement"}),v.jsxs(Si,{defaultActiveKey:"Edit",className:"mb-3",children:[v.jsx(dt,{eventKey:"Edit",title:"Edit",children:v.jsx("textarea",{value:this.state.decision.ProblemStatement,id:"problemStatementEditor",className:"form-control",rows:8,cols:100,onChange:n=>{this.updateClone(r=>r.ProblemStatement=n.target.value)}})}),v.jsx(dt,{eventKey:"Preview",title:"Preview",children:v.jsx("div",{style:{height:"150px",overflow:"scroll"},dangerouslySetInnerHTML:{__html:Va.sanitize(Ka(this.state.decision.ProblemStatement))}})})]})]}),v.jsx("hr",{}),v.jsx(c0,{options:t.Options,chosenOption:t.ChosenOption,onChosenOptionChanged:n=>this.updateClone(r=>r.ChosenOption=n)}),v.jsxs(Si,{defaultActiveKey:"stakeholders",id:"uncontrolled-tab-example",className:"mb-3",children:[v.jsx(dt,{eventKey:"stakeholders",title:"Stakeholders",children:v.jsx(f0,{stakeholders:this.state.decision.Stakeholders,onNewStakeholder:n=>this.updateClone(r=>r.Stakeholders.push(n)),onRemoveStakeholder:n=>this.removeItemById(this.cloneDecision(),n.Id,r=>r.Stakeholders),onUpdateStakeholder:n=>this.onUpdateItem(this.cloneDecision(),n,r=>r.Stakeholders)})}),v.jsx(dt,{eventKey:"criteria",title:"Criteria",children:v.jsx(u0,{criteria:t.SolutionCriteria,onMoveUp:n=>this.raiseCriteria(n),onMoveDown:n=>this.lowerCriteria(n),onNewCriteria:n=>this.updateClone(r=>r.SolutionCriteria.push(n)),onRemoveCriteria:n=>this.removeItemById(this.cloneDecision(),n.Id,r=>r.SolutionCriteria),onUpdateCriteria:n=>this.onUpdateItem(this.cloneDecision(),n,r=>r.SolutionCriteria)})}),v.jsx(dt,{eventKey:"options",title:"Options",children:v.jsx(d0,{options:this.state.decision.Options,onNewOption:n=>this.updateClone(r=>r.Options.push(n)),onRemoveOption:n=>this.removeItemById(this.cloneDecision(),n.Id,r=>r.Options),onUpdateOption:n=>this.onUpdateItem(this.cloneDecision(),n,r=>r.Options)})}),v.jsx(dt,{eventKey:"comparisons",title:"Comparisons",children:v.jsx(p0,{options:t.Options,criteria:t.SolutionCriteria,comparisons:t.Comparison,onUpdateMatrix:(n,r,l)=>this.onUpdateMatrix(n,r,l)})})]}),v.jsx("hr",{})]})}}const m0=ep(document.querySelector("#decision_container"));m0.render(v.jsx(h0,{decision:window.decision,onUpdate:e=>window.updateDecision(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
